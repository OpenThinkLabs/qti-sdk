<?xml version = "1.0" encoding = "UTF-8"?>
<xs:schema xmlns="http://www.imsglobal.org/xsd/imsqti_v2p1"
	xmlns:xs="http://www.w3.org/2001/XMLSchema"
    targetNamespace="http://www.imsglobal.org/xsd/imsqti_v2p1"
    version="QTI Compact 2.1"
    elementFormDefault="qualified"
    attributeFormDefault="unqualified">

    <xs:redefine schemaLocation="qtiv2p1/imsqti_v2p1.xsd">
	    <xs:complexType name="AssessmentItemRef.Type">
	    	<xs:complexContent>
	    		<xs:extension base="AssessmentItemRef.Type">
	    			<xs:sequence>
	    				<xs:element name="responseDeclaration" minOccurs="0" maxOccurs="unbounded"/>
	    				<xs:element name="outcomeDeclaration" minOccurs="0" maxOccurs="unbounded"/>
	    				<xs:element name="templateDeclaration" minOccurs="0" maxOccurs="unbounded"/>
	    				<xs:element name="templateProcessing" minOccurs="0" maxOccurs="1"/>
	    				<xs:element name="responseProcessing" minOccurs="0" maxOccurs="1"/>
	    				<xs:element name="modalFeedbackRule" type="ModalFeedbackRule.Type" minOccurs="0" maxOccurs="unbounded"/>
	    				<xs:element name="shuffling" type="Shuffling.Type" minOccurs="0" maxOccurs="unbounded"/>
                        <xs:element name="responseValidityConstraint" type="ResponseValidityConstraint.Type" minOccurs="0" maxOccurs="unbounded"/>
	    			</xs:sequence>
	    			<xs:attribute name="adaptive" default="false" use="optional" type="xs:boolean"/>
	    			<xs:attribute name="timeDependent" use="required" type="xs:boolean"/>
	    			<xs:attribute name="endAttemptIdentifiers" use="optional" type="xs:string"/>
                    <xs:attribute name="title" use="optional" type="xs:string"/>
                    <xs:attribute name="label" use="optional" type="xs:string"/>
	    		</xs:extension>
	    	</xs:complexContent>
	    </xs:complexType>
	    
	    <xs:complexType name="AssessmentSection.Type">
    		<xs:complexContent>
    			<xs:extension base="AssessmentSection.Type">
    				<xs:sequence>
    					<xs:element name="rubricBlockRef" type="RubricBlockRef.Type" minOccurs="0" maxOccurs="unbounded"/>
    				</xs:sequence>
    			</xs:extension>
    		</xs:complexContent>
    	</xs:complexType>
    	
    	<xs:complexType name="TestPart.Type">
    	   <xs:complexContent>
    	       <xs:extension base="TestPart.Type">
    	           <xs:sequence>
    	               <xs:element name="testFeedbackRef" type="TestFeedbackRef.Type" minOccurs="0" maxOccurs="unbounded"/>
    	           </xs:sequence>
    	       </xs:extension>
    	   </xs:complexContent>
    	</xs:complexType>
    	
    	<xs:complexType name="AssessmentTest.Type">
           <xs:complexContent>
               <xs:extension base="AssessmentTest.Type">
                   <xs:sequence>
                       <xs:element name="testFeedbackRef" type="TestFeedbackRef.Type" minOccurs="0" maxOccurs="unbounded"/>
                   </xs:sequence>
               </xs:extension>
           </xs:complexContent>
        </xs:complexType>
    </xs:redefine>
    
    <xs:complexType name="RubricBlockRef.Type" mixed="false">
        <xs:annotation>
            <xs:documentation>
               A reference to an existing rubrickBlock.
            </xs:documentation>
        </xs:annotation>
        <xs:attributeGroup ref="identifier.RubricBlockRef.Attr"/>
        <xs:attributeGroup ref="href.RubricBlockRef.Attr"/>
    </xs:complexType>
    
    <xs:attributeGroup name="href.RubricBlockRef.Attr">
        <xs:attribute name="href" use="required" type="xs:anyURI"/>
    </xs:attributeGroup>
    
    <xs:attributeGroup name="identifier.RubricBlockRef.Attr">
        <xs:attribute name="identifier" use="required" type="xs:normalizedString"/>
    </xs:attributeGroup>
    
    <xs:complexType name="TestFeedbackRef.Type" mixed="false">
        <xs:annotation>
            <xs:documentation>
               A reference to an existing testFeedback.
            </xs:documentation>
        </xs:annotation>
        <xs:attributeGroup ref="identifier.TestFeedbackRef.Attr"/>
        <xs:attributeGroup ref="access.TestFeedbackRef.Attr"/>
        <xs:attributeGroup ref="outcomeIdentifier.TestFeedbackRef.Attr"/>
        <xs:attributeGroup ref="showHide.TestFeedbackRef.Attr"/>
        <xs:attributeGroup ref="href.TestFeedbackRef.Attr"/>
    </xs:complexType>
    
    <xs:attributeGroup name="access.TestFeedbackRef.Attr">
        <xs:attribute name="access" use="required">
            <xs:simpleType>
                <xs:restriction base="xs:string">
                    <xs:enumeration value="atEnd"/>
                    <xs:enumeration value="during"/>
                </xs:restriction>
            </xs:simpleType>
        </xs:attribute>
    </xs:attributeGroup>
    
    <xs:attributeGroup name="outcomeIdentifier.TestFeedbackRef.Attr">
        <xs:attribute name="outcomeIdentifier" use="required" type="Identifier.Type"/>
    </xs:attributeGroup>
    
    <xs:attributeGroup name="showHide.TestFeedbackRef.Attr">
        <xs:attribute name="showHide" use="required">
            <xs:simpleType>
                <xs:restriction base="xs:string">
                    <xs:enumeration value="show"/>
                    <xs:enumeration value="hide"/>
                </xs:restriction>
            </xs:simpleType>
        </xs:attribute>
    </xs:attributeGroup>
    
    <xs:attributeGroup name="href.TestFeedbackRef.Attr">
        <xs:attribute name="href" use="required" type="xs:anyURI"/>
    </xs:attributeGroup>
    
    <xs:attributeGroup name="identifier.TestFeedbackRef.Attr">
    	<xs:attribute name="identifier" use="required" type="xs:normalizedString"/>
    </xs:attributeGroup>
    
    <xs:complexType name="ModalFeedbackRule.Type" mixed="false">
        <xs:annotation>
            <xs:documentation>
                A modalFeedbackRule.
            </xs:documentation>
        </xs:annotation>
        <xs:attributeGroup ref="identifier.ModalFeedbackRule.Attr"/>
        <xs:attributeGroup ref="outcomeIdentifier.ModalFeedbackRule.Attr"/>
        <xs:attributeGroup ref="showHide.ModalFeedbackRule.Attr"/>
        <xs:attributeGroup ref="title.ModalFeedbackRule.Attr"/>
    </xs:complexType>
    
    <xs:attributeGroup name="identifier.ModalFeedbackRule.Attr">
        <xs:attribute name="identifier" use="required" type="xs:normalizedString"/>
    </xs:attributeGroup>
    
    <xs:attributeGroup name="outcomeIdentifier.ModalFeedbackRule.Attr">
        <xs:attribute name="outcomeIdentifier" use="required" type="xs:normalizedString"/>
    </xs:attributeGroup>
    
    <xs:attributeGroup name="showHide.ModalFeedbackRule.Attr">
        <xs:attribute name="showHide" use="required">
            <xs:simpleType>
	            <xs:restriction base="xs:string">
	                <xs:enumeration value="show"/>
	                <xs:enumeration value="hide"/>
	            </xs:restriction>
            </xs:simpleType>
        </xs:attribute>
    </xs:attributeGroup>
    
    <xs:attributeGroup name="title.ModalFeedbackRule.Attr">
        <xs:attribute name="title" use="optional" type="xs:string"/>
    </xs:attributeGroup>
    
    <xs:complexType name="Shuffling.Type" mixed="false">
        <xs:annotation>
            <xs:documentation>
                Data about choice shuffling for interactions.
            </xs:documentation>
        </xs:annotation>
        <xs:sequence>
            <xs:element name="shufflingGroup" type="ShufflingGroup.Type" minOccurs="1" maxOccurs="2"/>
        </xs:sequence>
        <xs:attributeGroup ref="responseIdentifier.Shuffling.Attr"/>
    </xs:complexType>
    
    <xs:attributeGroup name="responseIdentifier.Shuffling.Attr">
        <xs:attribute name="responseIdentifier" use="required" type="xs:normalizedString"/>
    </xs:attributeGroup>
    
    <xs:complexType name="ShufflingGroup.Type" mixed="false">
        <xs:attributeGroup ref="identifiers.ShufflingGroup.Attr"/>
        <xs:attributeGroup ref="fixedIdentifiers.ShufflingGroup.Attr"/>
    </xs:complexType>
    
    <xs:attributeGroup name="identifiers.ShufflingGroup.Attr">
        <xs:attribute name="identifiers" use="required" type="xs:string"/>
    </xs:attributeGroup>
    
    <xs:attributeGroup name="fixedIdentifiers.ShufflingGroup.Attr">
        <xs:attribute name="fixedIdentifiers" use="optional" type="xs:string"/>
    </xs:attributeGroup>
    
    <xs:complexType name="ResponseValidityConstraint.Type" mixed="false">
        <xs:sequence>
            <xs:element name="associationValidityConstraint" type="AssociationValidityConstraint.Type" minOccurs="0" maxOccurs="unbounded"/>
        </xs:sequence>
        <xs:attributeGroup ref="responseIdentifier.ResponseValidityConstraint.Attr"/>
        <xs:attributeGroup ref="minConstraint.ResponseValidityConstraint.Attr"/>
        <xs:attributeGroup ref="maxConstraint.ResponseValidityConstraint.Attr"/>
        <xs:attributeGroup ref="patternMask.ResponseValidityConstraint.Attr"/>
    </xs:complexType>
    
    <xs:attributeGroup name="responseIdentifier.ResponseValidityConstraint.Attr">
        <xs:attribute name="responseIdentifier" use="required" type="xs:normalizedString"/>
    </xs:attributeGroup>
    
    <xs:attributeGroup name="minConstraint.ResponseValidityConstraint.Attr">
        <xs:attribute name="minConstraint" use="required" type="xs:nonNegativeInteger"/>
    </xs:attributeGroup>
    
    <xs:attributeGroup name="maxConstraint.ResponseValidityConstraint.Attr">
        <xs:attribute name="maxConstraint" use="required" type="xs:nonNegativeInteger"/>
    </xs:attributeGroup>
    
    <xs:attributeGroup name="patternMask.ResponseValidityConstraint.Attr">
        <xs:attribute name="patternMask" use="optional" type="NonEmptyString"/>
    </xs:attributeGroup>
    
    <xs:complexType name="AssociationValidityConstraint.Type" mixed="false">
        <xs:attributeGroup ref="identifier.AssociationValidityConstraint.Attr"/>
        <xs:attributeGroup ref="minConstraint.AssociationValidityConstraint.Attr"/>
        <xs:attributeGroup ref="maxConstraint.AssociationValidityConstraint.Attr"/>
    </xs:complexType>
    
    <xs:attributeGroup name="identifier.AssociationValidityConstraint.Attr">
        <xs:attribute name="identifier" use="required" type="xs:normalizedString"/>
    </xs:attributeGroup>
    
    <xs:attributeGroup name="minConstraint.AssociationValidityConstraint.Attr">
        <xs:attribute name="minConstraint" use="required" type="xs:nonNegativeInteger"/>
    </xs:attributeGroup>
    
    <xs:attributeGroup name="maxConstraint.AssociationValidityConstraint.Attr">
        <xs:attribute name="maxConstraint" use="required" type="xs:nonNegativeInteger"/>
    </xs:attributeGroup>
    
    <!-- Non empty string type. -->
    <xs:simpleType name="NonEmptyString">
        <xs:restriction base="xs:string">
            <xs:minLength value="1"/>
        </xs:restriction>
    </xs:simpleType>
</xs:schema>
