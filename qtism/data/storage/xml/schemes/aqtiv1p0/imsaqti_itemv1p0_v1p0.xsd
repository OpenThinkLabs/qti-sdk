<?xml version = "1.0" encoding = "UTF-8"?>
<xs:schema xmlns="http://www.imsglobal.org/xsd/imsaqti_item_v1p0"
           targetNamespace="http://www.imsglobal.org/xsd/imsaqti_item_v1p0"
           xmlns:xi="http://www.w3.org/2001/XInclude"
           xmlns:m3="http://www.w3.org/2010/Math/MathML"
           xmlns:ssml="http://www.w3.org/2010/10/synthesis"
           xmlns:xs="http://www.w3.org/2001/XMLSchema"
           xmlns:sch="http://purl.oclc.org/dsdl/schematron"
           version="IMS AQTI ITEM 1.0.0"
           elementFormDefault="qualified"
           attributeFormDefault="unqualified">
    <xs:import namespace="http://www.w3.org/XML/1998/namespace" schemaLocation="http://www.imsglobal.org/xsd/w3/2001/xml.xsd" />
    <xs:import namespace="http://www.w3.org/2001/XInclude" schemaLocation="http://www.imsglobal.org/xsd/w3/2001/XInclude.xsd" />
    <xs:import namespace="http://www.w3.org/2010/Math/MathML" schemaLocation="http://www.imsglobal.org/xsd/w3/Math/XMLSchema/mathml3/mathml3.xsd" />
    <xs:import namespace="http://www.w3.org/2010/10/synthesis" schemaLocation="http://www.imsglobal.org/xsd/w3/2010/ssmlv1p1-core.xsd" />

    <xs:annotation>
        <xs:documentation>
            XSD Data File Information
            =========================
            Author:         Colin Smythe (IMS Global UK) and Mark McKell (IMS, Global, USA)
            Date:           12th February, 2017
            Version:        Draft 8.0
            Status:         Base Document
            Description:    This is the Platform Specific Model for the IMS aQTIv1.0 specification Information Model. It is from this model that the corresponding XSD is generated.

            HAND EDITS:     a) Change the namespace to "http://www.imsglobal.org/xsd/imsaqti_item_v1p0"
            b) Change the schema version to "IMS AQTI ITEM 1.0.0"
            c) Remove all references to MathMl 2
            d) Remove all reference to "apip" namespace
            e) Add in the APIP QTI Extension XSD material
            1) Use a single SSML namespace/prefix of SSML and "http://www.w3.org/2010/10/synthesis"
            2) Rename apipAaccessibility to "accessibility"
            3) Rename "APIPaccessibility.Type" to "Accessibility.type"
            4) Change the "apip" prefx namespace in the APIP schematron rules to "http://www.imsglobal.org/xsd/imsaqti_item_v1p0"
            5) Delete "grpLax" in the APIP QTI XSD
            6) Delete "EmptyPrimitiveType.Type"
            f) Add in the QTI HTML5 XSD
            1) Remove all references to the HTML5 namespace
            2) Change the "qh5" prefix naspamce in the Schematron rules to "http://www.imsglobal.org/xsd/imsaqti_item_v1p0"
            3) Remove MathMl 2 references
            4) Remove prefix "qti" references
            5) Remove "UniqueIdentifier.Type" "StringList.Type", "MimeType", "ElementIDList.Type", "EmptyPrimitiveType.Type"
            g) The 'dataExtension' schematron rules have been removed to simplify hand-edit consistency;
            h) ALL of the Schematron Rules have been removed for this draft release.

            NON-ITEM-BASED FEATURE DELETIONS
            a) The class AssessmentTest.Type and element 'assessmentTest' have been removed;
            b) The class TestPart.Type and element 'testPart' have been removed;
            c) The class AssessmentSection.Type and element 'assessmentSection' have been removed;
            d) The class Ordering.Type and element 'ordering' have been removed;
            e) The class Selection.Type and element 'selection' have been removed;
            f) The class AssessmentSectionRef.Type and element 'assessmentSectionRef' have been removed;
            g) The class AssessmentItemRef.Type and element 'assessmentItemRef' have been removed;
            h) The class TimeLimits.Type and element timeLimits have been removed;

            SUPPORTED CHANGE PROPOSALS
            a) 'Web Component Naming Convention';
            b) 'Context Declarations' - including the new extensible set of enumerated tokens for the 'support' attribute on the 'card' element;
            c) 'An Alternative Approach to Referencing and Storing Support-Specific Content';
            d) 'Sign Language Support Using Catalog Method';
            e) 'Text-to-Speech Suppression for Screen- Reader and Read-Aloud Candidates';
            f) 'Support for ARIA 1.0' - addition of all the ARIA attributes and support for all role values;
            g) 'Reduction of APIP Elements in aQTI'.

            IMPORTANT NOTE: THIS XSD IS PRODUCED TO ALLOW EARLY TESTING AND EVALUATION OF THE aQTI SPECIFICATION.
            IT HAS BEEN HAND PRODUCED I.E. NOT USING THE IMS MODEL DRIVEN SPECIFICATION TOOLKIT.
            THE OFFICIAL VERSION WILL BE CREATED USING THE IMS MODEL DRIVEN SPECIFICATION TOOLKIT.

            THIS XSD IS NOT DEFINITIVE.

            License:        IPR and Distribution Notices

            This machine readable file is derived from IMS Global specification IMS Question and Test Interoperability (QTI) Version 2.2
            found at http://www.imsglobal.org/question and the original IMS Global schema binding or code base
            http://www.imsglobal.org/qti.

            Recipients of this document are requested to submit, with their comments, notification of any relevant
            patent claims or other intellectual property rights of which they may be aware that might be infringed by
            any implementation of the specification set forth in this document, and to provide supporting documentation.

            IMS takes no position regarding the validity or scope of any intellectual property or other rights that might
            be claimed to pertain to the implementation or use of the technology described in this document or the extent
            to which any license under such rights might or might not be available; neither does it represent that it has
            made any effort to identify any such rights. Information on IMS procedures with respect to rights in IMS
            specifications can be found at the IMS Global Intellectual Property Rights web page: http://www.imsglobal.org/ipr/imsipr_policyFinal.pdf.

            Copyright (c) IMS Global Learning Consortium 1999-2017. All Rights Reserved.

            Use of this specification to develop products or services is governed by the license with IMS found on the IMS website: http://www.imsglobal.org/license.html.

            Permission is granted to all parties to use excerpts from this document as needed in producing requests for proposals.

            The limited permissions granted above are perpetual and will not be revoked by IMS or its successors or assigns.

            THIS SPECIFICATION IS BEING OFFERED WITHOUT ANY WARRANTY WHATSOEVER, AND IN PARTICULAR, ANY WARRANTY OF NONINFRINGEMENT IS
            EXPRESSLY DISCLAIMED. ANY USE OF THIS SPECIFICATION SHALL BE MADE ENTIRELY AT THE IMPLEMENTERS OWN RISK, AND NEITHER THE CONSORTIUM
            NOR ANY OF ITS MEMBERS OR SUBMITTERS, SHALL HAVE ANY LIABILITY WHATSOEVER TO ANY IMPLEMENTER OR THIRD PARTY FOR ANY DAMAGES OF
            ANY NATURE WHATSOEVER, DIRECTLY OR INDIRECTLY, ARISING FROM THE USE OF THIS SPECIFICATION.

            Source UML File Information
            ===========================
            The source file information must be supplied as an XMI file (without diagram layout information).
            The supported UML authoring tools are:
            (a) Poseidon - v6 (and later)
            (b) Papyrus - v0.10.2 (and later)

            Source XSLT File Information
            ============================
            XSL Generator:    Specificationv1p0_GenerationToolv1.xsl
            XSLT Processor:   Saxon-PE-9.5.0.2
            Release:          1.0
            Date:             31st July, 2014
            Autogen Engineer: Colin Smythe (IMS Global, UK)
            Autogen Date:     2015-12-14

            IMS Global Auto-generation Binding Tool-kit (I-BAT)
            ===================================================
            This file was auto-generated using the IMS Global Binding Auto-generation Tool-kit (I-BAT).  While every
            attempt has been made to ensure that this tool auto-generates the files correctly, users should be aware
            that this is an experimental tool.  Permission is given to make use of this tool.  IMS Global makes no
            claim on the materials created by third party users of this tool.  Details on how to use this tool
            are contained in the IMS Global "I-BAT" documentation available at the IMS Global web-site:
            http://www.imsglobal.org.

            Tool Copyright:  2012-2017  (c) IMS Global Learning Consortium Inc.  All Rights Reserved.
        </xs:documentation>
    </xs:annotation>

    <!-- Generate Global Attributes (non-assigned) ******************************************************** -->

    <!-- ================================================================================================== -->

    <!-- Generate Global Attributes *********************************************************************** -->

    <xs:attributeGroup name="href.A.Attr">
        <xs:attribute name="href" use="required" type="xs:anyURI" />
    </xs:attributeGroup>

    <xs:attributeGroup name="type.A.Attr">
        <xs:attribute name="type" use="optional" type="MimeType.Type" />
    </xs:attributeGroup>

    <xs:attributeGroup name="max.AnyN.Attr">
        <xs:attribute name="max" use="required">
            <xs:simpleType>
                <xs:union>
                    <xs:simpleType>
                        <xs:restriction base="xs:integer" />
                    </xs:simpleType>
                    <xs:simpleType>
                        <xs:restriction base="VariableString.Type" />
                    </xs:simpleType>
                </xs:union>
            </xs:simpleType>
        </xs:attribute>
    </xs:attributeGroup>

    <xs:attributeGroup name="min.AnyN.Attr">
        <xs:attribute name="min" use="required">
            <xs:simpleType>
                <xs:union>
                    <xs:simpleType>
                        <xs:restriction base="xs:integer" />
                    </xs:simpleType>
                    <xs:simpleType>
                        <xs:restriction base="VariableString.Type" />
                    </xs:simpleType>
                </xs:union>
            </xs:simpleType>
        </xs:attribute>
    </xs:attributeGroup>

    <xs:attributeGroup name="coords.AreaMapEntry.Attr">
        <xs:attribute name="coords" use="required" type="Coords.Type" />
    </xs:attributeGroup>

    <xs:attributeGroup name="mappedValue.AreaMapEntry.Attr">
        <xs:attribute name="mappedValue" use="required" type="xs:double" />
    </xs:attributeGroup>

    <xs:attributeGroup name="shape.AreaMapEntry.Attr">
        <xs:attribute name="shape" use="required">
            <xs:simpleType>
                <xs:restriction base="xs:string">
                    <xs:enumeration value="circle" />
                    <xs:enumeration value="default" />
                    <xs:enumeration value="ellipse" />
                    <xs:enumeration value="poly" />
                    <xs:enumeration value="rect" />
                </xs:restriction>
            </xs:simpleType>
        </xs:attribute>
    </xs:attributeGroup>

    <xs:attributeGroup name="defaultValue.AreaMapping.Attr">
        <xs:attribute name="defaultValue" use="optional" default="0" type="xs:double" />
    </xs:attributeGroup>

    <xs:attributeGroup name="lowerBound.AreaMapping.Attr">
        <xs:attribute name="lowerBound" use="optional" type="xs:double" />
    </xs:attributeGroup>

    <xs:attributeGroup name="upperBound.AreaMapping.Attr">
        <xs:attribute name="upperBound" use="optional" type="xs:double" />
    </xs:attributeGroup>

    <xs:attributeGroup name="adaptive.AssessmentItem.Attr">
        <xs:attribute name="adaptive" use="optional" default="false" type="xs:boolean" />
    </xs:attributeGroup>

    <xs:attributeGroup name="identifier.AssessmentItem.Attr">
        <xs:attribute name="identifier" use="required" type="xs:normalizedString" />
    </xs:attributeGroup>

    <xs:attributeGroup name="label.AssessmentItem.Attr">
        <xs:attribute name="label" use="optional" type="xs:normalizedString" />
    </xs:attributeGroup>

    <xs:attributeGroup name="language.AssessmentItem.Attr">
        <xs:attribute ref="xml:lang" use="optional" />
    </xs:attributeGroup>

    <xs:attributeGroup name="timeDependent.AssessmentItem.Attr">
        <xs:attribute name="timeDependent" use="required" type="xs:boolean" />
    </xs:attributeGroup>

    <xs:attributeGroup name="title.AssessmentItem.Attr">
        <xs:attribute name="title" use="required" type="xs:normalizedString" />
    </xs:attributeGroup>

    <xs:attributeGroup name="toolName.AssessmentItem.Attr">
        <xs:attribute name="toolName" use="optional" type="xs:normalizedString" />
    </xs:attributeGroup>

    <xs:attributeGroup name="toolVersion.AssessmentItem.Attr">
        <xs:attribute name="toolVersion" use="optional" type="xs:normalizedString" />
    </xs:attributeGroup>

    <xs:attributeGroup name="identifier.AssessmentStimulus.Attr">
        <xs:attribute name="identifier" use="required" type="xs:normalizedString" />
    </xs:attributeGroup>

    <xs:attributeGroup name="label.AssessmentStimulus.Attr">
        <xs:attribute name="label" use="optional" type="xs:normalizedString" />
    </xs:attributeGroup>

    <xs:attributeGroup name="language.AssessmentStimulus.Attr">
        <xs:attribute ref="xml:lang" use="optional" />
    </xs:attributeGroup>

    <xs:attributeGroup name="title.AssessmentStimulus.Attr">
        <xs:attribute name="title" use="required" type="xs:normalizedString" />
    </xs:attributeGroup>

    <xs:attributeGroup name="toolName.AssessmentStimulus.Attr">
        <xs:attribute name="toolName" use="optional" type="xs:normalizedString" />
    </xs:attributeGroup>

    <xs:attributeGroup name="toolVersion.AssessmentStimulus.Attr">
        <xs:attribute name="toolVersion" use="optional" type="xs:normalizedString" />
    </xs:attributeGroup>

    <xs:attributeGroup name="href.AssessmentStimulusRef.Attr">
        <xs:attribute name="href" use="required" type="xs:anyURI" />
    </xs:attributeGroup>

    <xs:attributeGroup name="identifier.AssessmentStimulusRef.Attr">
        <xs:attribute name="identifier" use="required" type="xs:normalizedString" />
    </xs:attributeGroup>

    <xs:attributeGroup name="coords.AssociableHotspot.Attr">
        <xs:attribute name="coords" use="required" type="Coords.Type" />
    </xs:attributeGroup>

    <xs:attributeGroup name="hotspot-label.AssociableHotspot.Attr">
        <xs:attribute name="hotspot-label" use="optional" type="xs:string" />
    </xs:attributeGroup>

    <xs:attributeGroup name="identifier.AssociableHotspot.Attr">
        <xs:attribute name="identifier" use="required" type="Identifier.Type" />
    </xs:attributeGroup>

    <xs:attributeGroup name="match-group.AssociableHotspot.Attr">
        <xs:attribute name="match-group" use="optional">
            <xs:simpleType>
                <xs:list itemType="IdentifierList.Type" />
            </xs:simpleType>
        </xs:attribute>
    </xs:attributeGroup>

    <xs:attributeGroup name="match-max.AssociableHotspot.Attr">
        <xs:attribute name="match-max" use="required" type="xs:nonNegativeInteger" />
    </xs:attributeGroup>

    <xs:attributeGroup name="match-min.AssociableHotspot.Attr">
        <xs:attribute name="match-min" use="optional" default="0" type="xs:nonNegativeInteger" />
    </xs:attributeGroup>

    <xs:attributeGroup name="shape.AssociableHotspot.Attr">
        <xs:attribute name="shape" use="required">
            <xs:simpleType>
                <xs:restriction base="xs:string">
                    <xs:enumeration value="circle" />
                    <xs:enumeration value="default" />
                    <xs:enumeration value="ellipse" />
                    <xs:enumeration value="poly" />
                    <xs:enumeration value="rect" />
                </xs:restriction>
            </xs:simpleType>
        </xs:attribute>
    </xs:attributeGroup>

    <xs:attributeGroup name="show-hide.AssociableHotspot.Attr">
        <xs:attribute name="show-hide" use="optional" default="show">
            <xs:simpleType>
                <xs:restriction base="xs:string">
                    <xs:enumeration value="show" />
                    <xs:enumeration value="hide" />
                </xs:restriction>
            </xs:simpleType>
        </xs:attribute>
    </xs:attributeGroup>

    <xs:attributeGroup name="template-identifier.AssociableHotspot.Attr">
        <xs:attribute name="template-identifier" use="optional" type="Identifier.Type" />
    </xs:attributeGroup>

    <xs:attributeGroup name="max-associations.AssociateInteraction.Attr">
        <xs:attribute name="max-associations" use="optional" default="1" type="xs:nonNegativeInteger" />
    </xs:attributeGroup>

    <xs:attributeGroup name="min-associations.AssociateInteraction.Attr">
        <xs:attribute name="min-associations" use="optional" default="0" type="xs:nonNegativeInteger" />
    </xs:attributeGroup>

    <xs:attributeGroup name="shuffle.AssociateInteraction.Attr">
        <xs:attribute name="shuffle" use="optional" default="false" type="xs:boolean" />
    </xs:attributeGroup>

    <xs:attributeGroup name="aria-controls.BasePromptInteraction.Attr">
        <xs:attribute name="aria-controls" use="optional">
            <xs:simpleType>
                <xs:list itemType="ElementIDList.Type" />
            </xs:simpleType>
        </xs:attribute>
    </xs:attributeGroup>

    <xs:attributeGroup name="aria-describedby.BasePromptInteraction.Attr">
        <xs:attribute name="aria-describedby" use="optional">
            <xs:simpleType>
                <xs:list itemType="ElementIDList.Type" />
            </xs:simpleType>
        </xs:attribute>
    </xs:attributeGroup>

    <xs:attributeGroup name="aria-flowsto.BasePromptInteraction.Attr">
        <xs:attribute name="aria-flowsto" use="optional">
            <xs:simpleType>
                <xs:list itemType="ElementIDList.Type" />
            </xs:simpleType>
        </xs:attribute>
    </xs:attributeGroup>

    <xs:attributeGroup name="aria-label.BasePromptInteraction.Attr">
        <xs:attribute name="aria-label" use="optional" type="xs:normalizedString" />
    </xs:attributeGroup>

    <xs:attributeGroup name="aria-labelledby.BasePromptInteraction.Attr">
        <xs:attribute name="aria-labelledby" use="optional">
            <xs:simpleType>
                <xs:list itemType="ElementIDList.Type" />
            </xs:simpleType>
        </xs:attribute>
    </xs:attributeGroup>

    <xs:attributeGroup name="aria-level.BasePromptInteraction.Attr">
        <xs:attribute name="aria-level" use="optional" type="ARIALevelInteger.Type" />
    </xs:attributeGroup>

    <xs:attributeGroup name="aria-live.BasePromptInteraction.Attr">
        <xs:attribute name="aria-live" use="optional">
            <xs:simpleType>
                <xs:restriction base="xs:string">
                    <xs:enumeration value="off" />
                    <xs:enumeration value="polite" />
                    <xs:enumeration value="assertive" />
                </xs:restriction>
            </xs:simpleType>
        </xs:attribute>
    </xs:attributeGroup>

    <xs:attributeGroup name="aria-orientation.BasePromptInteraction.Attr">
        <xs:attribute name="aria-orientation" use="optional" default="horizontal">
            <xs:simpleType>
                <xs:restriction base="xs:string">
                    <xs:enumeration value="vertical" />
                    <xs:enumeration value="horizontal" />
                </xs:restriction>
            </xs:simpleType>
        </xs:attribute>
    </xs:attributeGroup>

    <xs:attributeGroup name="aria-owns.BasePromptInteraction.Attr">
        <xs:attribute name="aria-owns" use="optional">
            <xs:simpleType>
                <xs:list itemType="ElementIDList.Type" />
            </xs:simpleType>
        </xs:attribute>
    </xs:attributeGroup>

    <xs:attributeGroup name="base.BasePromptInteraction.Attr">
        <xs:attribute ref="xml:base" use="optional" />
    </xs:attributeGroup>

    <xs:attributeGroup name="class.BasePromptInteraction.Attr">
        <xs:attribute name="class" use="optional">
            <xs:simpleType>
                <xs:list itemType="StringList.Type" />
            </xs:simpleType>
        </xs:attribute>
    </xs:attributeGroup>

    <xs:attributeGroup name="dataExtension.BasePromptInteraction.Attr">
        <xs:anyAttribute namespace = "##any" processContents = "lax" />
    </xs:attributeGroup>

    <xs:attributeGroup name="dir.BasePromptInteraction.Attr">
        <xs:attribute name="dir" use="optional" default="auto">
            <xs:simpleType>
                <xs:restriction base="xs:string">
                    <xs:enumeration value="ltr" />
                    <xs:enumeration value="rtl" />
                    <xs:enumeration value="auto" />
                </xs:restriction>
            </xs:simpleType>
        </xs:attribute>
    </xs:attributeGroup>

    <xs:attributeGroup name="id.BasePromptInteraction.Attr">
        <xs:attribute name="id" use="optional" type="UniqueIdentifier.Type" />
    </xs:attributeGroup>

    <xs:attributeGroup name="label.BasePromptInteraction.Attr">
        <xs:attribute name="label" use="optional" type="xs:normalizedString" />
    </xs:attributeGroup>

    <xs:attributeGroup name="language.BasePromptInteraction.Attr">
        <xs:attribute ref="xml:lang" use="optional" />
    </xs:attributeGroup>

    <xs:attributeGroup name="response-identifier.BasePromptInteraction.Attr">
        <xs:attribute name="response-identifier" use="required" type="Identifier.Type" />
    </xs:attributeGroup>

    <xs:attributeGroup name="role.BasePromptInteraction.Attr">
        <xs:attribute name="role" use="optional">
            <xs:simpleType>
                <xs:restriction base="xs:string">
                    <xs:enumeration value="alert" />                        <!-- Added 20170106 -->
                    <xs:enumeration value="alertdialog" />                  <!-- Added 20170106 -->
                    <xs:enumeration value="application" />                  <!-- Added 20170106 -->
                    <xs:enumeration value="article" />
                    <xs:enumeration value="banner" />                       <!-- Added 20170106 -->
                    <xs:enumeration value="button" />
                    <xs:enumeration value="checkbox" />
                    <xs:enumeration value="columnheader" />
                    <xs:enumeration value="combobox" />                     <!-- Added 20170106 -->
                    <xs:enumeration value="complementary" />
                    <xs:enumeration value="contentinfo" />
                    <xs:enumeration value="definition" />
                    <xs:enumeration value="dialog" />                       <!-- Added 20170106 -->
                    <xs:enumeration value="directory" />
                    <xs:enumeration value="document" />
                    <xs:enumeration value="form" />                         <!-- Added 20170106 -->
                    <xs:enumeration value="grid" />                         <!-- Added 20170106 -->
                    <xs:enumeration value="gridcell" />
                    <xs:enumeration value="group" />
                    <xs:enumeration value="heading" />
                    <xs:enumeration value="img" />
                    <xs:enumeration value="link" />
                    <xs:enumeration value="list" />
                    <xs:enumeration value="listbox" />
                    <xs:enumeration value="listitem" />
                    <xs:enumeration value="log" />
                    <xs:enumeration value="main" />                         <!-- Added 20170106 -->
                    <xs:enumeration value="marquee" />                      <!-- Added 20170106 -->
                    <xs:enumeration value="math" />
                    <xs:enumeration value="menu" />                         <!-- Added 20170106 -->
                    <xs:enumeration value="menubar" />                      <!-- Added 20170106 -->
                    <xs:enumeration value="menuitem" />                     <!-- Added 20170106 -->
                    <xs:enumeration value="menuitemcheckbox" />             <!-- Added 20170106 -->
                    <xs:enumeration value="menuitemradio" />                <!-- Added 20170106 -->
                    <xs:enumeration value="navigation" />                   <!-- Added 20170106 -->
                    <xs:enumeration value="note" />
                    <xs:enumeration value="option" />
                    <xs:enumeration value="presentation" />
                    <xs:enumeration value="progressbar" />                  <!-- Added 20170106 -->
                    <xs:enumeration value="radio" />
                    <xs:enumeration value="radiogroup" />
                    <xs:enumeration value="region" />
                    <xs:enumeration value="row" />
                    <xs:enumeration value="rowgroup" />
                    <xs:enumeration value="rowheader" />
                    <xs:enumeration value="scrollbar" />                    <!-- Added 20170106 -->
                    <xs:enumeration value="search" />                       <!-- Added 20170106 -->
                    <xs:enumeration value="separator" />
                    <xs:enumeration value="slider" />
                    <xs:enumeration value="spinbutton" />
                    <xs:enumeration value="status" />
                    <xs:enumeration value="tab" />
                    <xs:enumeration value="tablist" />
                    <xs:enumeration value="tabpanel" />
                    <xs:enumeration value="textbox" />
                    <xs:enumeration value="timer" />
                    <xs:enumeration value="toolbar" />
                    <xs:enumeration value="tooltip" />                      <!-- Added 20170106 -->
                    <xs:enumeration value="tree" />                         <!-- Added 20170106 -->
                    <xs:enumeration value="treegrid" />                     <!-- Added 20170106 -->
                    <xs:enumeration value="treeitem" />                     <!-- Added 20170106 -->
                </xs:restriction>
            </xs:simpleType>
        </xs:attribute>
    </xs:attributeGroup>

    <xs:attributeGroup name="aria-controls.BaseSequence.Attr">
        <xs:attribute name="aria-controls" use="optional">
            <xs:simpleType>
                <xs:list itemType="ElementIDList.Type" />
            </xs:simpleType>
        </xs:attribute>
    </xs:attributeGroup>

    <xs:attributeGroup name="aria-describedby.BaseSequence.Attr">
        <xs:attribute name="aria-describedby" use="optional">
            <xs:simpleType>
                <xs:list itemType="ElementIDList.Type" />
            </xs:simpleType>
        </xs:attribute>
    </xs:attributeGroup>

    <xs:attributeGroup name="aria-flowto.BaseSequence.Attr">
        <xs:attribute name="aria-flowto" use="optional">
            <xs:simpleType>
                <xs:list itemType="ElementIDList.Type" />
            </xs:simpleType>
        </xs:attribute>
    </xs:attributeGroup>

    <xs:attributeGroup name="aria-label.BaseSequence.Attr">
        <xs:attribute name="aria-label" use="optional" type="xs:normalizedString" />
    </xs:attributeGroup>

    <xs:attributeGroup name="aria-labelledby.BaseSequence.Attr">
        <xs:attribute name="aria-labelledby" use="optional">
            <xs:simpleType>
                <xs:list itemType="ElementIDList.Type" />
            </xs:simpleType>
        </xs:attribute>
    </xs:attributeGroup>

    <xs:attributeGroup name="aria-level.BaseSequence.Attr">
        <xs:attribute name="aria-level" use="optional" type="ARIALevelInteger.Type" />
    </xs:attributeGroup>

    <xs:attributeGroup name="aria-live.BaseSequence.Attr">
        <xs:attribute name="aria-live" use="optional" default="off">
            <xs:simpleType>
                <xs:restriction base="xs:string">
                    <xs:enumeration value="off" />
                    <xs:enumeration value="polite" />
                    <xs:enumeration value="assertive" />
                </xs:restriction>
            </xs:simpleType>
        </xs:attribute>
    </xs:attributeGroup>

    <xs:attributeGroup name="aria-orientation.BaseSequence.Attr">
        <xs:attribute name="aria-orientation" use="optional" default="horizontal">
            <xs:simpleType>
                <xs:restriction base="xs:string">
                    <xs:enumeration value="vertical" />
                    <xs:enumeration value="horizontal" />
                </xs:restriction>
            </xs:simpleType>
        </xs:attribute>
    </xs:attributeGroup>

    <xs:attributeGroup name="aria-owns.BaseSequence.Attr">
        <xs:attribute name="aria-owns" use="optional">
            <xs:simpleType>
                <xs:list itemType="ElementIDList.Type" />
            </xs:simpleType>
        </xs:attribute>
    </xs:attributeGroup>

    <xs:attributeGroup name="class.BaseSequence.Attr">
        <xs:attribute name="class" use="optional">
            <xs:simpleType>
                <xs:list itemType="StringList.Type" />
            </xs:simpleType>
        </xs:attribute>
    </xs:attributeGroup>

    <xs:attributeGroup name="dataExtension.BaseSequence.Attr">
        <xs:anyAttribute namespace = "##any" processContents = "lax" />
    </xs:attributeGroup>

    <xs:attributeGroup name="dir.BaseSequence.Attr">
        <xs:attribute name="dir" use="optional" default="auto">
            <xs:simpleType>
                <xs:restriction base="xs:string">
                    <xs:enumeration value="ltr" />
                    <xs:enumeration value="rtl" />
                    <xs:enumeration value="auto" />
                </xs:restriction>
            </xs:simpleType>
        </xs:attribute>
    </xs:attributeGroup>

    <xs:attributeGroup name="id.BaseSequence.Attr">
        <xs:attribute name="id" use="optional" type="UniqueIdentifier.Type" />
    </xs:attributeGroup>

    <xs:attributeGroup name="label.BaseSequence.Attr">
        <xs:attribute name="label" use="optional" type="xs:normalizedString" />
    </xs:attributeGroup>

    <xs:attributeGroup name="language.BaseSequence.Attr">
        <xs:attribute ref="xml:lang" use="optional" />
    </xs:attributeGroup>

    <xs:attributeGroup name="role.BaseSequence.Attr">
        <xs:attribute name="role" use="optional">
            <xs:simpleType>
                <xs:restriction base="xs:string">
                    <xs:enumeration value="alert" />                        <!-- Added 20170106 -->
                    <xs:enumeration value="alertdialog" />                  <!-- Added 20170106 -->
                    <xs:enumeration value="application" />                  <!-- Added 20170106 -->
                    <xs:enumeration value="article" />
                    <xs:enumeration value="banner" />                       <!-- Added 20170106 -->
                    <xs:enumeration value="button" />
                    <xs:enumeration value="checkbox" />
                    <xs:enumeration value="columnheader" />
                    <xs:enumeration value="combobox" />                     <!-- Added 20170106 -->
                    <xs:enumeration value="complementary" />
                    <xs:enumeration value="contentinfo" />
                    <xs:enumeration value="definition" />
                    <xs:enumeration value="dialog" />                       <!-- Added 20170106 -->
                    <xs:enumeration value="directory" />
                    <xs:enumeration value="document" />
                    <xs:enumeration value="form" />                         <!-- Added 20170106 -->
                    <xs:enumeration value="grid" />                         <!-- Added 20170106 -->
                    <xs:enumeration value="gridcell" />
                    <xs:enumeration value="group" />
                    <xs:enumeration value="heading" />
                    <xs:enumeration value="img" />
                    <xs:enumeration value="link" />
                    <xs:enumeration value="list" />
                    <xs:enumeration value="listbox" />
                    <xs:enumeration value="listitem" />
                    <xs:enumeration value="log" />
                    <xs:enumeration value="main" />                         <!-- Added 20170106 -->
                    <xs:enumeration value="marquee" />                      <!-- Added 20170106 -->
                    <xs:enumeration value="math" />
                    <xs:enumeration value="menu" />                         <!-- Added 20170106 -->
                    <xs:enumeration value="menubar" />                      <!-- Added 20170106 -->
                    <xs:enumeration value="menuitem" />                     <!-- Added 20170106 -->
                    <xs:enumeration value="menuitemcheckbox" />             <!-- Added 20170106 -->
                    <xs:enumeration value="menuitemradio" />                <!-- Added 20170106 -->
                    <xs:enumeration value="navigation" />                   <!-- Added 20170106 -->
                    <xs:enumeration value="note" />
                    <xs:enumeration value="option" />
                    <xs:enumeration value="presentation" />
                    <xs:enumeration value="progressbar" />                  <!-- Added 20170106 -->
                    <xs:enumeration value="radio" />
                    <xs:enumeration value="radiogroup" />
                    <xs:enumeration value="region" />
                    <xs:enumeration value="row" />
                    <xs:enumeration value="rowgroup" />
                    <xs:enumeration value="rowheader" />
                    <xs:enumeration value="scrollbar" />                    <!-- Added 20170106 -->
                    <xs:enumeration value="search" />                       <!-- Added 20170106 -->
                    <xs:enumeration value="separator" />
                    <xs:enumeration value="slider" />
                    <xs:enumeration value="spinbutton" />
                    <xs:enumeration value="status" />
                    <xs:enumeration value="tab" />
                    <xs:enumeration value="tablist" />
                    <xs:enumeration value="tabpanel" />
                    <xs:enumeration value="textbox" />
                    <xs:enumeration value="timer" />
                    <xs:enumeration value="toolbar" />
                    <xs:enumeration value="tooltip" />                      <!-- Added 20170106 -->
                    <xs:enumeration value="tree" />                         <!-- Added 20170106 -->
                    <xs:enumeration value="treegrid" />                     <!-- Added 20170106 -->
                    <xs:enumeration value="treeitem" />                     <!-- Added 20170106 -->
                </xs:restriction>
            </xs:simpleType>
        </xs:attribute>
    </xs:attributeGroup>

    <xs:attributeGroup name="aria-controls.BaseSequenceFull.Attr">
        <xs:attribute name="aria-controls" use="optional">
            <xs:simpleType>
                <xs:list itemType="ElementIDList.Type" />
            </xs:simpleType>
        </xs:attribute>
    </xs:attributeGroup>

    <xs:attributeGroup name="aria-describedby.BaseSequenceFull.Attr">
        <xs:attribute name="aria-describedby" use="optional">
            <xs:simpleType>
                <xs:list itemType="ElementIDList.Type" />
            </xs:simpleType>
        </xs:attribute>
    </xs:attributeGroup>

    <xs:attributeGroup name="aria-flowto.BaseSequenceFull.Attr">
        <xs:attribute name="aria-flowto" use="optional">
            <xs:simpleType>
                <xs:list itemType="ElementIDList.Type" />
            </xs:simpleType>
        </xs:attribute>
    </xs:attributeGroup>

    <xs:attributeGroup name="aria-label.BaseSequenceFull.Attr">
        <xs:attribute name="aria-label" use="optional" type="xs:normalizedString" />
    </xs:attributeGroup>

    <xs:attributeGroup name="aria-labelledby.BaseSequenceFull.Attr">
        <xs:attribute name="aria-labelledby" use="optional">
            <xs:simpleType>
                <xs:list itemType="ElementIDList.Type" />
            </xs:simpleType>
        </xs:attribute>
    </xs:attributeGroup>

    <xs:attributeGroup name="aria-level.BaseSequenceFull.Attr">
        <xs:attribute name="aria-level" use="optional" type="ARIALevelInteger.Type" />
    </xs:attributeGroup>

    <xs:attributeGroup name="aria-live.BaseSequenceFull.Attr">
        <xs:attribute name="aria-live" use="optional">
            <xs:simpleType>
                <xs:restriction base="xs:string">
                    <xs:enumeration value="off" />
                    <xs:enumeration value="polite" />
                    <xs:enumeration value="assertive" />
                </xs:restriction>
            </xs:simpleType>
        </xs:attribute>
    </xs:attributeGroup>

    <xs:attributeGroup name="aria-orientation.BaseSequenceFull.Attr">
        <xs:attribute name="aria-orientation" use="optional" default="horizontal">
            <xs:simpleType>
                <xs:restriction base="xs:string">
                    <xs:enumeration value="vertical" />
                    <xs:enumeration value="horizontal" />
                </xs:restriction>
            </xs:simpleType>
        </xs:attribute>
    </xs:attributeGroup>

    <xs:attributeGroup name="aria-owns.BaseSequenceFull.Attr">
        <xs:attribute name="aria-owns" use="optional">
            <xs:simpleType>
                <xs:list itemType="ElementIDList.Type" />
            </xs:simpleType>
        </xs:attribute>
    </xs:attributeGroup>

    <xs:attributeGroup name="base.BaseSequenceFull.Attr">
        <xs:attribute ref="xml:base" use="optional" />
    </xs:attributeGroup>

    <xs:attributeGroup name="class.BaseSequenceFull.Attr">
        <xs:attribute name="class" use="optional">
            <xs:simpleType>
                <xs:list itemType="StringList.Type" />
            </xs:simpleType>
        </xs:attribute>
    </xs:attributeGroup>

    <xs:attributeGroup name="dataExtension.BaseSequenceFull.Attr">
        <xs:anyAttribute namespace = "##any" processContents = "lax" />
    </xs:attributeGroup>

    <xs:attributeGroup name="dir.BaseSequenceFull.Attr">
        <xs:attribute name="dir" use="optional" default="auto">
            <xs:simpleType>
                <xs:restriction base="xs:string">
                    <xs:enumeration value="ltr" />
                    <xs:enumeration value="rtl" />
                    <xs:enumeration value="auto" />
                </xs:restriction>
            </xs:simpleType>
        </xs:attribute>
    </xs:attributeGroup>

    <xs:attributeGroup name="id.BaseSequenceFull.Attr">
        <xs:attribute name="id" use="optional" type="UniqueIdentifier.Type" />
    </xs:attributeGroup>

    <xs:attributeGroup name="label.BaseSequenceFull.Attr">
        <xs:attribute name="label" use="optional" type="xs:normalizedString" />
    </xs:attributeGroup>

    <xs:attributeGroup name="language.BaseSequenceFull.Attr">
        <xs:attribute ref="xml:lang" use="optional" />
    </xs:attributeGroup>

    <xs:attributeGroup name="response-identifier.BaseSequenceFull.Attr">
        <xs:attribute name="response-identifier" use="required" type="Identifier.Type" />
    </xs:attributeGroup>

    <xs:attributeGroup name="role.BaseSequenceFull.Attr">
        <xs:attribute name="role" use="optional">
            <xs:simpleType>
                <xs:restriction base="xs:string">
                    <xs:enumeration value="alert" />                        <!-- Added 20170106 -->
                    <xs:enumeration value="alertdialog" />                  <!-- Added 20170106 -->
                    <xs:enumeration value="application" />                  <!-- Added 20170106 -->
                    <xs:enumeration value="article" />
                    <xs:enumeration value="banner" />                       <!-- Added 20170106 -->
                    <xs:enumeration value="button" />
                    <xs:enumeration value="checkbox" />
                    <xs:enumeration value="columnheader" />
                    <xs:enumeration value="combobox" />                     <!-- Added 20170106 -->
                    <xs:enumeration value="complementary" />
                    <xs:enumeration value="contentinfo" />
                    <xs:enumeration value="definition" />
                    <xs:enumeration value="dialog" />                       <!-- Added 20170106 -->
                    <xs:enumeration value="directory" />
                    <xs:enumeration value="document" />
                    <xs:enumeration value="form" />                         <!-- Added 20170106 -->
                    <xs:enumeration value="grid" />                         <!-- Added 20170106 -->
                    <xs:enumeration value="gridcell" />
                    <xs:enumeration value="group" />
                    <xs:enumeration value="heading" />
                    <xs:enumeration value="img" />
                    <xs:enumeration value="link" />
                    <xs:enumeration value="list" />
                    <xs:enumeration value="listbox" />
                    <xs:enumeration value="listitem" />
                    <xs:enumeration value="log" />
                    <xs:enumeration value="main" />                         <!-- Added 20170106 -->
                    <xs:enumeration value="marquee" />                      <!-- Added 20170106 -->
                    <xs:enumeration value="math" />
                    <xs:enumeration value="menu" />                         <!-- Added 20170106 -->
                    <xs:enumeration value="menubar" />                      <!-- Added 20170106 -->
                    <xs:enumeration value="menuitem" />                     <!-- Added 20170106 -->
                    <xs:enumeration value="menuitemcheckbox" />             <!-- Added 20170106 -->
                    <xs:enumeration value="menuitemradio" />                <!-- Added 20170106 -->
                    <xs:enumeration value="navigation" />                   <!-- Added 20170106 -->
                    <xs:enumeration value="note" />
                    <xs:enumeration value="option" />
                    <xs:enumeration value="presentation" />
                    <xs:enumeration value="progressbar" />                  <!-- Added 20170106 -->
                    <xs:enumeration value="radio" />
                    <xs:enumeration value="radiogroup" />
                    <xs:enumeration value="region" />
                    <xs:enumeration value="row" />
                    <xs:enumeration value="rowgroup" />
                    <xs:enumeration value="rowheader" />
                    <xs:enumeration value="scrollbar" />                    <!-- Added 20170106 -->
                    <xs:enumeration value="search" />                       <!-- Added 20170106 -->
                    <xs:enumeration value="separator" />
                    <xs:enumeration value="slider" />
                    <xs:enumeration value="spinbutton" />
                    <xs:enumeration value="status" />
                    <xs:enumeration value="tab" />
                    <xs:enumeration value="tablist" />
                    <xs:enumeration value="tabpanel" />
                    <xs:enumeration value="textbox" />
                    <xs:enumeration value="timer" />
                    <xs:enumeration value="toolbar" />
                    <xs:enumeration value="tooltip" />                      <!-- Added 20170106 -->
                    <xs:enumeration value="tree" />                         <!-- Added 20170106 -->
                    <xs:enumeration value="treegrid" />                     <!-- Added 20170106 -->
                    <xs:enumeration value="treeitem" />                     <!-- Added 20170106 -->
                </xs:restriction>
            </xs:simpleType>
        </xs:attribute>
    </xs:attributeGroup>

    <xs:attributeGroup name="aria-controls.BaseSequenceRIdent.Attr">
        <xs:attribute name="aria-controls" use="optional">
            <xs:simpleType>
                <xs:list itemType="ElementIDList.Type" />
            </xs:simpleType>
        </xs:attribute>
    </xs:attributeGroup>

    <xs:attributeGroup name="aria-describedby.BaseSequenceRIdent.Attr">
        <xs:attribute name="aria-describedby" use="optional">
            <xs:simpleType>
                <xs:list itemType="ElementIDList.Type" />
            </xs:simpleType>
        </xs:attribute>
    </xs:attributeGroup>

    <xs:attributeGroup name="aria-flowto.BaseSequenceRIdent.Attr">
        <xs:attribute name="aria-flowto" use="optional">
            <xs:simpleType>
                <xs:list itemType="ElementIDList.Type" />
            </xs:simpleType>
        </xs:attribute>
    </xs:attributeGroup>

    <xs:attributeGroup name="aria-label.BaseSequenceRIdent.Attr">
        <xs:attribute name="aria-label" use="optional" type="xs:normalizedString" />
    </xs:attributeGroup>

    <xs:attributeGroup name="aria-labelledby.BaseSequenceRIdent.Attr">
        <xs:attribute name="aria-labelledby" use="optional">
            <xs:simpleType>
                <xs:list itemType="ElementIDList.Type" />
            </xs:simpleType>
        </xs:attribute>
    </xs:attributeGroup>

    <xs:attributeGroup name="aria-level.BaseSequenceRIdent.Attr">
        <xs:attribute name="aria-level" use="optional" type="ARIALevelInteger.Type" />
    </xs:attributeGroup>

    <xs:attributeGroup name="aria-live.BaseSequenceRIdent.Attr">
        <xs:attribute name="aria-live" use="optional">
            <xs:simpleType>
                <xs:restriction base="xs:string">
                    <xs:enumeration value="off" />
                    <xs:enumeration value="polite" />
                    <xs:enumeration value="assertive" />
                </xs:restriction>
            </xs:simpleType>
        </xs:attribute>
    </xs:attributeGroup>

    <xs:attributeGroup name="aria-orientation.BaseSequenceRIdent.Attr">
        <xs:attribute name="aria-orientation" use="optional" default="horizontal">
            <xs:simpleType>
                <xs:restriction base="xs:string">
                    <xs:enumeration value="vertical" />
                    <xs:enumeration value="horizontal" />
                </xs:restriction>
            </xs:simpleType>
        </xs:attribute>
    </xs:attributeGroup>

    <xs:attributeGroup name="aria-owns.BaseSequenceRIdent.Attr">
        <xs:attribute name="aria-owns" use="optional">
            <xs:simpleType>
                <xs:list itemType="ElementIDList.Type" />
            </xs:simpleType>
        </xs:attribute>
    </xs:attributeGroup>

    <xs:attributeGroup name="class.BaseSequenceRIdent.Attr">
        <xs:attribute name="class" use="optional">
            <xs:simpleType>
                <xs:list itemType="StringList.Type" />
            </xs:simpleType>
        </xs:attribute>
    </xs:attributeGroup>

    <xs:attributeGroup name="dataExtension.BaseSequenceRIdent.Attr">
        <xs:anyAttribute namespace = "##any" processContents = "lax" />
    </xs:attributeGroup>

    <xs:attributeGroup name="dir.BaseSequenceRIdent.Attr">
        <xs:attribute name="dir" use="optional" default="auto">
            <xs:simpleType>
                <xs:restriction base="xs:string">
                    <xs:enumeration value="ltr" />
                    <xs:enumeration value="rtl" />
                    <xs:enumeration value="auto" />
                </xs:restriction>
            </xs:simpleType>
        </xs:attribute>
    </xs:attributeGroup>

    <xs:attributeGroup name="id.BaseSequenceRIdent.Attr">
        <xs:attribute name="id" use="optional" type="UniqueIdentifier.Type" />
    </xs:attributeGroup>

    <xs:attributeGroup name="label.BaseSequenceRIdent.Attr">
        <xs:attribute name="label" use="optional" type="xs:normalizedString" />
    </xs:attributeGroup>

    <xs:attributeGroup name="language.BaseSequenceRIdent.Attr">
        <xs:attribute ref="xml:lang" use="optional" />
    </xs:attributeGroup>

    <xs:attributeGroup name="response-identifier.BaseSequenceRIdent.Attr">
        <xs:attribute name="response-identifier" use="required" type="Identifier.Type" />
    </xs:attributeGroup>

    <xs:attributeGroup name="role.BaseSequenceRIdent.Attr">
        <xs:attribute name="role" use="optional">
            <xs:simpleType>
                <xs:restriction base="xs:string">
                    <xs:enumeration value="alert" />                        <!-- Added 20170106 -->
                    <xs:enumeration value="alertdialog" />                  <!-- Added 20170106 -->
                    <xs:enumeration value="application" />                  <!-- Added 20170106 -->
                    <xs:enumeration value="article" />
                    <xs:enumeration value="banner" />                       <!-- Added 20170106 -->
                    <xs:enumeration value="button" />
                    <xs:enumeration value="checkbox" />
                    <xs:enumeration value="columnheader" />
                    <xs:enumeration value="combobox" />                     <!-- Added 20170106 -->
                    <xs:enumeration value="complementary" />
                    <xs:enumeration value="contentinfo" />
                    <xs:enumeration value="definition" />
                    <xs:enumeration value="dialog" />                       <!-- Added 20170106 -->
                    <xs:enumeration value="directory" />
                    <xs:enumeration value="document" />
                    <xs:enumeration value="form" />                         <!-- Added 20170106 -->
                    <xs:enumeration value="grid" />                         <!-- Added 20170106 -->
                    <xs:enumeration value="gridcell" />
                    <xs:enumeration value="group" />
                    <xs:enumeration value="heading" />
                    <xs:enumeration value="img" />
                    <xs:enumeration value="link" />
                    <xs:enumeration value="list" />
                    <xs:enumeration value="listbox" />
                    <xs:enumeration value="listitem" />
                    <xs:enumeration value="log" />
                    <xs:enumeration value="main" />                         <!-- Added 20170106 -->
                    <xs:enumeration value="marquee" />                      <!-- Added 20170106 -->
                    <xs:enumeration value="math" />
                    <xs:enumeration value="menu" />                         <!-- Added 20170106 -->
                    <xs:enumeration value="menubar" />                      <!-- Added 20170106 -->
                    <xs:enumeration value="menuitem" />                     <!-- Added 20170106 -->
                    <xs:enumeration value="menuitemcheckbox" />             <!-- Added 20170106 -->
                    <xs:enumeration value="menuitemradio" />                <!-- Added 20170106 -->
                    <xs:enumeration value="navigation" />                   <!-- Added 20170106 -->
                    <xs:enumeration value="note" />
                    <xs:enumeration value="option" />
                    <xs:enumeration value="presentation" />
                    <xs:enumeration value="progressbar" />                  <!-- Added 20170106 -->
                    <xs:enumeration value="radio" />
                    <xs:enumeration value="radiogroup" />
                    <xs:enumeration value="region" />
                    <xs:enumeration value="row" />
                    <xs:enumeration value="rowgroup" />
                    <xs:enumeration value="rowheader" />
                    <xs:enumeration value="scrollbar" />                    <!-- Added 20170106 -->
                    <xs:enumeration value="search" />                       <!-- Added 20170106 -->
                    <xs:enumeration value="separator" />
                    <xs:enumeration value="slider" />
                    <xs:enumeration value="spinbutton" />
                    <xs:enumeration value="status" />
                    <xs:enumeration value="tab" />
                    <xs:enumeration value="tablist" />
                    <xs:enumeration value="tabpanel" />
                    <xs:enumeration value="textbox" />
                    <xs:enumeration value="timer" />
                    <xs:enumeration value="toolbar" />
                    <xs:enumeration value="tooltip" />                      <!-- Added 20170106 -->
                    <xs:enumeration value="tree" />                         <!-- Added 20170106 -->
                    <xs:enumeration value="treegrid" />                     <!-- Added 20170106 -->
                    <xs:enumeration value="treeitem" />                     <!-- Added 20170106 -->
                </xs:restriction>
            </xs:simpleType>
        </xs:attribute>
    </xs:attributeGroup>

    <xs:attributeGroup name="aria-controls.BaseSequenceXBase.Attr">
        <xs:attribute name="aria-controls" use="optional">
            <xs:simpleType>
                <xs:list itemType="ElementIDList.Type" />
            </xs:simpleType>
        </xs:attribute>
    </xs:attributeGroup>

    <xs:attributeGroup name="aria-describedby.BaseSequenceXBase.Attr">
        <xs:attribute name="aria-describedby" use="optional">
            <xs:simpleType>
                <xs:list itemType="ElementIDList.Type" />
            </xs:simpleType>
        </xs:attribute>
    </xs:attributeGroup>

    <xs:attributeGroup name="aria-flowto.BaseSequenceXBase.Attr">
        <xs:attribute name="aria-flowto" use="optional">
            <xs:simpleType>
                <xs:list itemType="ElementIDList.Type" />
            </xs:simpleType>
        </xs:attribute>
    </xs:attributeGroup>

    <xs:attributeGroup name="aria-label.BaseSequenceXBase.Attr">
        <xs:attribute name="aria-label" use="optional" type="xs:normalizedString" />
    </xs:attributeGroup>

    <xs:attributeGroup name="aria-labelledby.BaseSequenceXBase.Attr">
        <xs:attribute name="aria-labelledby" use="optional">
            <xs:simpleType>
                <xs:list itemType="ElementIDList.Type" />
            </xs:simpleType>
        </xs:attribute>
    </xs:attributeGroup>

    <xs:attributeGroup name="aria-level.BaseSequenceXBase.Attr">
        <xs:attribute name="aria-level" use="optional" type="ARIALevelInteger.Type" />
    </xs:attributeGroup>

    <xs:attributeGroup name="aria-live.BaseSequenceXBase.Attr">
        <xs:attribute name="aria-live" use="optional">
            <xs:simpleType>
                <xs:restriction base="xs:string">
                    <xs:enumeration value="off" />
                    <xs:enumeration value="polite" />
                    <xs:enumeration value="assertive" />
                </xs:restriction>
            </xs:simpleType>
        </xs:attribute>
    </xs:attributeGroup>

    <xs:attributeGroup name="aria-orientation.BaseSequenceXBase.Attr">
        <xs:attribute name="aria-orientation" use="optional" default="horizontal">
            <xs:simpleType>
                <xs:restriction base="xs:string">
                    <xs:enumeration value="vertical" />
                    <xs:enumeration value="horizontal" />
                </xs:restriction>
            </xs:simpleType>
        </xs:attribute>
    </xs:attributeGroup>

    <xs:attributeGroup name="aria-owns.BaseSequenceXBase.Attr">
        <xs:attribute name="aria-owns" use="optional">
            <xs:simpleType>
                <xs:list itemType="ElementIDList.Type" />
            </xs:simpleType>
        </xs:attribute>
    </xs:attributeGroup>

    <xs:attributeGroup name="base.BaseSequenceXBase.Attr">
        <xs:attribute ref="xml:base" use="optional" />
    </xs:attributeGroup>

    <xs:attributeGroup name="class.BaseSequenceXBase.Attr">
        <xs:attribute name="class" use="optional">
            <xs:simpleType>
                <xs:list itemType="StringList.Type" />
            </xs:simpleType>
        </xs:attribute>
    </xs:attributeGroup>

    <xs:attributeGroup name="dataExtension.BaseSequenceXBase.Attr">
        <xs:anyAttribute namespace = "##any" processContents = "lax" />
    </xs:attributeGroup>

    <xs:attributeGroup name="dir.BaseSequenceXBase.Attr">
        <xs:attribute name="dir" use="optional" default="auto">
            <xs:simpleType>
                <xs:restriction base="xs:string">
                    <xs:enumeration value="ltr" />
                    <xs:enumeration value="rtl" />
                    <xs:enumeration value="auto" />
                </xs:restriction>
            </xs:simpleType>
        </xs:attribute>
    </xs:attributeGroup>

    <xs:attributeGroup name="id.BaseSequenceXBase.Attr">
        <xs:attribute name="id" use="optional" type="UniqueIdentifier.Type" />
    </xs:attributeGroup>

    <xs:attributeGroup name="label.BaseSequenceXBase.Attr">
        <xs:attribute name="label" use="optional" type="xs:normalizedString" />
    </xs:attributeGroup>

    <xs:attributeGroup name="language.BaseSequenceXBase.Attr">
        <xs:attribute ref="xml:lang" use="optional" />
    </xs:attributeGroup>

    <xs:attributeGroup name="role.BaseSequenceXBase.Attr">
        <xs:attribute name="role" use="optional">
            <xs:simpleType>
                <xs:restriction base="xs:string">
                    <xs:enumeration value="alert" />                        <!-- Added 20170106 -->
                    <xs:enumeration value="alertdialog" />                  <!-- Added 20170106 -->
                    <xs:enumeration value="application" />                  <!-- Added 20170106 -->
                    <xs:enumeration value="article" />
                    <xs:enumeration value="banner" />                       <!-- Added 20170106 -->
                    <xs:enumeration value="button" />
                    <xs:enumeration value="checkbox" />
                    <xs:enumeration value="columnheader" />
                    <xs:enumeration value="combobox" />                     <!-- Added 20170106 -->
                    <xs:enumeration value="complementary" />
                    <xs:enumeration value="contentinfo" />
                    <xs:enumeration value="definition" />
                    <xs:enumeration value="dialog" />                       <!-- Added 20170106 -->
                    <xs:enumeration value="directory" />
                    <xs:enumeration value="document" />
                    <xs:enumeration value="form" />                         <!-- Added 20170106 -->
                    <xs:enumeration value="grid" />                         <!-- Added 20170106 -->
                    <xs:enumeration value="gridcell" />
                    <xs:enumeration value="group" />
                    <xs:enumeration value="heading" />
                    <xs:enumeration value="img" />
                    <xs:enumeration value="link" />
                    <xs:enumeration value="list" />
                    <xs:enumeration value="listbox" />
                    <xs:enumeration value="listitem" />
                    <xs:enumeration value="log" />
                    <xs:enumeration value="main" />                         <!-- Added 20170106 -->
                    <xs:enumeration value="marquee" />                      <!-- Added 20170106 -->
                    <xs:enumeration value="math" />
                    <xs:enumeration value="menu" />                         <!-- Added 20170106 -->
                    <xs:enumeration value="menubar" />                      <!-- Added 20170106 -->
                    <xs:enumeration value="menuitem" />                     <!-- Added 20170106 -->
                    <xs:enumeration value="menuitemcheckbox" />             <!-- Added 20170106 -->
                    <xs:enumeration value="menuitemradio" />                <!-- Added 20170106 -->
                    <xs:enumeration value="navigation" />                   <!-- Added 20170106 -->
                    <xs:enumeration value="note" />
                    <xs:enumeration value="option" />
                    <xs:enumeration value="presentation" />
                    <xs:enumeration value="progressbar" />                  <!-- Added 20170106 -->
                    <xs:enumeration value="radio" />
                    <xs:enumeration value="radiogroup" />
                    <xs:enumeration value="region" />
                    <xs:enumeration value="row" />
                    <xs:enumeration value="rowgroup" />
                    <xs:enumeration value="rowheader" />
                    <xs:enumeration value="scrollbar" />                    <!-- Added 20170106 -->
                    <xs:enumeration value="search" />                       <!-- Added 20170106 -->
                    <xs:enumeration value="separator" />
                    <xs:enumeration value="slider" />
                    <xs:enumeration value="spinbutton" />
                    <xs:enumeration value="status" />
                    <xs:enumeration value="tab" />
                    <xs:enumeration value="tablist" />
                    <xs:enumeration value="tabpanel" />
                    <xs:enumeration value="textbox" />
                    <xs:enumeration value="timer" />
                    <xs:enumeration value="toolbar" />
                    <xs:enumeration value="tooltip" />                      <!-- Added 20170106 -->
                    <xs:enumeration value="tree" />                         <!-- Added 20170106 -->
                    <xs:enumeration value="treegrid" />                     <!-- Added 20170106 -->
                    <xs:enumeration value="treeitem" />                     <!-- Added 20170106 -->
                </xs:restriction>
            </xs:simpleType>
        </xs:attribute>
    </xs:attributeGroup>

    <xs:attributeGroup name="aria-controls.BaseSequenceXBaseEmpty.Attr">
        <xs:attribute name="aria-controls" use="optional">
            <xs:simpleType>
                <xs:list itemType="ElementIDList.Type" />
            </xs:simpleType>
        </xs:attribute>
    </xs:attributeGroup>

    <xs:attributeGroup name="aria-describedby.BaseSequenceXBaseEmpty.Attr">
        <xs:attribute name="aria-describedby" use="optional">
            <xs:simpleType>
                <xs:list itemType="ElementIDList.Type" />
            </xs:simpleType>
        </xs:attribute>
    </xs:attributeGroup>

    <xs:attributeGroup name="aria-flowsto.BaseSequenceXBaseEmpty.Attr">
        <xs:attribute name="aria-flowsto" use="optional">
            <xs:simpleType>
                <xs:list itemType="ElementIDList.Type" />
            </xs:simpleType>
        </xs:attribute>
    </xs:attributeGroup>

    <xs:attributeGroup name="aria-label.BaseSequenceXBaseEmpty.Attr">
        <xs:attribute name="aria-label" use="optional" type="xs:normalizedString" />
    </xs:attributeGroup>

    <xs:attributeGroup name="aria-labelledby.BaseSequenceXBaseEmpty.Attr">
        <xs:attribute name="aria-labelledby" use="optional">
            <xs:simpleType>
                <xs:list itemType="ElementIDList.Type" />
            </xs:simpleType>
        </xs:attribute>
    </xs:attributeGroup>

    <xs:attributeGroup name="aria-level.BaseSequenceXBaseEmpty.Attr">
        <xs:attribute name="aria-level" use="optional" type="ARIALevelInteger.Type" />
    </xs:attributeGroup>

    <xs:attributeGroup name="aria-live.BaseSequenceXBaseEmpty.Attr">
        <xs:attribute name="aria-live" use="optional">
            <xs:simpleType>
                <xs:restriction base="xs:string">
                    <xs:enumeration value="off" />
                    <xs:enumeration value="polite" />
                    <xs:enumeration value="assertive" />
                </xs:restriction>
            </xs:simpleType>
        </xs:attribute>
    </xs:attributeGroup>

    <xs:attributeGroup name="aria-orientation.BaseSequenceXBaseEmpty.Attr">
        <xs:attribute name="aria-orientation" use="optional" default="horizontal">
            <xs:simpleType>
                <xs:restriction base="xs:string">
                    <xs:enumeration value="vertical" />
                    <xs:enumeration value="horizontal" />
                </xs:restriction>
            </xs:simpleType>
        </xs:attribute>
    </xs:attributeGroup>

    <xs:attributeGroup name="aria-owns.BaseSequenceXBaseEmpty.Attr">
        <xs:attribute name="aria-owns" use="optional">
            <xs:simpleType>
                <xs:list itemType="ElementIDList.Type" />
            </xs:simpleType>
        </xs:attribute>
    </xs:attributeGroup>

    <xs:attributeGroup name="base.BaseSequenceXBaseEmpty.Attr">
        <xs:attribute ref="xml:base" use="optional" />
    </xs:attributeGroup>

    <xs:attributeGroup name="class.BaseSequenceXBaseEmpty.Attr">
        <xs:attribute name="class" use="optional">
            <xs:simpleType>
                <xs:list itemType="StringList.Type" />
            </xs:simpleType>
        </xs:attribute>
    </xs:attributeGroup>

    <xs:attributeGroup name="dataExtension.BaseSequenceXBaseEmpty.Attr">
        <xs:anyAttribute namespace = "##any" processContents = "lax" />
    </xs:attributeGroup>

    <xs:attributeGroup name="dir.BaseSequenceXBaseEmpty.Attr">
        <xs:attribute name="dir" use="optional" default="auto">
            <xs:simpleType>
                <xs:restriction base="xs:string">
                    <xs:enumeration value="ltr" />
                    <xs:enumeration value="rtl" />
                    <xs:enumeration value="auto" />
                </xs:restriction>
            </xs:simpleType>
        </xs:attribute>
    </xs:attributeGroup>

    <xs:attributeGroup name="id.BaseSequenceXBaseEmpty.Attr">
        <xs:attribute name="id" use="optional" type="UniqueIdentifier.Type" />
    </xs:attributeGroup>

    <xs:attributeGroup name="label.BaseSequenceXBaseEmpty.Attr">
        <xs:attribute name="label" use="optional" type="xs:normalizedString" />
    </xs:attributeGroup>

    <xs:attributeGroup name="language.BaseSequenceXBaseEmpty.Attr">
        <xs:attribute ref="xml:lang" use="optional" />
    </xs:attributeGroup>

    <xs:attributeGroup name="role.BaseSequenceXBaseEmpty.Attr">
        <xs:attribute name="role" use="optional">
            <xs:simpleType>
                <xs:restriction base="xs:string">
                    <xs:enumeration value="alert" />                        <!-- Added 20170106 -->
                    <xs:enumeration value="alertdialog" />                  <!-- Added 20170106 -->
                    <xs:enumeration value="application" />                  <!-- Added 20170106 -->
                    <xs:enumeration value="article" />
                    <xs:enumeration value="banner" />                       <!-- Added 20170106 -->
                    <xs:enumeration value="button" />
                    <xs:enumeration value="checkbox" />
                    <xs:enumeration value="columnheader" />
                    <xs:enumeration value="combobox" />                     <!-- Added 20170106 -->
                    <xs:enumeration value="complementary" />
                    <xs:enumeration value="contentinfo" />
                    <xs:enumeration value="definition" />
                    <xs:enumeration value="dialog" />                       <!-- Added 20170106 -->
                    <xs:enumeration value="directory" />
                    <xs:enumeration value="document" />
                    <xs:enumeration value="form" />                         <!-- Added 20170106 -->
                    <xs:enumeration value="grid" />                         <!-- Added 20170106 -->
                    <xs:enumeration value="gridcell" />
                    <xs:enumeration value="group" />
                    <xs:enumeration value="heading" />
                    <xs:enumeration value="img" />
                    <xs:enumeration value="link" />
                    <xs:enumeration value="list" />
                    <xs:enumeration value="listbox" />
                    <xs:enumeration value="listitem" />
                    <xs:enumeration value="log" />
                    <xs:enumeration value="main" />                         <!-- Added 20170106 -->
                    <xs:enumeration value="marquee" />                      <!-- Added 20170106 -->
                    <xs:enumeration value="math" />
                    <xs:enumeration value="menu" />                         <!-- Added 20170106 -->
                    <xs:enumeration value="menubar" />                      <!-- Added 20170106 -->
                    <xs:enumeration value="menuitem" />                     <!-- Added 20170106 -->
                    <xs:enumeration value="menuitemcheckbox" />             <!-- Added 20170106 -->
                    <xs:enumeration value="menuitemradio" />                <!-- Added 20170106 -->
                    <xs:enumeration value="navigation" />                   <!-- Added 20170106 -->
                    <xs:enumeration value="note" />
                    <xs:enumeration value="option" />
                    <xs:enumeration value="presentation" />
                    <xs:enumeration value="progressbar" />                  <!-- Added 20170106 -->
                    <xs:enumeration value="radio" />
                    <xs:enumeration value="radiogroup" />
                    <xs:enumeration value="region" />
                    <xs:enumeration value="row" />
                    <xs:enumeration value="rowgroup" />
                    <xs:enumeration value="rowheader" />
                    <xs:enumeration value="scrollbar" />                    <!-- Added 20170106 -->
                    <xs:enumeration value="search" />                       <!-- Added 20170106 -->
                    <xs:enumeration value="separator" />
                    <xs:enumeration value="slider" />
                    <xs:enumeration value="spinbutton" />
                    <xs:enumeration value="status" />
                    <xs:enumeration value="tab" />
                    <xs:enumeration value="tablist" />
                    <xs:enumeration value="tabpanel" />
                    <xs:enumeration value="textbox" />
                    <xs:enumeration value="timer" />
                    <xs:enumeration value="toolbar" />
                    <xs:enumeration value="tooltip" />                      <!-- Added 20170106 -->
                    <xs:enumeration value="tree" />                         <!-- Added 20170106 -->
                    <xs:enumeration value="treegrid" />                     <!-- Added 20170106 -->
                    <xs:enumeration value="treeitem" />                     <!-- Added 20170106 -->
                </xs:restriction>
            </xs:simpleType>
        </xs:attribute>
    </xs:attributeGroup>

    <xs:attributeGroup name="baseType.BaseValue.Attr">
        <xs:attribute name="baseType" use="required">
            <xs:simpleType>
                <xs:restriction base="xs:string">
                    <xs:enumeration value="boolean" />
                    <xs:enumeration value="directedPair" />
                    <xs:enumeration value="duration" />
                    <xs:enumeration value="file" />
                    <xs:enumeration value="float" />
                    <xs:enumeration value="identifier" />
                    <xs:enumeration value="integer" />
                    <xs:enumeration value="pair" />
                    <xs:enumeration value="point" />
                    <xs:enumeration value="string" />
                    <xs:enumeration value="uri" />
                </xs:restriction>
            </xs:simpleType>
        </xs:attribute>
    </xs:attributeGroup>

    <xs:attributeGroup name="title.BDO.Attr">
        <xs:attribute name="title" use="optional" type="xs:string" />
    </xs:attributeGroup>

    <xs:attributeGroup name="cite.BlockQuote.Attr">
        <xs:attribute name="cite" use="optional" type="xs:anyURI" />
    </xs:attributeGroup>

    <xs:attributeGroup name="target.BranchRule.Attr">
        <xs:attribute name="target" use="required" type="Identifier.Type" />
    </xs:attributeGroup>

    <xs:attributeGroup name="max-choices.ChoiceInteraction.Attr">
        <xs:attribute name="max-choices" use="optional" default="1" type="xs:nonNegativeInteger" />
    </xs:attributeGroup>

    <xs:attributeGroup name="min-choices.ChoiceInteraction.Attr">
        <xs:attribute name="min-choices" use="optional" default="0" type="xs:nonNegativeInteger" />
    </xs:attributeGroup>

    <xs:attributeGroup name="orientation.ChoiceInteraction.Attr">
        <xs:attribute name="orientation" use="optional" default="vertical">
            <xs:simpleType>
                <xs:restriction base="xs:string">
                    <xs:enumeration value="horizontal" />
                    <xs:enumeration value="vertical" />
                </xs:restriction>
            </xs:simpleType>
        </xs:attribute>
    </xs:attributeGroup>

    <xs:attributeGroup name="shuffle.ChoiceInteraction.Attr">
        <xs:attribute name="shuffle" use="optional" default="false" type="xs:boolean" />
    </xs:attributeGroup>

    <xs:attributeGroup name="span.Col.Attr">
        <xs:attribute name="span" use="optional" type="xs:int" />
    </xs:attributeGroup>

    <xs:attributeGroup name="span.ColGroup.Attr">
        <xs:attribute name="span" use="optional" type="xs:int" />
    </xs:attributeGroup>

    <xs:attributeGroup name="identifier.Correct.Attr">
        <xs:attribute name="identifier" use="required" type="Identifier.Type" />
    </xs:attributeGroup>

    <xs:attributeGroup name="interpretation.CorrectResponse.Attr">
        <xs:attribute name="interpretation" use="optional" type="xs:string" />
    </xs:attributeGroup>

    <xs:attributeGroup name="extension.CustomInteraction.Attr">
        <xs:anyAttribute namespace = "##other" processContents = "lax" />
    </xs:attributeGroup>

    <xs:attributeGroup name="class.CustomOperator.Attr">
        <xs:attribute name="class" use="optional" type="Identifier.Type" />
    </xs:attributeGroup>

    <xs:attributeGroup name="definition.CustomOperator.Attr">
        <xs:attribute name="definition" use="optional" type="xs:anyURI" />
    </xs:attributeGroup>

    <xs:attributeGroup name="extension.CustomOperator.Attr">
        <xs:anyAttribute namespace = "##other" processContents = "lax" />
    </xs:attributeGroup>

    <xs:attributeGroup name="identifier.Default.Attr">
        <xs:attribute name="identifier" use="required" type="Identifier.Type" />
    </xs:attributeGroup>

    <xs:attributeGroup name="interpretation.DefaultValue.Attr">
        <xs:attribute name="interpretation" use="optional" type="xs:normalizedString" />
    </xs:attributeGroup>

    <xs:attributeGroup name="count-attempt.EndAttemptInteraction.Attr">
        <xs:attribute name="count-attempt" use="optional" type="xs:boolean" />
    </xs:attributeGroup>

    <xs:attributeGroup name="response-identifier.EndAttemptInteraction.Attr">
        <xs:attribute name="response-identifier" use="required" type="Identifier.Type" />
    </xs:attributeGroup>

    <xs:attributeGroup name="title.EndAttemptInteraction.Attr">
        <xs:attribute name="title" use="required" type="xs:string" />
    </xs:attributeGroup>

    <xs:attributeGroup name="includeLowerBound.Equal.Attr">
        <xs:attribute name="includeLowerBound" use="optional" default="true" type="xs:boolean" />
    </xs:attributeGroup>

    <xs:attributeGroup name="includeUpperBound.Equal.Attr">
        <xs:attribute name="includeUpperBound" use="optional" default="true" type="xs:boolean" />
    </xs:attributeGroup>

    <xs:attributeGroup name="tolerance.Equal.Attr">
        <xs:attribute name="tolerance" use="optional">
            <xs:simpleType>
                <xs:list itemType="ToleranceList.Type" />
            </xs:simpleType>
        </xs:attribute>
    </xs:attributeGroup>

    <xs:attributeGroup name="toleranceMode.Equal.Attr">
        <xs:attribute name="toleranceMode" use="optional" default="exact">
            <xs:simpleType>
                <xs:restriction base="xs:string">
                    <xs:enumeration value="absolute" />
                    <xs:enumeration value="exact" />
                    <xs:enumeration value="relative" />
                </xs:restriction>
            </xs:simpleType>
        </xs:attribute>
    </xs:attributeGroup>

    <xs:attributeGroup name="figures.EqualRounded.Attr">
        <xs:attribute name="figures" use="required">
            <xs:simpleType>
                <xs:union>
                    <xs:simpleType>
                        <xs:restriction base="xs:integer" />
                    </xs:simpleType>
                    <xs:simpleType>
                        <xs:restriction base="VariableString.Type" />
                    </xs:simpleType>
                </xs:union>
            </xs:simpleType>
        </xs:attribute>
    </xs:attributeGroup>

    <xs:attributeGroup name="roundingMode.EqualRounded.Attr">
        <xs:attribute name="roundingMode" use="optional" default="significantFigures">
            <xs:simpleType>
                <xs:restriction base="xs:string">
                    <xs:enumeration value="decimalPlaces" />
                    <xs:enumeration value="significantFigures" />
                </xs:restriction>
            </xs:simpleType>
        </xs:attribute>
    </xs:attributeGroup>

    <xs:attributeGroup name="base.ExtendedTextInteraction.Attr">
        <xs:attribute name="base" use="optional" default="10" type="xs:int" />
    </xs:attributeGroup>

    <xs:attributeGroup name="expected-length.ExtendedTextInteraction.Attr">
        <xs:attribute name="expected-length" use="optional" type="xs:nonNegativeInteger" />
    </xs:attributeGroup>

    <xs:attributeGroup name="expected-lines.ExtendedTextInteraction.Attr">
        <xs:attribute name="expected-lines" use="optional" type="xs:nonNegativeInteger" />
    </xs:attributeGroup>

    <xs:attributeGroup name="format.ExtendedTextInteraction.Attr">
        <xs:attribute name="format" use="optional" default="plain">
            <xs:simpleType>
                <xs:restriction base="xs:string">
                    <xs:enumeration value="plain" />
                    <xs:enumeration value="preformatted" />
                    <xs:enumeration value="xhtml" />
                </xs:restriction>
            </xs:simpleType>
        </xs:attribute>
    </xs:attributeGroup>

    <xs:attributeGroup name="max-strings.ExtendedTextInteraction.Attr">
        <xs:attribute name="max-strings" use="optional" type="xs:nonNegativeInteger" />
    </xs:attributeGroup>

    <xs:attributeGroup name="min-strings.ExtendedTextInteraction.Attr">
        <xs:attribute name="min-strings" use="optional" default="0" type="xs:nonNegativeInteger" />
    </xs:attributeGroup>

    <xs:attributeGroup name="pattern-mask.ExtendedTextInteraction.Attr">
        <xs:attribute name="pattern-mask" use="optional" type="xs:string" />
    </xs:attributeGroup>

    <xs:attributeGroup name="placeholder-text.ExtendedTextInteraction.Attr">
        <xs:attribute name="placeholder-text" use="optional" type="xs:string" />
    </xs:attributeGroup>

    <xs:attributeGroup name="string-identifier.ExtendedTextInteraction.Attr">
        <xs:attribute name="string-identifier" use="optional" type="Identifier.Type" />
    </xs:attributeGroup>

    <xs:attributeGroup name="identifier.FeedbackBlock.Attr">
        <xs:attribute name="identifier" use="required" type="Identifier.Type" />
    </xs:attributeGroup>

    <xs:attributeGroup name="outcome-identifier.FeedbackBlock.Attr">
        <xs:attribute name="outcome-identifier" use="required" type="Identifier.Type" />
    </xs:attributeGroup>

    <xs:attributeGroup name="show-hide.FeedbackBlock.Attr">
        <xs:attribute name="show-hide" use="optional" default="show">
            <xs:simpleType>
                <xs:restriction base="xs:string">
                    <xs:enumeration value="show" />
                    <xs:enumeration value="hide" />
                </xs:restriction>
            </xs:simpleType>
        </xs:attribute>
    </xs:attributeGroup>

    <xs:attributeGroup name="identifier.FeedbackInline.Attr">
        <xs:attribute name="identifier" use="required" type="Identifier.Type" />
    </xs:attributeGroup>

    <xs:attributeGroup name="outcome-identifier.FeedbackInline.Attr">
        <xs:attribute name="outcome-identifier" use="required" type="Identifier.Type" />
    </xs:attributeGroup>

    <xs:attributeGroup name="show-hide.FeedbackInline.Attr">
        <xs:attribute name="show-hide" use="optional" default="show">
            <xs:simpleType>
                <xs:restriction base="xs:string">
                    <xs:enumeration value="show" />
                    <xs:enumeration value="hide" />
                </xs:restriction>
            </xs:simpleType>
        </xs:attribute>
    </xs:attributeGroup>

    <xs:attributeGroup name="fieldIdentifier.FieldValue.Attr">
        <xs:attribute name="fieldIdentifier" use="required" type="Identifier.Type" />
    </xs:attributeGroup>

    <xs:attributeGroup name="identifier.Gap.Attr">
        <xs:attribute name="identifier" use="required" type="Identifier.Type" />
    </xs:attributeGroup>

    <xs:attributeGroup name="match-group.Gap.Attr">
        <xs:attribute name="match-group" use="optional">
            <xs:simpleType>
                <xs:list itemType="IdentifierList.Type" />
            </xs:simpleType>
        </xs:attribute>
    </xs:attributeGroup>

    <xs:attributeGroup name="required.Gap.Attr">
        <xs:attribute name="required" use="optional" default="false" type="xs:boolean" />
    </xs:attributeGroup>

    <xs:attributeGroup name="show-hide.Gap.Attr">
        <xs:attribute name="show-hide" use="optional" default="show">
            <xs:simpleType>
                <xs:restriction base="xs:string">
                    <xs:enumeration value="show" />
                    <xs:enumeration value="hide" />
                </xs:restriction>
            </xs:simpleType>
        </xs:attribute>
    </xs:attributeGroup>

    <xs:attributeGroup name="template-identifier.Gap.Attr">
        <xs:attribute name="template-identifier" use="optional" type="Identifier.Type" />
    </xs:attributeGroup>

    <xs:attributeGroup name="identifier.GapImg.Attr">
        <xs:attribute name="identifier" use="required" type="Identifier.Type" />
    </xs:attributeGroup>

    <xs:attributeGroup name="left.GapImg.Attr">
        <xs:attribute name="left" use="optional" type="xs:normalizedString" />
    </xs:attributeGroup>

    <xs:attributeGroup name="match-group.GapImg.Attr">
        <xs:attribute name="match-group" use="optional">
            <xs:simpleType>
                <xs:list itemType="IdentifierList.Type" />
            </xs:simpleType>
        </xs:attribute>
    </xs:attributeGroup>

    <xs:attributeGroup name="match-max.GapImg.Attr">
        <xs:attribute name="match-max" use="required" type="xs:nonNegativeInteger" />
    </xs:attributeGroup>

    <xs:attributeGroup name="match-min.GapImg.Attr">
        <xs:attribute name="match-min" use="optional" default="0" type="xs:nonNegativeInteger" />
    </xs:attributeGroup>

    <xs:attributeGroup name="object-label.GapImg.Attr">
        <xs:attribute name="object-label" use="optional" type="xs:string" />
    </xs:attributeGroup>

    <xs:attributeGroup name="show-hide.GapImg.Attr">
        <xs:attribute name="show-hide" use="optional" default="show">
            <xs:simpleType>
                <xs:restriction base="xs:string">
                    <xs:enumeration value="show" />
                    <xs:enumeration value="hide" />
                </xs:restriction>
            </xs:simpleType>
        </xs:attribute>
    </xs:attributeGroup>

    <xs:attributeGroup name="template-identifier.GapImg.Attr">
        <xs:attribute name="template-identifier" use="optional" type="Identifier.Type" />
    </xs:attributeGroup>

    <xs:attributeGroup name="top.GapImg.Attr">
        <xs:attribute name="top" use="optional" type="xs:normalizedString" />
    </xs:attributeGroup>

    <xs:attributeGroup name="max-associations.GapMatchInteraction.Attr">
        <xs:attribute name="max-associations" use="optional" default="1" type="xs:nonNegativeInteger" />
    </xs:attributeGroup>

    <xs:attributeGroup name="min-associations.GapMatchInteraction.Attr">
        <xs:attribute name="min-associations" use="optional" type="xs:nonNegativeInteger" />
    </xs:attributeGroup>

    <xs:attributeGroup name="shuffle.GapMatchInteraction.Attr">
        <xs:attribute name="shuffle" use="optional" default="false" type="xs:boolean" />
    </xs:attributeGroup>

    <xs:attributeGroup name="identifier.GapText.Attr">
        <xs:attribute name="identifier" use="required" type="Identifier.Type" />
    </xs:attributeGroup>

    <xs:attributeGroup name="match-group.GapText.Attr">
        <xs:attribute name="match-group" use="optional">
            <xs:simpleType>
                <xs:list itemType="IdentifierList.Type" />
            </xs:simpleType>
        </xs:attribute>
    </xs:attributeGroup>

    <xs:attributeGroup name="match-max.GapText.Attr">
        <xs:attribute name="match-max" use="required" type="xs:nonNegativeInteger" />
    </xs:attributeGroup>

    <xs:attributeGroup name="match-min.GapText.Attr">
        <xs:attribute name="match-min" use="optional" default="0" type="xs:nonNegativeInteger" />
    </xs:attributeGroup>

    <xs:attributeGroup name="show-hide.GapText.Attr">
        <xs:attribute name="show-hide" use="optional" default="show">
            <xs:simpleType>
                <xs:restriction base="xs:string">
                    <xs:enumeration value="show" />
                    <xs:enumeration value="hide" />
                </xs:restriction>
            </xs:simpleType>
        </xs:attribute>
    </xs:attributeGroup>

    <xs:attributeGroup name="template-identifier.GapText.Attr">
        <xs:attribute name="template-identifier" use="optional" type="Identifier.Type" />
    </xs:attributeGroup>

    <xs:attributeGroup name="max-associations.GraphicAssociateInteraction.Attr">
        <xs:attribute name="max-associations" use="optional" default="1" type="xs:nonNegativeInteger" />
    </xs:attributeGroup>

    <xs:attributeGroup name="min-associations.GraphicAssociateInteraction.Attr">
        <xs:attribute name="min-associations" use="optional" type="xs:nonNegativeInteger" />
    </xs:attributeGroup>

    <xs:attributeGroup name="max-associations.GraphicGapMatchInteraction.Attr">
        <xs:attribute name="max-associations" use="optional" default="1" type="xs:nonNegativeInteger" />
    </xs:attributeGroup>

    <xs:attributeGroup name="min-associations.GraphicGapMatchInteraction.Attr">
        <xs:attribute name="min-associations" use="optional" type="xs:nonNegativeInteger" />
    </xs:attributeGroup>

    <xs:attributeGroup name="max-choices.GraphicOrderInteraction.Attr">
        <xs:attribute name="max-choices" use="optional" type="xs:nonNegativeInteger" />
    </xs:attributeGroup>

    <xs:attributeGroup name="min-choices.GraphicOrderInteraction.Attr">
        <xs:attribute name="min-choices" use="optional" type="xs:nonNegativeInteger" />
    </xs:attributeGroup>

    <xs:attributeGroup name="coords.HotspotChoice.Attr">
        <xs:attribute name="coords" use="required" type="Coords.Type" />
    </xs:attributeGroup>

    <xs:attributeGroup name="hotspot-label.HotspotChoice.Attr">
        <xs:attribute name="hotspot-label" use="optional" type="xs:string" />
    </xs:attributeGroup>

    <xs:attributeGroup name="identifier.HotspotChoice.Attr">
        <xs:attribute name="identifier" use="required" type="Identifier.Type" />
    </xs:attributeGroup>

    <xs:attributeGroup name="shape.HotspotChoice.Attr">
        <xs:attribute name="shape" use="required">
            <xs:simpleType>
                <xs:restriction base="xs:string">
                    <xs:enumeration value="circle" />
                    <xs:enumeration value="default" />
                    <xs:enumeration value="ellipse" />
                    <xs:enumeration value="poly" />
                    <xs:enumeration value="rect" />
                </xs:restriction>
            </xs:simpleType>
        </xs:attribute>
    </xs:attributeGroup>

    <xs:attributeGroup name="show-hide.HotspotChoice.Attr">
        <xs:attribute name="show-hide" use="optional" default="show">
            <xs:simpleType>
                <xs:restriction base="xs:string">
                    <xs:enumeration value="show" />
                    <xs:enumeration value="hide" />
                </xs:restriction>
            </xs:simpleType>
        </xs:attribute>
    </xs:attributeGroup>

    <xs:attributeGroup name="template-identifier.HotspotChoice.Attr">
        <xs:attribute name="template-identifier" use="optional" type="Identifier.Type" />
    </xs:attributeGroup>

    <xs:attributeGroup name="max-choices.HotspotInteraction.Attr">
        <xs:attribute name="max-choices" use="optional" default="1" type="xs:nonNegativeInteger" />
    </xs:attributeGroup>

    <xs:attributeGroup name="min-choices.HotspotInteraction.Attr">
        <xs:attribute name="min-choices" use="optional" default="0" type="xs:nonNegativeInteger" />
    </xs:attributeGroup>

    <xs:attributeGroup name="identifier.HotText.Attr">
        <xs:attribute name="identifier" use="required" type="Identifier.Type" />
    </xs:attributeGroup>

    <xs:attributeGroup name="show-hide.HotText.Attr">
        <xs:attribute name="show-hide" use="optional" default="show">
            <xs:simpleType>
                <xs:restriction base="xs:string">
                    <xs:enumeration value="show" />
                    <xs:enumeration value="hide" />
                </xs:restriction>
            </xs:simpleType>
        </xs:attribute>
    </xs:attributeGroup>

    <xs:attributeGroup name="template-identifier.HotText.Attr">
        <xs:attribute name="template-identifier" use="optional" type="Identifier.Type" />
    </xs:attributeGroup>

    <xs:attributeGroup name="max-choices.HotTextInteraction.Attr">
        <xs:attribute name="max-choices" use="optional" default="1" type="xs:nonNegativeInteger" />
    </xs:attributeGroup>

    <xs:attributeGroup name="min-choices.HotTextInteraction.Attr">
        <xs:attribute name="min-choices" use="optional" default="0" type="xs:nonNegativeInteger" />
    </xs:attributeGroup>

    <xs:attributeGroup name="alt.Img.Attr">
        <xs:attribute name="alt" use="required" type="xs:string" />
    </xs:attributeGroup>

    <xs:attributeGroup name="height.Img.Attr">
        <xs:attribute name="height" use="optional" type="Length.Type" />
    </xs:attributeGroup>

    <xs:attributeGroup name="longdesc.Img.Attr">
        <xs:attribute name="longdesc" use="optional" type="xs:anyURI" />
    </xs:attributeGroup>

    <xs:attributeGroup name="src.Img.Attr">
        <xs:attribute name="src" use="required" type="xs:anyURI" />
    </xs:attributeGroup>

    <xs:attributeGroup name="width.Img.Attr">
        <xs:attribute name="width" use="optional" type="Length.Type" />
    </xs:attributeGroup>

    <xs:attributeGroup name="n.Index.Attr">
        <xs:attribute name="n" use="required">
            <xs:simpleType>
                <xs:union>
                    <xs:simpleType>
                        <xs:restriction base="xs:NCName" />
                    </xs:simpleType>
                    <xs:simpleType>
                        <xs:restriction base="xs:int" />
                    </xs:simpleType>
                </xs:union>
            </xs:simpleType>
        </xs:attribute>
    </xs:attributeGroup>

    <xs:attributeGroup name="title.InfoControl.Attr">
        <xs:attribute name="title" use="required" type="xs:normalizedString" />
    </xs:attributeGroup>

    <xs:attributeGroup name="fixed.InlineChoice.Attr">
        <xs:attribute name="fixed" use="optional" default="false" type="xs:boolean" />
    </xs:attributeGroup>

    <xs:attributeGroup name="identifier.InlineChoice.Attr">
        <xs:attribute name="identifier" use="required" type="Identifier.Type" />
    </xs:attributeGroup>

    <xs:attributeGroup name="show-hide.InlineChoice.Attr">
        <xs:attribute name="show-hide" use="optional" default="show">
            <xs:simpleType>
                <xs:restriction base="xs:string">
                    <xs:enumeration value="show" />
                    <xs:enumeration value="hide" />
                </xs:restriction>
            </xs:simpleType>
        </xs:attribute>
    </xs:attributeGroup>

    <xs:attributeGroup name="template-identifier.InlineChoice.Attr">
        <xs:attribute name="template-identifier" use="optional" type="Identifier.Type" />
    </xs:attributeGroup>

    <xs:attributeGroup name="required.InlineChoiceInteraction.Attr">
        <xs:attribute name="required" use="optional" default="false" type="xs:boolean" />
    </xs:attributeGroup>

    <xs:attributeGroup name="shuffle.InlineChoiceInteraction.Attr">
        <xs:attribute name="shuffle" use="optional" default="false" type="xs:boolean" />
    </xs:attributeGroup>

    <xs:attributeGroup name="coords.Inside.Attr">
        <xs:attribute name="coords" use="required" type="Coords.Type" />
    </xs:attributeGroup>

    <xs:attributeGroup name="shape.Inside.Attr">
        <xs:attribute name="shape" use="required">
            <xs:simpleType>
                <xs:restriction base="xs:string">
                    <xs:enumeration value="circle" />
                    <xs:enumeration value="default" />
                    <xs:enumeration value="ellipse" />
                    <xs:enumeration value="poly" />
                    <xs:enumeration value="rect" />
                </xs:restriction>
            </xs:simpleType>
        </xs:attribute>
    </xs:attributeGroup>

    <xs:attributeGroup name="defaultValue.InterpolationTable.Attr">
        <xs:attribute name="defaultValue" use="optional" type="xs:string" />
    </xs:attributeGroup>

    <xs:attributeGroup name="includeBoundary.InterpolationTableEntry.Attr">
        <xs:attribute name="includeBoundary" use="optional" default="true" type="xs:boolean" />
    </xs:attributeGroup>

    <xs:attributeGroup name="sourceValue.InterpolationTableEntry.Attr">
        <xs:attribute name="sourceValue" use="required" type="xs:double" />
    </xs:attributeGroup>

    <xs:attributeGroup name="targetValue.InterpolationTableEntry.Attr">
        <xs:attribute name="targetValue" use="required" type="xs:string" />
    </xs:attributeGroup>

    <xs:attributeGroup name="class.ItemBody.Attr">
        <xs:attribute name="class" use="optional">
            <xs:simpleType>
                <xs:list itemType="StringList.Type" />
            </xs:simpleType>
        </xs:attribute>
    </xs:attributeGroup>

    <xs:attributeGroup name="dir.ItemBody.Attr">
        <xs:attribute name="dir" use="optional" default="auto">
            <xs:simpleType>
                <xs:restriction base="xs:string">
                    <xs:enumeration value="ltr" />
                    <xs:enumeration value="rtl" />
                    <xs:enumeration value="auto" />
                </xs:restriction>
            </xs:simpleType>
        </xs:attribute>
    </xs:attributeGroup>

    <xs:attributeGroup name="id.ItemBody.Attr">
        <xs:attribute name="id" use="optional" type="UniqueIdentifier.Type" />
    </xs:attributeGroup>

    <xs:attributeGroup name="label.ItemBody.Attr">
        <xs:attribute name="label" use="optional" type="xs:normalizedString" />
    </xs:attributeGroup>

    <xs:attributeGroup name="language.ItemBody.Attr">
        <xs:attribute ref="xml:lang" use="optional" />
    </xs:attributeGroup>

    <xs:attributeGroup name="allowComment.ItemSessionControl.Attr">
        <xs:attribute name="allowComment" use="optional" default="false" type="xs:boolean" />
    </xs:attributeGroup>

    <xs:attributeGroup name="allowReview.ItemSessionControl.Attr">
        <xs:attribute name="allowReview" use="optional" default="true" type="xs:boolean" />
    </xs:attributeGroup>

    <xs:attributeGroup name="allowSkipping.ItemSessionControl.Attr">
        <xs:attribute name="allowSkipping" use="optional" default="true" type="xs:boolean" />
    </xs:attributeGroup>

    <xs:attributeGroup name="maxAttempts.ItemSessionControl.Attr">
        <xs:attribute name="maxAttempts" use="optional" type="xs:int" />
    </xs:attributeGroup>

    <xs:attributeGroup name="showFeedback.ItemSessionControl.Attr">
        <xs:attribute name="showFeedback" use="optional" default="false" type="xs:boolean" />
    </xs:attributeGroup>

    <xs:attributeGroup name="showSolution.ItemSessionControl.Attr">
        <xs:attribute name="showSolution" use="optional" default="false" type="xs:boolean" />
    </xs:attributeGroup>

    <xs:attributeGroup name="validateResponses.ItemSessionControl.Attr">
        <xs:attribute name="validateResponses" use="optional" default="false" type="xs:boolean" />
    </xs:attributeGroup>

    <xs:attributeGroup name="identifier.LookupOutcomeValue.Attr">
        <xs:attribute name="identifier" use="required" type="Identifier.Type" />
    </xs:attributeGroup>

    <xs:attributeGroup name="caseSensitive.MapEntry.Attr">
        <xs:attribute name="caseSensitive" use="optional" default="false" type="xs:boolean" />
    </xs:attributeGroup>

    <xs:attributeGroup name="mapKey.MapEntry.Attr">
        <xs:attribute name="mapKey" use="required" type="xs:normalizedString" />
    </xs:attributeGroup>

    <xs:attributeGroup name="mappedValue.MapEntry.Attr">
        <xs:attribute name="mappedValue" use="required" type="xs:double" />
    </xs:attributeGroup>

    <xs:attributeGroup name="defaultValue.Mapping.Attr">
        <xs:attribute name="defaultValue" use="optional" default="0" type="xs:double" />
    </xs:attributeGroup>

    <xs:attributeGroup name="lowerBound.Mapping.Attr">
        <xs:attribute name="lowerBound" use="optional" type="xs:double" />
    </xs:attributeGroup>

    <xs:attributeGroup name="upperBound.Mapping.Attr">
        <xs:attribute name="upperBound" use="optional" type="xs:double" />
    </xs:attributeGroup>

    <xs:attributeGroup name="identifier.MapResponse.Attr">
        <xs:attribute name="identifier" use="required" type="Identifier.Type" />
    </xs:attributeGroup>

    <xs:attributeGroup name="max-associations.MatchInteraction.Attr">
        <xs:attribute name="max-associations" use="optional" default="1" type="xs:nonNegativeInteger" />
    </xs:attributeGroup>

    <xs:attributeGroup name="min-associations.MatchInteraction.Attr">
        <xs:attribute name="min-associations" use="optional" default="0" type="xs:nonNegativeInteger" />
    </xs:attributeGroup>

    <xs:attributeGroup name="shuffle.MatchInteraction.Attr">
        <xs:attribute name="shuffle" use="optional" default="false" type="xs:boolean" />
    </xs:attributeGroup>

    <xs:attributeGroup name="defaultValue.MatchTable.Attr">
        <xs:attribute name="defaultValue" use="optional" type="xs:string" />
    </xs:attributeGroup>

    <xs:attributeGroup name="sourceValue.MatchTableEntry.Attr">
        <xs:attribute name="sourceValue" use="required" type="xs:int" />
    </xs:attributeGroup>

    <xs:attributeGroup name="targetValue.MatchTableEntry.Attr">
        <xs:attribute name="targetValue" use="required">
            <xs:simpleType>
                <xs:restriction base="xs:string">
                    <xs:enumeration value="boolean" />
                    <xs:enumeration value="directedPair" />
                    <xs:enumeration value="duration" />
                    <xs:enumeration value="file" />
                    <xs:enumeration value="float" />
                    <xs:enumeration value="identifier" />
                    <xs:enumeration value="integer" />
                    <xs:enumeration value="pair" />
                    <xs:enumeration value="point" />
                    <xs:enumeration value="string" />
                    <xs:enumeration value="uri" />
                </xs:restriction>
            </xs:simpleType>
        </xs:attribute>
    </xs:attributeGroup>

    <xs:attributeGroup name="name.MathConstant.Attr">
        <xs:attribute name="name" use="required">
            <xs:simpleType>
                <xs:restriction base="xs:string">
                    <xs:enumeration value="pi" />
                    <xs:enumeration value="e" />
                </xs:restriction>
            </xs:simpleType>
        </xs:attribute>
    </xs:attributeGroup>

    <xs:attributeGroup name="name.MathOperator.Attr">
        <xs:attribute name="name" use="required">
            <xs:simpleType>
                <xs:restriction base="xs:string">
                    <xs:enumeration value="sin" />
                    <xs:enumeration value="cos" />
                    <xs:enumeration value="tan" />
                    <xs:enumeration value="sec" />
                    <xs:enumeration value="csc" />
                    <xs:enumeration value="cot" />
                    <xs:enumeration value="asin" />
                    <xs:enumeration value="acos" />
                    <xs:enumeration value="atan" />
                    <xs:enumeration value="atan2" />
                    <xs:enumeration value="asec" />
                    <xs:enumeration value="acsc" />
                    <xs:enumeration value="acot" />
                    <xs:enumeration value="sinh" />
                    <xs:enumeration value="cosh" />
                    <xs:enumeration value="tanh" />
                    <xs:enumeration value="sech" />
                    <xs:enumeration value="csch" />
                    <xs:enumeration value="coth" />
                    <xs:enumeration value="log" />
                    <xs:enumeration value="ln" />
                    <xs:enumeration value="exp" />
                    <xs:enumeration value="abs" />
                    <xs:enumeration value="signum" />
                    <xs:enumeration value="floor" />
                    <xs:enumeration value="ceil" />
                    <xs:enumeration value="toDegrees" />
                    <xs:enumeration value="toRadians" />
                </xs:restriction>
            </xs:simpleType>
        </xs:attribute>
    </xs:attributeGroup>

    <xs:attributeGroup name="autostart.MediaInteraction.Attr">
        <xs:attribute name="autostart" use="required" type="xs:boolean" />
    </xs:attributeGroup>

    <xs:attributeGroup name="coords.MediaInteraction.Attr">
        <xs:attribute name="coords" use="optional" type="Coords.Type" />
    </xs:attributeGroup>

    <xs:attributeGroup name="loop.MediaInteraction.Attr">
        <xs:attribute name="loop" use="optional" default="false" type="xs:boolean" />
    </xs:attributeGroup>

    <xs:attributeGroup name="max-plays.MediaInteraction.Attr">
        <xs:attribute name="max-plays" use="optional" default="0" type="xs:nonNegativeInteger" />
    </xs:attributeGroup>

    <xs:attributeGroup name="min-plays.MediaInteraction.Attr">
        <xs:attribute name="min-plays" use="optional" default="0" type="xs:nonNegativeInteger" />
    </xs:attributeGroup>

    <xs:attributeGroup name="identifier.ModalFeedback.Attr">
        <xs:attribute name="identifier" use="required" type="Identifier.Type" />
    </xs:attributeGroup>

    <xs:attributeGroup name="outcomeIdentifier.ModalFeedback.Attr">
        <xs:attribute name="outcomeIdentifier" use="required" type="Identifier.Type" />
    </xs:attributeGroup>

    <xs:attributeGroup name="showHide.ModalFeedback.Attr">
        <xs:attribute name="showHide" use="required">
            <xs:simpleType>
                <xs:restriction base="xs:string">
                    <xs:enumeration value="show" />
                    <xs:enumeration value="hide" />
                </xs:restriction>
            </xs:simpleType>
        </xs:attribute>
    </xs:attributeGroup>

    <xs:attributeGroup name="title.ModalFeedback.Attr">
        <xs:attribute name="title" use="optional" type="xs:normalizedString" />
    </xs:attributeGroup>

    <xs:attributeGroup name="excludeCategory.Number.Attr">
        <xs:attribute name="excludeCategory" use="optional">
            <xs:simpleType>
                <xs:list itemType="IdentifierList.Type" />
            </xs:simpleType>
        </xs:attribute>
    </xs:attributeGroup>

    <xs:attributeGroup name="includeCategory.Number.Attr">
        <xs:attribute name="includeCategory" use="optional">
            <xs:simpleType>
                <xs:list itemType="IdentifierList.Type" />
            </xs:simpleType>
        </xs:attribute>
    </xs:attributeGroup>

    <xs:attributeGroup name="sectionIdentifier.Number.Attr">
        <xs:attribute name="sectionIdentifier" use="optional" type="Identifier.Type" />
    </xs:attributeGroup>

    <xs:attributeGroup name="data.Object.Attr">
        <xs:attribute name="data" use="required" type="xs:string" />
    </xs:attributeGroup>

    <xs:attributeGroup name="height.Object.Attr">
        <xs:attribute name="height" use="optional" type="Length.Type" />
    </xs:attributeGroup>

    <xs:attributeGroup name="type.Object.Attr">
        <xs:attribute name="type" use="required" type="MimeType.Type" />
    </xs:attributeGroup>

    <xs:attributeGroup name="width.Object.Attr">
        <xs:attribute name="width" use="optional" type="Length.Type" />
    </xs:attributeGroup>

    <xs:attributeGroup name="max-choices.OrderInteraction.Attr">
        <xs:attribute name="max-choices" use="optional" type="xs:nonNegativeInteger" />
    </xs:attributeGroup>

    <xs:attributeGroup name="min-choices.OrderInteraction.Attr">
        <xs:attribute name="min-choices" use="optional" type="xs:nonNegativeInteger" />
    </xs:attributeGroup>

    <xs:attributeGroup name="orientation.OrderInteraction.Attr">
        <xs:attribute name="orientation" use="optional">
            <xs:simpleType>
                <xs:restriction base="xs:string">
                    <xs:enumeration value="horizontal" />
                    <xs:enumeration value="vertical" />
                </xs:restriction>
            </xs:simpleType>
        </xs:attribute>
    </xs:attributeGroup>

    <xs:attributeGroup name="shuffle.OrderInteraction.Attr">
        <xs:attribute name="shuffle" use="optional" default="false" type="xs:boolean" />
    </xs:attributeGroup>

    <xs:attributeGroup name="baseType.OutcomeDeclaration.Attr">
        <xs:attribute name="baseType" use="optional">
            <xs:simpleType>
                <xs:restriction base="xs:string">
                    <xs:enumeration value="boolean" />
                    <xs:enumeration value="directedPair" />
                    <xs:enumeration value="duration" />
                    <xs:enumeration value="file" />
                    <xs:enumeration value="float" />
                    <xs:enumeration value="identifier" />
                    <xs:enumeration value="integer" />
                    <xs:enumeration value="pair" />
                    <xs:enumeration value="point" />
                    <xs:enumeration value="string" />
                    <xs:enumeration value="uri" />
                </xs:restriction>
            </xs:simpleType>
        </xs:attribute>
    </xs:attributeGroup>

    <xs:attributeGroup name="cardinality.OutcomeDeclaration.Attr">
        <xs:attribute name="cardinality" use="required">
            <xs:simpleType>
                <xs:restriction base="xs:string">
                    <xs:enumeration value="multiple" />
                    <xs:enumeration value="ordered" />
                    <xs:enumeration value="record" />
                    <xs:enumeration value="single" />
                </xs:restriction>
            </xs:simpleType>
        </xs:attribute>
    </xs:attributeGroup>

    <xs:attributeGroup name="externalScored.OutcomeDeclaration.Attr">
        <xs:attribute name="externalScored" use="optional">
            <xs:simpleType>
                <xs:restriction base="xs:string">
                    <xs:enumeration value="externalMachine" />
                    <xs:enumeration value="human" />
                </xs:restriction>
            </xs:simpleType>
        </xs:attribute>
    </xs:attributeGroup>

    <xs:attributeGroup name="identifier.OutcomeDeclaration.Attr">
        <xs:attribute name="identifier" use="required" type="Identifier.Type" />
    </xs:attributeGroup>

    <xs:attributeGroup name="interpretation.OutcomeDeclaration.Attr">
        <xs:attribute name="interpretation" use="optional" type="xs:string" />
    </xs:attributeGroup>

    <xs:attributeGroup name="longInterpretation.OutcomeDeclaration.Attr">
        <xs:attribute name="longInterpretation" use="optional" type="xs:anyURI" />
    </xs:attributeGroup>

    <xs:attributeGroup name="masteryValue.OutcomeDeclaration.Attr">
        <xs:attribute name="masteryValue" use="optional" type="xs:double" />
    </xs:attributeGroup>

    <xs:attributeGroup name="normalMaximum.OutcomeDeclaration.Attr">
        <xs:attribute name="normalMaximum" use="optional" type="NonNegativeDouble.Type" />
    </xs:attributeGroup>

    <xs:attributeGroup name="normalMinimum.OutcomeDeclaration.Attr">
        <xs:attribute name="normalMinimum" use="optional" type="xs:double" />
    </xs:attributeGroup>

    <xs:attributeGroup name="variableIdentifierRef.OutcomeDeclaration.Attr">
        <xs:attribute name="variableIdentifierRef" use="optional" type="UniqueIdentifierRef.Type" />
    </xs:attributeGroup>

    <xs:attributeGroup name="view.OutcomeDeclaration.Attr">
        <xs:attribute name="view" use="optional">
            <xs:simpleType>
                <xs:list itemType="View.Type" />
            </xs:simpleType>
        </xs:attribute>
    </xs:attributeGroup>

    <xs:attributeGroup name="excludeCategory.OutcomeMinMax.Attr">
        <xs:attribute name="excludeCategory" use="optional">
            <xs:simpleType>
                <xs:list itemType="IdentifierList.Type" />
            </xs:simpleType>
        </xs:attribute>
    </xs:attributeGroup>

    <xs:attributeGroup name="includeCategory.OutcomeMinMax.Attr">
        <xs:attribute name="includeCategory" use="optional">
            <xs:simpleType>
                <xs:list itemType="IdentifierList.Type" />
            </xs:simpleType>
        </xs:attribute>
    </xs:attributeGroup>

    <xs:attributeGroup name="outcomeIdentifier.OutcomeMinMax.Attr">
        <xs:attribute name="outcomeIdentifier" use="required" type="Identifier.Type" />
    </xs:attributeGroup>

    <xs:attributeGroup name="sectionIdentifier.OutcomeMinMax.Attr">
        <xs:attribute name="sectionIdentifier" use="optional" type="Identifier.Type" />
    </xs:attributeGroup>

    <xs:attributeGroup name="weightIdentifier.OutcomeMinMax.Attr">
        <xs:attribute name="weightIdentifier" use="optional" type="Identifier.Type" />
    </xs:attributeGroup>

    <xs:attributeGroup name="name.Param.Attr">
        <xs:attribute name="name" use="required" type="xs:string" />
    </xs:attributeGroup>

    <xs:attributeGroup name="type.Param.Attr">
        <xs:attribute name="type" use="optional" type="MimeType.Type" />
    </xs:attributeGroup>

    <xs:attributeGroup name="value.Param.Attr">
        <xs:attribute name="value" use="required" type="xs:string" />
    </xs:attributeGroup>

    <xs:attributeGroup name="valuetype.Param.Attr">
        <xs:attribute name="valuetype" use="required">
            <xs:simpleType>
                <xs:restriction base="xs:string">
                    <xs:enumeration value="DATA" />
                    <xs:enumeration value="REF" />
                </xs:restriction>
            </xs:simpleType>
        </xs:attribute>
    </xs:attributeGroup>

    <xs:attributeGroup name="pattern.PatternMatch.Attr">
        <xs:attribute name="pattern" use="required">
            <xs:simpleType>
                <xs:union>
                    <xs:simpleType>
                        <xs:restriction base="xs:string" />
                    </xs:simpleType>
                    <xs:simpleType>
                        <xs:restriction base="EncVariableString.Type" />
                    </xs:simpleType>
                </xs:union>
            </xs:simpleType>
        </xs:attribute>
    </xs:attributeGroup>

    <xs:attributeGroup name="center-point.PositionObjectInteraction.Attr">
        <xs:attribute name="center-point" use="optional">
            <xs:simpleType>
                <xs:list itemType="IntegerList.Type" />
            </xs:simpleType>
        </xs:attribute>
    </xs:attributeGroup>

    <xs:attributeGroup name="max-choices.PositionObjectInteraction.Attr">
        <xs:attribute name="max-choices" use="optional" default="1" type="xs:nonNegativeInteger" />
    </xs:attributeGroup>

    <xs:attributeGroup name="min-choices.PositionObjectInteraction.Attr">
        <xs:attribute name="min-choices" use="optional" type="xs:nonNegativeInteger" />
    </xs:attributeGroup>

    <xs:attributeGroup name="id.PositionObjectStage.Attr">
        <xs:attribute name="id" use="optional" type="UniqueIdentifier.Type" />
    </xs:attributeGroup>

    <xs:attributeGroup name="base.PrintedVariable.Attr">
        <xs:attribute name="base" use="optional" default="10">
            <xs:simpleType>
                <xs:union>
                    <xs:simpleType>
                        <xs:restriction base="xs:integer" />
                    </xs:simpleType>
                    <xs:simpleType>
                        <xs:restriction base="VariableString.Type" />
                    </xs:simpleType>
                </xs:union>
            </xs:simpleType>
        </xs:attribute>
    </xs:attributeGroup>

    <xs:attributeGroup name="baseuri.PrintedVariable.Attr">
        <xs:attribute ref="xml:base" use="optional" />
    </xs:attributeGroup>

    <xs:attributeGroup name="class.PrintedVariable.Attr">
        <xs:attribute name="class" use="optional">
            <xs:simpleType>
                <xs:list itemType="StringList.Type" />
            </xs:simpleType>
        </xs:attribute>
    </xs:attributeGroup>

    <xs:attributeGroup name="delimiter.PrintedVariable.Attr">
        <xs:attribute name="delimiter" use="optional" default=";" type="xs:normalizedString" />
    </xs:attributeGroup>

    <xs:attributeGroup name="field.PrintedVariable.Attr">
        <xs:attribute name="field" use="optional" type="xs:normalizedString" />
    </xs:attributeGroup>

    <xs:attributeGroup name="format.PrintedVariable.Attr">
        <xs:attribute name="format" use="optional" type="xs:normalizedString" />
    </xs:attributeGroup>

    <xs:attributeGroup name="id.PrintedVariable.Attr">
        <xs:attribute name="id" use="optional" type="UniqueIdentifier.Type" />
    </xs:attributeGroup>

    <xs:attributeGroup name="identifier.PrintedVariable.Attr">
        <xs:attribute name="identifier" use="required" type="Identifier.Type" />
    </xs:attributeGroup>

    <xs:attributeGroup name="index.PrintedVariable.Attr">
        <xs:attribute name="index" use="optional">
            <xs:simpleType>
                <xs:union>
                    <xs:simpleType>
                        <xs:restriction base="xs:integer" />
                    </xs:simpleType>
                    <xs:simpleType>
                        <xs:restriction base="VariableString.Type" />
                    </xs:simpleType>
                </xs:union>
            </xs:simpleType>
        </xs:attribute>
    </xs:attributeGroup>

    <xs:attributeGroup name="label.PrintedVariable.Attr">
        <xs:attribute name="label" use="optional" type="xs:normalizedString" />
    </xs:attributeGroup>

    <xs:attributeGroup name="language.PrintedVariable.Attr">
        <xs:attribute ref="xml:lang" use="optional" />
    </xs:attributeGroup>

    <xs:attributeGroup name="mapping-indicator.PrintedVariable.Attr">
        <xs:attribute name="mapping-indicator" use="optional" default="=" type="xs:normalizedString" />
    </xs:attributeGroup>

    <xs:attributeGroup name="powerForm.PrintedVariable.Attr">
        <xs:attribute name="powerForm" use="optional" default="false" type="xs:boolean" />
    </xs:attributeGroup>

    <xs:attributeGroup name="cite.Q.Attr">
        <xs:attribute name="cite" use="optional" type="xs:anyURI" />
    </xs:attributeGroup>

    <xs:attributeGroup name="max.RandomFloat.Attr">
        <xs:attribute name="max" use="required">
            <xs:simpleType>
                <xs:union>
                    <xs:simpleType>
                        <xs:restriction base="xs:double" />
                    </xs:simpleType>
                    <xs:simpleType>
                        <xs:restriction base="VariableString.Type" />
                    </xs:simpleType>
                </xs:union>
            </xs:simpleType>
        </xs:attribute>
    </xs:attributeGroup>

    <xs:attributeGroup name="min.RandomFloat.Attr">
        <xs:attribute name="min" use="optional" default="0">
            <xs:simpleType>
                <xs:union>
                    <xs:simpleType>
                        <xs:restriction base="xs:double" />
                    </xs:simpleType>
                    <xs:simpleType>
                        <xs:restriction base="VariableString.Type" />
                    </xs:simpleType>
                </xs:union>
            </xs:simpleType>
        </xs:attribute>
    </xs:attributeGroup>

    <xs:attributeGroup name="max.RandomInteger.Attr">
        <xs:attribute name="max" use="required">
            <xs:simpleType>
                <xs:union>
                    <xs:simpleType>
                        <xs:restriction base="xs:integer" />
                    </xs:simpleType>
                    <xs:simpleType>
                        <xs:restriction base="VariableString.Type" />
                    </xs:simpleType>
                </xs:union>
            </xs:simpleType>
        </xs:attribute>
    </xs:attributeGroup>

    <xs:attributeGroup name="min.RandomInteger.Attr">
        <xs:attribute name="min" use="optional" default="0">
            <xs:simpleType>
                <xs:union>
                    <xs:simpleType>
                        <xs:restriction base="xs:integer" />
                    </xs:simpleType>
                    <xs:simpleType>
                        <xs:restriction base="VariableString.Type" />
                    </xs:simpleType>
                </xs:union>
            </xs:simpleType>
        </xs:attribute>
    </xs:attributeGroup>

    <xs:attributeGroup name="step.RandomInteger.Attr">
        <xs:attribute name="step" use="optional" default="1">
            <xs:simpleType>
                <xs:union>
                    <xs:simpleType>
                        <xs:restriction base="xs:integer" />
                    </xs:simpleType>
                    <xs:simpleType>
                        <xs:restriction base="VariableString.Type" />
                    </xs:simpleType>
                </xs:union>
            </xs:simpleType>
        </xs:attribute>
    </xs:attributeGroup>

    <xs:attributeGroup name="numberRepeats.Repeat.Attr">
        <xs:attribute name="numberRepeats" use="required">
            <xs:simpleType>
                <xs:union>
                    <xs:simpleType>
                        <xs:restriction base="xs:NCName" />
                    </xs:simpleType>
                    <xs:simpleType>
                        <xs:restriction base="xs:int" />
                    </xs:simpleType>
                </xs:union>
            </xs:simpleType>
        </xs:attribute>
    </xs:attributeGroup>

    <xs:attributeGroup name="baseType.responseDeclaration.Attr">
        <xs:attribute name="baseType" use="optional">
            <xs:simpleType>
                <xs:restriction base="xs:string">
                    <xs:enumeration value="boolean" />
                    <xs:enumeration value="directedPair" />
                    <xs:enumeration value="duration" />
                    <xs:enumeration value="file" />
                    <xs:enumeration value="float" />
                    <xs:enumeration value="identifier" />
                    <xs:enumeration value="integer" />
                    <xs:enumeration value="pair" />
                    <xs:enumeration value="point" />
                    <xs:enumeration value="string" />
                    <xs:enumeration value="uri" />
                </xs:restriction>
            </xs:simpleType>
        </xs:attribute>
    </xs:attributeGroup>

    <xs:attributeGroup name="cardinality.responseDeclaration.Attr">
        <xs:attribute name="cardinality" use="required">
            <xs:simpleType>
                <xs:restriction base="xs:string">
                    <xs:enumeration value="multiple" />
                    <xs:enumeration value="ordered" />
                    <xs:enumeration value="record" />
                    <xs:enumeration value="single" />
                </xs:restriction>
            </xs:simpleType>
        </xs:attribute>
    </xs:attributeGroup>

    <xs:attributeGroup name="identifier.responseDeclaration.Attr">
        <xs:attribute name="identifier" use="required" type="UniqueIdentifier.Type" />
    </xs:attributeGroup>

    <xs:attributeGroup name="template.ResponseProcessing.Attr">
        <xs:attribute name="template" use="optional" type="xs:anyURI" />
    </xs:attributeGroup>

    <xs:attributeGroup name="templateLocation.ResponseProcessing.Attr">
        <xs:attribute name="templateLocation" use="optional" type="xs:anyURI" />
    </xs:attributeGroup>

    <xs:attributeGroup name="figures.RoundTo.Attr">
        <xs:attribute name="figures" use="required">
            <xs:simpleType>
                <xs:union>
                    <xs:simpleType>
                        <xs:restriction base="xs:integer" />
                    </xs:simpleType>
                    <xs:simpleType>
                        <xs:restriction base="VariableString.Type" />
                    </xs:simpleType>
                </xs:union>
            </xs:simpleType>
        </xs:attribute>
    </xs:attributeGroup>

    <xs:attributeGroup name="roundingMode.RoundTo.Attr">
        <xs:attribute name="roundingMode" use="required">
            <xs:simpleType>
                <xs:restriction base="xs:string">
                    <xs:enumeration value="decimalPlaces" />
                    <xs:enumeration value="significantFigures" />
                </xs:restriction>
            </xs:simpleType>
        </xs:attribute>
    </xs:attributeGroup>

    <xs:attributeGroup name="use.RubricBlock.Attr">
        <xs:attribute name="use" use="optional" type="xs:normalizedString" />
    </xs:attributeGroup>

    <xs:attributeGroup name="view.RubricBlock.Attr">
        <xs:attribute name="view" use="required">
            <xs:simpleType>
                <xs:list itemType="View.Type" />
            </xs:simpleType>
        </xs:attribute>
    </xs:attributeGroup>

    <xs:attributeGroup name="identifier.RubricBlockTemplateBlock.Attr">
        <xs:attribute name="identifier" use="required" type="Identifier.Type" />
    </xs:attributeGroup>

    <xs:attributeGroup name="showHide.RubricBlockTemplateBlock.Attr">
        <xs:attribute name="showHide" use="optional" default="show">
            <xs:simpleType>
                <xs:restriction base="xs:string">
                    <xs:enumeration value="show" />
                    <xs:enumeration value="hide" />
                </xs:restriction>
            </xs:simpleType>
        </xs:attribute>
    </xs:attributeGroup>

    <xs:attributeGroup name="templateIdentifier.RubricBlockTemplateBlock.Attr">
        <xs:attribute name="templateIdentifier" use="required" type="Identifier.Type" />
    </xs:attributeGroup>

    <xs:attributeGroup name="identifier.RubricBlockTemplateInline.Attr">
        <xs:attribute name="identifier" use="required" type="Identifier.Type" />
    </xs:attributeGroup>

    <xs:attributeGroup name="showHide.RubricBlockTemplateInline.Attr">
        <xs:attribute name="showHide" use="optional" default="show">
            <xs:simpleType>
                <xs:restriction base="xs:string">
                    <xs:enumeration value="show" />
                    <xs:enumeration value="hide" />
                </xs:restriction>
            </xs:simpleType>
        </xs:attribute>
    </xs:attributeGroup>

    <xs:attributeGroup name="templateIdentifier.RubricBlockTemplateInline.Attr">
        <xs:attribute name="templateIdentifier" use="required" type="Identifier.Type" />
    </xs:attributeGroup>

    <xs:attributeGroup name="max-choices.SelectPointInteraction.Attr">
        <xs:attribute name="max-choices" use="optional" default="0" type="xs:nonNegativeInteger" />
    </xs:attributeGroup>

    <xs:attributeGroup name="min-choices.SelectPointInteraction.Attr">
        <xs:attribute name="min-choices" use="optional" default="0" type="xs:nonNegativeInteger" />
    </xs:attributeGroup>

    <xs:attributeGroup name="identifier.SetValue.Attr">
        <xs:attribute name="identifier" use="required" type="Identifier.Type" />
    </xs:attributeGroup>

    <xs:attributeGroup name="fixed.SimpleAssociableChoice.Attr">
        <xs:attribute name="fixed" use="optional" type="xs:boolean" />
    </xs:attributeGroup>

    <xs:attributeGroup name="identifier.SimpleAssociableChoice.Attr">
        <xs:attribute name="identifier" use="required" type="Identifier.Type" />
    </xs:attributeGroup>

    <xs:attributeGroup name="match-group.SimpleAssociableChoice.Attr">
        <xs:attribute name="match-group" use="optional">
            <xs:simpleType>
                <xs:list itemType="IdentifierList.Type" />
            </xs:simpleType>
        </xs:attribute>
    </xs:attributeGroup>

    <xs:attributeGroup name="match-max.SimpleAssociableChoice.Attr">
        <xs:attribute name="match-max" use="required" type="xs:nonNegativeInteger" />
    </xs:attributeGroup>

    <xs:attributeGroup name="match-min.SimpleAssociableChoice.Attr">
        <xs:attribute name="match-nin" use="optional" default="0" type="xs:nonNegativeInteger" />
    </xs:attributeGroup>

    <xs:attributeGroup name="show-hide.SimpleAssociableChoice.Attr">
        <xs:attribute name="show-hide" use="optional">
            <xs:simpleType>
                <xs:restriction base="xs:string">
                    <xs:enumeration value="show" />
                    <xs:enumeration value="hide" />
                </xs:restriction>
            </xs:simpleType>
        </xs:attribute>
    </xs:attributeGroup>

    <xs:attributeGroup name="template-identifier.SimpleAssociableChoice.Attr">
        <xs:attribute name="template-identifier" use="optional" type="Identifier.Type" />
    </xs:attributeGroup>

    <xs:attributeGroup name="fixed.SimpleChoice.Attr">
        <xs:attribute name="fixed" use="optional" default="false" type="xs:boolean" />
    </xs:attributeGroup>

    <xs:attributeGroup name="identifier.SimpleChoice.Attr">
        <xs:attribute name="identifier" use="required" type="Identifier.Type" />
    </xs:attributeGroup>

    <xs:attributeGroup name="show-hide.SimpleChoice.Attr">
        <xs:attribute name="show-hide" use="optional" default="show">
            <xs:simpleType>
                <xs:restriction base="xs:string">
                    <xs:enumeration value="show" />
                    <xs:enumeration value="hide" />
                </xs:restriction>
            </xs:simpleType>
        </xs:attribute>
    </xs:attributeGroup>

    <xs:attributeGroup name="template-identifier.SimpleChoice.Attr">
        <xs:attribute name="template-identifier" use="optional" type="Identifier.Type" />
    </xs:attributeGroup>

    <xs:attributeGroup name="id.SimpleMatchSet.Attr">
        <xs:attribute name="id" use="optional" type="UniqueIdentifier.Type" />
    </xs:attributeGroup>

    <xs:attributeGroup name="lower-bound.SliderInteraction.Attr">
        <xs:attribute name="lower-bound" use="required" type="NonNegativeDouble.Type" />
    </xs:attributeGroup>

    <xs:attributeGroup name="orientation.SliderInteraction.Attr">
        <xs:attribute name="orientation" use="optional">
            <xs:simpleType>
                <xs:restriction base="xs:string">
                    <xs:enumeration value="horizontal" />
                    <xs:enumeration value="vertical" />
                </xs:restriction>
            </xs:simpleType>
        </xs:attribute>
    </xs:attributeGroup>

    <xs:attributeGroup name="reverse.SliderInteraction.Attr">
        <xs:attribute name="reverse" use="optional" type="xs:boolean" />
    </xs:attributeGroup>

    <xs:attributeGroup name="step.SliderInteraction.Attr">
        <xs:attribute name="step" use="optional" default="1.0" type="NonNegativeDouble.Type" />
    </xs:attributeGroup>

    <xs:attributeGroup name="step-label.SliderInteraction.Attr">
        <xs:attribute name="step-label" use="optional" default="false" type="xs:boolean" />
    </xs:attributeGroup>

    <xs:attributeGroup name="upper-bound.SliderInteraction.Attr">
        <xs:attribute name="upper-bound" use="required" type="NonNegativeDouble.Type" />
    </xs:attributeGroup>

    <xs:attributeGroup name="name.StatsOperator.Attr">
        <xs:attribute name="name" use="required">
            <xs:simpleType>
                <xs:restriction base="xs:string">
                    <xs:enumeration value="mean" />
                    <xs:enumeration value="sampleVariance" />
                    <xs:enumeration value="sampleSD" />
                    <xs:enumeration value="popVariance" />
                    <xs:enumeration value="popSD" />
                </xs:restriction>
            </xs:simpleType>
        </xs:attribute>
    </xs:attributeGroup>

    <xs:attributeGroup name="caseSensitive.StringMatch.Attr">
        <xs:attribute name="caseSensitive" use="required" type="xs:boolean" />
    </xs:attributeGroup>

    <xs:attributeGroup name="substring.StringMatch.Attr">
        <xs:attribute name="substring" use="optional" default="false" type="xs:boolean" />
    </xs:attributeGroup>

    <xs:attributeGroup name="href.StyleSheet.Attr">
        <xs:attribute name="href" use="required" type="xs:anyURI" />
    </xs:attributeGroup>

    <xs:attributeGroup name="media.StyleSheet.Attr">
        <xs:attribute name="media" use="optional" type="xs:normalizedString" />
    </xs:attributeGroup>

    <xs:attributeGroup name="title.StyleSheet.Attr">
        <xs:attribute name="title" use="optional" type="xs:normalizedString" />
    </xs:attributeGroup>

    <xs:attributeGroup name="type.StyleSheet.Attr">
        <xs:attribute name="type" use="required" type="MimeType.Type" />
    </xs:attributeGroup>

    <xs:attributeGroup name="caseSensitive.Substring.Attr">
        <xs:attribute name="caseSensitive" use="required" type="xs:boolean" />
    </xs:attributeGroup>

    <xs:attributeGroup name="summary.Table.Attr">
        <xs:attribute name="summary" use="optional" type="xs:string" />
    </xs:attributeGroup>

    <xs:attributeGroup name="abbr.TDH.Attr">
        <xs:attribute name="abbr" use="optional" type="xs:string" />
    </xs:attributeGroup>

    <xs:attributeGroup name="align.TDH.Attr">
        <xs:attribute name="align" use="optional">
            <xs:simpleType>
                <xs:restriction base="xs:string">
                    <xs:enumeration value="left" />
                    <xs:enumeration value="center" />
                    <xs:enumeration value="right" />
                    <xs:enumeration value="justify" />
                    <xs:enumeration value="char" />
                </xs:restriction>
            </xs:simpleType>
        </xs:attribute>
    </xs:attributeGroup>

    <xs:attributeGroup name="axis.TDH.Attr">
        <xs:attribute name="axis" use="optional" type="xs:string" />
    </xs:attributeGroup>

    <xs:attributeGroup name="colspan.TDH.Attr">
        <xs:attribute name="colspan" use="optional" type="xs:int" />
    </xs:attributeGroup>

    <xs:attributeGroup name="headers.TDH.Attr">
        <xs:attribute name="headers" use="optional">
            <xs:simpleType>
                <xs:list itemType="IdentifierList.Type" />
            </xs:simpleType>
        </xs:attribute>
    </xs:attributeGroup>

    <xs:attributeGroup name="rowspan.TDH.Attr">
        <xs:attribute name="rowspan" use="optional" type="xs:int" />
    </xs:attributeGroup>

    <xs:attributeGroup name="scope.TDH.Attr">
        <xs:attribute name="scope" use="optional">
            <xs:simpleType>
                <xs:restriction base="xs:string">
                    <xs:enumeration value="col" />
                    <xs:enumeration value="colgroup" />
                    <xs:enumeration value="row" />
                    <xs:enumeration value="rowgroup" />
                </xs:restriction>
            </xs:simpleType>
        </xs:attribute>
    </xs:attributeGroup>

    <xs:attributeGroup name="valign.TDH.Attr">
        <xs:attribute name="valign" use="optional">
            <xs:simpleType>
                <xs:restriction base="xs:string">
                    <xs:enumeration value="bottom" />
                    <xs:enumeration value="middle" />
                    <xs:enumeration value="top" />
                    <xs:enumeration value="baseline" />
                </xs:restriction>
            </xs:simpleType>
        </xs:attribute>
    </xs:attributeGroup>

    <xs:attributeGroup name="identifier.TemplateBlock.Attr">
        <xs:attribute name="identifier" use="required" type="Identifier.Type" />
    </xs:attributeGroup>

    <xs:attributeGroup name="show-hide.TemplateBlock.Attr">
        <xs:attribute name="show-hide" use="optional" default="show">
            <xs:simpleType>
                <xs:restriction base="xs:string">
                    <xs:enumeration value="show" />
                    <xs:enumeration value="hide" />
                </xs:restriction>
            </xs:simpleType>
        </xs:attribute>
    </xs:attributeGroup>

    <xs:attributeGroup name="template-identifier.TemplateBlock.Attr">
        <xs:attribute name="template-identifier" use="required" type="Identifier.Type" />
    </xs:attributeGroup>

    <xs:attributeGroup name="identifier.TemplateBlockFeedbackBlock.Attr">
        <xs:attribute name="identifier" use="required" type="Identifier.Type" />
    </xs:attributeGroup>

    <xs:attributeGroup name="outcome-identifier.TemplateBlockFeedbackBlock.Attr">
        <xs:attribute name="outcome-identifier" use="required" type="Identifier.Type" />
    </xs:attributeGroup>

    <xs:attributeGroup name="show-hide.TemplateBlockFeedbackBlock.Attr">
        <xs:attribute name="show-hide" use="optional" default="show">
            <xs:simpleType>
                <xs:restriction base="xs:string">
                    <xs:enumeration value="show" />
                    <xs:enumeration value="hide" />
                </xs:restriction>
            </xs:simpleType>
        </xs:attribute>
    </xs:attributeGroup>

    <xs:attributeGroup name="baseType.TemplateDeclaration.Attr">
        <xs:attribute name="baseType" use="optional">
            <xs:simpleType>
                <xs:restriction base="xs:string">
                    <xs:enumeration value="boolean" />
                    <xs:enumeration value="directedPair" />
                    <xs:enumeration value="duration" />
                    <xs:enumeration value="file" />
                    <xs:enumeration value="float" />
                    <xs:enumeration value="identifier" />
                    <xs:enumeration value="integer" />
                    <xs:enumeration value="pair" />
                    <xs:enumeration value="point" />
                    <xs:enumeration value="string" />
                    <xs:enumeration value="uri" />
                </xs:restriction>
            </xs:simpleType>
        </xs:attribute>
    </xs:attributeGroup>

    <xs:attributeGroup name="cardinality.TemplateDeclaration.Attr">
        <xs:attribute name="cardinality" use="required">
            <xs:simpleType>
                <xs:restriction base="xs:string">
                    <xs:enumeration value="multiple" />
                    <xs:enumeration value="ordered" />
                    <xs:enumeration value="record" />
                    <xs:enumeration value="single" />
                </xs:restriction>
            </xs:simpleType>
        </xs:attribute>
    </xs:attributeGroup>

    <xs:attributeGroup name="identifier.TemplateDeclaration.Attr">
        <xs:attribute name="identifier" use="required" type="Identifier.Type" />
    </xs:attributeGroup>

    <xs:attributeGroup name="mathVariable.TemplateDeclaration.Attr">
        <xs:attribute name="mathVariable" use="optional" default="false" type="xs:boolean" />
    </xs:attributeGroup>

    <xs:attributeGroup name="paramVariable.TemplateDeclaration.Attr">
        <xs:attribute name="paramVariable" use="optional" default="false" type="xs:boolean" />
    </xs:attributeGroup>

    <xs:attributeGroup name="templateIdentifier.TemplateDefault.Attr">
        <xs:attribute name="templateIdentifier" use="required" type="Identifier.Type" />
    </xs:attributeGroup>

    <xs:attributeGroup name="identifier.TemplateInline.Attr">
        <xs:attribute name="identifier" use="required" type="Identifier.Type" />
    </xs:attributeGroup>

    <xs:attributeGroup name="show-hide.TemplateInline.Attr">
        <xs:attribute name="show-hide" use="optional" default="show">
            <xs:simpleType>
                <xs:restriction base="xs:string">
                    <xs:enumeration value="show" />
                    <xs:enumeration value="hide" />
                </xs:restriction>
            </xs:simpleType>
        </xs:attribute>
    </xs:attributeGroup>

    <xs:attributeGroup name="template-identifier.TemplateInline.Attr">
        <xs:attribute name="template-identifier" use="required" type="Identifier.Type" />
    </xs:attributeGroup>

    <xs:attributeGroup name="access.TestFeedback.Attr">
        <xs:attribute name="access" use="required">
            <xs:simpleType>
                <xs:restriction base="xs:string">
                    <xs:enumeration value="atEnd" />
                    <xs:enumeration value="during" />
                </xs:restriction>
            </xs:simpleType>
        </xs:attribute>
    </xs:attributeGroup>

    <xs:attributeGroup name="identifier.TestFeedback.Attr">
        <xs:attribute name="identifier" use="required" type="Identifier.Type" />
    </xs:attributeGroup>

    <xs:attributeGroup name="outcomeIdentifier.TestFeedback.Attr">
        <xs:attribute name="outcomeIdentifier" use="required" type="Identifier.Type" />
    </xs:attributeGroup>

    <xs:attributeGroup name="showHide.TestFeedback.Attr">
        <xs:attribute name="showHide" use="required">
            <xs:simpleType>
                <xs:restriction base="xs:string">
                    <xs:enumeration value="show" />
                    <xs:enumeration value="hide" />
                </xs:restriction>
            </xs:simpleType>
        </xs:attribute>
    </xs:attributeGroup>

    <xs:attributeGroup name="title.TestFeedback.Attr">
        <xs:attribute name="title" use="optional" type="xs:normalizedString" />
    </xs:attributeGroup>

    <xs:attributeGroup name="baseType.TestVariables.Attr">
        <xs:attribute name="baseType" use="optional">
            <xs:simpleType>
                <xs:restriction base="xs:string">
                    <xs:enumeration value="boolean" />
                    <xs:enumeration value="directedPair" />
                    <xs:enumeration value="duration" />
                    <xs:enumeration value="file" />
                    <xs:enumeration value="float" />
                    <xs:enumeration value="identifier" />
                    <xs:enumeration value="integer" />
                    <xs:enumeration value="pair" />
                    <xs:enumeration value="point" />
                    <xs:enumeration value="string" />
                    <xs:enumeration value="uri" />
                </xs:restriction>
            </xs:simpleType>
        </xs:attribute>
    </xs:attributeGroup>

    <xs:attributeGroup name="excludeCategory.TestVariables.Attr">
        <xs:attribute name="excludeCategory" use="optional">
            <xs:simpleType>
                <xs:list itemType="IdentifierList.Type" />
            </xs:simpleType>
        </xs:attribute>
    </xs:attributeGroup>

    <xs:attributeGroup name="includeCategory.TestVariables.Attr">
        <xs:attribute name="includeCategory" use="optional">
            <xs:simpleType>
                <xs:list itemType="IdentifierList.Type" />
            </xs:simpleType>
        </xs:attribute>
    </xs:attributeGroup>

    <xs:attributeGroup name="sectionIdentifier.TestVariables.Attr">
        <xs:attribute name="sectionIdentifier" use="optional" type="Identifier.Type" />
    </xs:attributeGroup>

    <xs:attributeGroup name="variableIdentifier.TestVariables.Attr">
        <xs:attribute name="variableIdentifier" use="required" type="Identifier.Type" />
    </xs:attributeGroup>

    <xs:attributeGroup name="weightIdentifier.TestVariables.Attr">
        <xs:attribute name="weightIdentifier" use="optional" type="Identifier.Type" />
    </xs:attributeGroup>

    <xs:attributeGroup name="base.TextEntryInteraction.Attr">
        <xs:attribute name="base" use="optional" default="10" type="xs:int" />
    </xs:attributeGroup>

    <xs:attributeGroup name="expected-length.TextEntryInteraction.Attr">
        <xs:attribute name="expected-length" use="optional" type="xs:nonNegativeInteger" />
    </xs:attributeGroup>

    <xs:attributeGroup name="format.TextEntryInteraction.Attr">
        <xs:attribute name="format" use="optional" type="xs:normalizedString" />
    </xs:attributeGroup>

    <xs:attributeGroup name="pattern-mask.TextEntryInteraction.Attr">
        <xs:attribute name="pattern-mask" use="optional" type="xs:string" />
    </xs:attributeGroup>

    <xs:attributeGroup name="placeholder-text.TextEntryInteraction.Attr">
        <xs:attribute name="placeholder-text" use="optional" type="xs:string" />
    </xs:attributeGroup>

    <xs:attributeGroup name="response-identifier.TextEntryInteraction.Attr">
        <xs:attribute name="response-identifier" use="required" type="UniqueIdentifierRef.Type" />
    </xs:attributeGroup>

    <xs:attributeGroup name="string-identifier.TextEntryInteraction.Attr">
        <xs:attribute name="string-identifier" use="optional" type="UniqueIdentifierRef.Type" />
    </xs:attributeGroup>

    <xs:attributeGroup name="type.UploadInteraction.Attr">
        <xs:attribute name="type" use="optional" type="MimeType.Type" />
    </xs:attributeGroup>

    <xs:attributeGroup name="baseType.Value.Attr">
        <xs:attribute name="baseType" use="optional">
            <xs:simpleType>
                <xs:restriction base="xs:string">
                    <xs:enumeration value="boolean" />
                    <xs:enumeration value="directedPair" />
                    <xs:enumeration value="duration" />
                    <xs:enumeration value="file" />
                    <xs:enumeration value="float" />
                    <xs:enumeration value="identifier" />
                    <xs:enumeration value="integer" />
                    <xs:enumeration value="pair" />
                    <xs:enumeration value="point" />
                    <xs:enumeration value="string" />
                    <xs:enumeration value="uri" />
                </xs:restriction>
            </xs:simpleType>
        </xs:attribute>
    </xs:attributeGroup>

    <xs:attributeGroup name="fieldIdentifier.Value.Attr">
        <xs:attribute name="fieldIdentifier" use="optional" type="Identifier.Type" />
    </xs:attributeGroup>

    <xs:attributeGroup name="identifier.Variable.Attr">
        <xs:attribute name="identifier" use="required" type="Identifier.Type" />
    </xs:attributeGroup>

    <xs:attributeGroup name="weightIdentifier.Variable.Attr">
        <xs:attribute name="weightIdentifier" use="optional" type="Identifier.Type" />
    </xs:attributeGroup>

    <xs:attributeGroup name="sourceIdentifier.VariableMapping.Attr">
        <xs:attribute name="sourceIdentifier" use="required" type="Identifier.Type" />
    </xs:attributeGroup>

    <xs:attributeGroup name="targetIdentifier.VariableMapping.Attr">
        <xs:attribute name="targetIdentifier" use="required" type="Identifier.Type" />
    </xs:attributeGroup>

    <xs:attributeGroup name="identifier.Weight.Attr">
        <xs:attribute name="identifier" use="required" type="Identifier.Type" />
    </xs:attributeGroup>

    <xs:attributeGroup name="value.Weight.Attr">
        <xs:attribute name="value" use="required" type="xs:double" />
    </xs:attributeGroup>

    <!-- ================================================================================================== -->

    <!-- Generate Global List Types *********************************************************************** -->

    <xs:simpleType name="ElementIDList.Type">
        <xs:restriction base="xs:IDREF" />
    </xs:simpleType>

    <xs:simpleType name="IdentifierList.Type">
        <xs:restriction base="xs:NCName" />
    </xs:simpleType>

    <xs:simpleType name="IntegerList.Type">
        <xs:restriction base="xs:int" />
    </xs:simpleType>

    <xs:simpleType name="StringList.Type">
        <xs:restriction base="xs:string" />
    </xs:simpleType>

    <xs:simpleType name="ToleranceList.Type">
        <xs:union>
            <xs:simpleType>
                <xs:restriction base="xs:string" />
            </xs:simpleType>
            <xs:simpleType>
                <xs:restriction base="xs:double" />
            </xs:simpleType>
        </xs:union>
    </xs:simpleType>

    <xs:simpleType name="View.Type">
        <xs:restriction base="xs:string">
            <xs:enumeration value="author" />
            <xs:enumeration value="candidate" />
            <xs:enumeration value="proctor" />
            <xs:enumeration value="scorer" />
            <xs:enumeration value="testConstructor" />
            <xs:enumeration value="tutor" />
        </xs:restriction>
    </xs:simpleType>

    <!-- ================================================================================================== -->

    <!-- Generate Namespaced extension Group  ************************************************************* -->

    <xs:group name="grpLax.any">
        <xs:annotation>
            <xs:documentation>
                Any namespaced element from any namespace, other than the target namespace, may be included within an "any" element.
                The namespace for the imported element must be defined in the instance, and the schema must be imported.
                The extension has a definition of "lax" i.e. validation is not required if the XSD for the extension is not available.
            </xs:documentation>
        </xs:annotation>
        <xs:sequence>
            <xs:any namespace = "##other" processContents = "lax" minOccurs = "0" maxOccurs = "unbounded" />
        </xs:sequence>
    </xs:group>

    <xs:group name="grpAnyLax.any">
        <xs:annotation>
            <xs:documentation>
                Any namespaced element from any namespace may be included within an "any" element.
                The namespace for the imported element must be defined in the instance, and the schema must be imported.
                The extension has a definition of "lax" i.e. validation is not required if the XSD for the extension is not available.
            </xs:documentation>
        </xs:annotation>
        <xs:sequence>
            <xs:any namespace = "##any" processContents = "lax" minOccurs = "0" maxOccurs = "unbounded" />
        </xs:sequence>
    </xs:group>

    <!-- ================================================================================================== -->

    <!-- Generate Special DataTypes  ********************************************************************** -->

    <xs:complexType name="EmptyPrimitiveType.Type">
        <xs:complexContent>
            <xs:restriction base="xs:anyType" />
        </xs:complexContent>
    </xs:complexType>

    <!-- ================================================================================================== -->

    <!-- Generate the enumerated simpleType declarations ************************************************** -->

    <!-- ================================================================================================== -->

    <!-- Generate the simpleType elements based on IMS data-types (Parameter) ***************************** -->

    <!-- ================================================================================================== -->

    <!-- Generate the simpleType elements based on IMS data-types (Derived) ******************************* -->

    <!-- ================================================================================================== -->

    <!-- Generate the simpleType elements based on IMS data-types (Union) ********************************* -->

    <!-- ================================================================================================== -->

    <!-- Generate the simpleType elements based on IMS data-types (Complex) ******************************* -->

    <xs:element name="exitResponse" type="EmptyPrimitiveType.Type" />

    <xs:element name="exitTemplate" type="EmptyPrimitiveType.Type" />

    <xs:element name="exitTest" type="EmptyPrimitiveType.Type" />

    <xs:element name="null" type="EmptyPrimitiveType.Type" />

    <!-- ================================================================================================== -->

    <!-- Generate the derived data-type elements based upon simpleType ************************************ -->

    <xs:simpleType name="ARIALevelInteger.Type">
        <xs:restriction base="xs:integer">
            <xs:minInclusive value="1" />
        </xs:restriction>
    </xs:simpleType>

    <xs:simpleType name="Coords.Type">
        <xs:restriction base="xs:normalizedString">
            <xs:pattern value="(([0-9]+%?[,]){2}([0-9]+%?))|(([0-9]+%?[,]){3}([0-9]+%?))|(([0-9]+%?[,]){2}(([0-9]+%?[,]){2})+([0-9]+%?[,])([0-9]+%?))" />
        </xs:restriction>
    </xs:simpleType>

    <xs:simpleType name="EncVariableString.Type">
        <xs:restriction base="xs:string">
            <xs:pattern value="\{[\i-[:]][\c-[:]]*\}" />
        </xs:restriction>
    </xs:simpleType>

    <xs:simpleType name="Identifier.Type">
        <xs:restriction base="xs:NCName" />
    </xs:simpleType>

    <xs:simpleType name="Length.Type">
        <xs:restriction base="xs:string">
            <xs:pattern value="[0-9]+%?" />
        </xs:restriction>
    </xs:simpleType>

    <xs:simpleType name="MimeType.Type">
        <xs:restriction base="xs:normalizedString">
            <xs:pattern value="[\p{IsBasicLatin}-[()&lt;&gt;@,;:\\&quot;/\[\]?=]]+/[\p{IsBasicLatin}-[()&lt;&gt;@,;:\\&quot;/\[\]?=]]+" />
        </xs:restriction>
    </xs:simpleType>

    <xs:simpleType name="NonNegativeDouble.Type">
        <xs:restriction base="xs:double">
            <xs:minInclusive value="0.0" />
        </xs:restriction>
    </xs:simpleType>

    <xs:simpleType name="UniqueIdentifier.Type">
        <xs:restriction base="xs:ID" />
    </xs:simpleType>

    <xs:simpleType name="UniqueIdentifierRef.Type">
        <xs:restriction base="xs:IDREF" />
    </xs:simpleType>

    <xs:simpleType name="VariableString.Type">
        <xs:restriction base="xs:string">
            <xs:pattern value="[\i-[:]][\c-[:]]*" />
        </xs:restriction>
    </xs:simpleType>

    <!-- ================================================================================================== -->

    <!-- Generate the derived data-type elements based upon derived simpleType **************************** -->

    <!-- ================================================================================================== -->

    <!-- Generate the ComplexTypes ************************************************************************ -->

    <xs:complexType name="A.Type" abstract="false" mixed="true">
        <xs:annotation>
            <xs:documentation source="documentation">
                This provides the functionality of the HTML 'a' tag and is used to identifiy a link. If t-
                he 'a' tag has an href attribute, then it represents a hyperlink (a hypertext anchor) lab-
                eled by its contents. If the a element has no href attribute, then the element represents
                a placeholder for where a link might otherwise have been placed, if it had been relevant,
                consisting of just the element's contents.
            </xs:documentation>
        </xs:annotation>
        <xs:complexContent>
            <xs:extension base="BaseSequenceXBase.Type">
                <xs:sequence>
                    <xs:choice minOccurs="0" maxOccurs="unbounded">
                        <xs:element ref="qti-text-entry-interaction" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="qti-hottext" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="qti-printed-variable" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="qti-gap" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="qti-feedback-inline" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="qti-template-inline" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="qti-inline-choice-interaction" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="qti-end-attempt-interaction" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="qti-custom-interaction" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="m3:math" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="xi:include" minOccurs="1" maxOccurs="1" />
                        <xs:choice minOccurs="1" maxOccurs="1">
                            <xs:element ref="img" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="br" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="object" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="em" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="a" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="code" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="span" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="sub" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="acronym" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="big" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="tt" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="kbd" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="q" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="i" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="dfn" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="abbr" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="strong" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="sup" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="var" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="small" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="samp" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="b" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="cite" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="bdo" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="bdi" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="label" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="ruby" minOccurs="1" maxOccurs="1" />
                            <xs:choice minOccurs="1" maxOccurs="1">
                                <xs:element ref="ssml:p" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="ssml:s" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="ssml:say-as" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="ssml:phoneme" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="ssml:sub" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="ssml:voice" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="ssml:emphasis" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="ssml:break" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="ssml:prosody" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="ssml:mark" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="ssml:audio" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="ssml:speak" minOccurs="1" maxOccurs="1" />
                            </xs:choice>
                        </xs:choice>
                    </xs:choice>
                </xs:sequence>
                <xs:attributeGroup ref="href.A.Attr" />
                <xs:attributeGroup ref="type.A.Attr" />
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <xs:complexType name="AnyN.Type" abstract="false" mixed="false">
        <xs:annotation>
            <xs:documentation source="documentation">
                This is one of the expression functions. The 'anyN' operator takes one or more sub-expres-
                sions each with a base-type of boolean and single cardinality. The result is a single boo-
                lean which is true if at least min of the sub-expressions are true and at most max of the
                sub-expressions are true. If more than n - min sub-expressions are false (where n is the
                total number of sub-expressions) or more than max sub-expressions are true then the result
                is false. If one or more sub-expressions are NULL then it is possible that neither of the-
                se conditions is satisfied, in which case the operator results in NULL. For example, if m-
                in is 3 and max is 4 and the sub-expressions have values {true,true,false,NULL} then the
                operator results in NULL whereas {true,false,false,NULL} results in false and {true,true,-
                true,NULL} results in true. The result NULL indicates that the correct value for the oper-
                ator cannot be determined.
            </xs:documentation>
        </xs:annotation>
        <xs:sequence>
            <xs:choice minOccurs="1" maxOccurs="unbounded">
                <xs:element ref="and" minOccurs="1" maxOccurs="1" />
                <xs:element ref="gt" minOccurs="1" maxOccurs="1" />
                <xs:element ref="not" minOccurs="1" maxOccurs="1" />
                <xs:element ref="lt" minOccurs="1" maxOccurs="1" />
                <xs:element ref="gte" minOccurs="1" maxOccurs="1" />
                <xs:element ref="lte" minOccurs="1" maxOccurs="1" />
                <xs:element ref="or" minOccurs="1" maxOccurs="1" />
                <xs:element ref="sum" minOccurs="1" maxOccurs="1" />
                <xs:element ref="durationLT" minOccurs="1" maxOccurs="1" />
                <xs:element ref="durationGTE" minOccurs="1" maxOccurs="1" />
                <xs:element ref="subtract" minOccurs="1" maxOccurs="1" />
                <xs:element ref="divide" minOccurs="1" maxOccurs="1" />
                <xs:element ref="multiple" minOccurs="1" maxOccurs="1" />
                <xs:element ref="ordered" minOccurs="1" maxOccurs="1" />
                <xs:element ref="customOperator" minOccurs="1" maxOccurs="1" />
                <xs:element ref="random" minOccurs="1" maxOccurs="1" />
                <xs:element ref="numberIncorrect" minOccurs="1" maxOccurs="1" />
                <xs:element ref="numberCorrect" minOccurs="1" maxOccurs="1" />
                <xs:element ref="numberPresented" minOccurs="1" maxOccurs="1" />
                <xs:element ref="numberResponded" minOccurs="1" maxOccurs="1" />
                <xs:element ref="numberSelected" minOccurs="1" maxOccurs="1" />
                <xs:element ref="substring" minOccurs="1" maxOccurs="1" />
                <xs:element ref="equalRounded" minOccurs="1" maxOccurs="1" />
                <xs:element ref="null" minOccurs="1" maxOccurs="1" />
                <xs:element ref="delete" minOccurs="1" maxOccurs="1" />
                <xs:element ref="match" minOccurs="1" maxOccurs="1" />
                <xs:element ref="index" minOccurs="1" maxOccurs="1" />
                <xs:element ref="power" minOccurs="1" maxOccurs="1" />
                <xs:element ref="equal" minOccurs="1" maxOccurs="1" />
                <xs:element ref="contains" minOccurs="1" maxOccurs="1" />
                <xs:element ref="containerSize" minOccurs="1" maxOccurs="1" />
                <xs:element ref="correct" minOccurs="1" maxOccurs="1" />
                <xs:element ref="default" minOccurs="1" maxOccurs="1" />
                <xs:element ref="anyN" minOccurs="1" maxOccurs="1" />
                <xs:element ref="integerDivide" minOccurs="1" maxOccurs="1" />
                <xs:element ref="integerModulus" minOccurs="1" maxOccurs="1" />
                <xs:element ref="isNull" minOccurs="1" maxOccurs="1" />
                <xs:element ref="member" minOccurs="1" maxOccurs="1" />
                <xs:element ref="product" minOccurs="1" maxOccurs="1" />
                <xs:element ref="round" minOccurs="1" maxOccurs="1" />
                <xs:element ref="truncate" minOccurs="1" maxOccurs="1" />
                <xs:element ref="fieldValue" minOccurs="1" maxOccurs="1" />
                <xs:element ref="randomInteger" minOccurs="1" maxOccurs="1" />
                <xs:element ref="randomFloat" minOccurs="1" maxOccurs="1" />
                <xs:element ref="variable" minOccurs="1" maxOccurs="1" />
                <xs:element ref="outcomeMinimum" minOccurs="1" maxOccurs="1" />
                <xs:element ref="outcomeMaximum" minOccurs="1" maxOccurs="1" />
                <xs:element ref="testVariables" minOccurs="1" maxOccurs="1" />
                <xs:element ref="integerToFloat" minOccurs="1" maxOccurs="1" />
                <xs:element ref="inside" minOccurs="1" maxOccurs="1" />
                <xs:element ref="baseValue" minOccurs="1" maxOccurs="1" />
                <xs:element ref="patternMatch" minOccurs="1" maxOccurs="1" />
                <xs:element ref="mapResponsePoint" minOccurs="1" maxOccurs="1" />
                <xs:element ref="mapResponse" minOccurs="1" maxOccurs="1" />
                <xs:element ref="stringMatch" minOccurs="1" maxOccurs="1" />
                <xs:element ref="repeat" minOccurs="1" maxOccurs="1" />
                <xs:element ref="roundTo" minOccurs="1" maxOccurs="1" />
                <xs:element ref="lcm" minOccurs="1" maxOccurs="1" />
                <xs:element ref="gcd" minOccurs="1" maxOccurs="1" />
                <xs:element ref="min" minOccurs="1" maxOccurs="1" />
                <xs:element ref="max" minOccurs="1" maxOccurs="1" />
                <xs:element ref="mathConstant" minOccurs="1" maxOccurs="1" />
                <xs:element ref="statsOperator" minOccurs="1" maxOccurs="1" />
                <xs:element ref="mathOperator" minOccurs="1" maxOccurs="1" />
            </xs:choice>
        </xs:sequence>
        <xs:attributeGroup ref="min.AnyN.Attr" />
        <xs:attributeGroup ref="max.AnyN.Attr" />
    </xs:complexType>

    <xs:complexType name="AreaMapping.Type" abstract="false" mixed="false">
        <xs:annotation>
            <xs:documentation source="documentation">
                A special class used to create a mapping from a source set of point values to a target set
                of float values. When mapping containers, the result is the sum of the mapped values from
                the target set. See mapResponsePoint for details. The attributes have the same meaning as
                the similarly named attributes on mapping.
            </xs:documentation>
        </xs:annotation>
        <xs:sequence>
            <xs:element ref="areaMapEntry" minOccurs="1" maxOccurs="unbounded" />
        </xs:sequence>
        <xs:attributeGroup ref="lowerBound.AreaMapping.Attr" />
        <xs:attributeGroup ref="upperBound.AreaMapping.Attr" />
        <xs:attributeGroup ref="defaultValue.AreaMapping.Attr" />
    </xs:complexType>

    <xs:complexType name="AssessmentItem.Type" abstract="false" mixed="false">
        <xs:annotation>
            <xs:documentation source="documentation">
                An assessment item encompasses the information that is presented to a candidate and infor-
                mation about how to score the item. Scoring takes place when candidate responses are tran-
                sformed into outcomes by response processing rules. It is sometimes desirable to have sev-
                eral different items that appear the same to the candidate but which are scored different-
                ly. In this specification, these are distinct items by definition and must therefore have
                distinct identifiers. To help facilitate the exchange of items that share significant par-
                ts of their presentation this specification supports the inclusion of separately managed
                item fragments (see Item and Test Fragments) in the itemBody.
            </xs:documentation>
        </xs:annotation>
        <xs:sequence>
            <xs:element ref="responseDeclaration" minOccurs="0" maxOccurs="unbounded" />
            <xs:element ref="outcomeDeclaration" minOccurs="0" maxOccurs="unbounded" />
            <xs:element ref="templateDeclaration" minOccurs="0" maxOccurs="unbounded" />
            <!--  NEW ADDITION (2016-07-12) -->
            <xs:element ref="contextDeclaration" minOccurs="0" maxOccurs="unbounded" />
            <!--  ************************* -->
            <xs:element ref="templateProcessing" minOccurs="0" maxOccurs="1" />
            <xs:element ref="assessmentStimulusRef" minOccurs="0" maxOccurs="unbounded" />
            <xs:element ref="stylesheet" minOccurs="0" maxOccurs="unbounded" />
            <xs:element ref="itemBody" minOccurs="0" maxOccurs="1" />
            <!--  NEW ADDITION (2016-11-28) -->
            <xs:element ref="catalogInfo" minOccurs="0" maxOccurs="unbounded" />
            <!--  ************************* -->
            <xs:element ref="responseProcessing" minOccurs="0" maxOccurs="1" />
            <xs:element ref="modalFeedback" minOccurs="0" maxOccurs="unbounded" />
            <!--  NEW ADDITION (2017-01-07) -->
            <xs:element name="companionMaterialsInfo" type="CompanionMaterialsInfo.Type" minOccurs="0" maxOccurs="1" />
            <xs:element name="externalSupplementalAccessibility" type="ExternalSupplementalAccessibility.Type" minOccurs="0" maxOccurs="1" />
            <!--  ************************* -->
        </xs:sequence>
        <xs:attributeGroup ref="identifier.AssessmentItem.Attr" />
        <xs:attributeGroup ref="title.AssessmentItem.Attr" />
        <xs:attributeGroup ref="label.AssessmentItem.Attr" />
        <xs:attributeGroup ref="language.AssessmentItem.Attr" />
        <xs:attributeGroup ref="toolName.AssessmentItem.Attr" />
        <xs:attributeGroup ref="toolVersion.AssessmentItem.Attr" />
        <xs:attributeGroup ref="adaptive.AssessmentItem.Attr" />
        <xs:attributeGroup ref="timeDependent.AssessmentItem.Attr" />
    </xs:complexType>

    <xs:complexType name="AssessmentStimulus.Type" abstract="false" mixed="false">
        <xs:annotation>
            <xs:documentation source="documentation">
                An assessment stimulus object is the used to enable content to be shared by several Asses-
                sment Items. The key feature is that this shared stimulus content must be supplied in the
                same context for each of the Assessment Items that make use of it. The assessment stimulus
                approach provides a mechanism to allow the stimulus content to be managed independently.
            </xs:documentation>
        </xs:annotation>
        <xs:sequence>
            <xs:element ref="stylesheet" minOccurs="0" maxOccurs="unbounded" />
            <xs:element ref="stimulusBody" minOccurs="1" maxOccurs="1" />
        </xs:sequence>
        <xs:attributeGroup ref="identifier.AssessmentStimulus.Attr" />
        <xs:attributeGroup ref="title.AssessmentStimulus.Attr" />
        <xs:attributeGroup ref="label.AssessmentStimulus.Attr" />
        <xs:attributeGroup ref="language.AssessmentStimulus.Attr" />
        <xs:attributeGroup ref="toolName.AssessmentStimulus.Attr" />
        <xs:attributeGroup ref="toolVersion.AssessmentStimulus.Attr" />
    </xs:complexType>

    <xs:complexType name="AssociableHotspot.Type" abstract="false" mixed="false">
        <xs:annotation>
            <xs:documentation source="documentation">
                This is used to define the hotspots that are associated with the features in the 'graphic-
                AssociateInteraction' and 'graphicGapMatchInteraction' interactions.
            </xs:documentation>
        </xs:annotation>
        <xs:complexContent>
            <xs:extension base="BaseSequenceXBaseEmpty.Type">
                <xs:attributeGroup ref="identifier.AssociableHotspot.Attr" />
                <xs:attributeGroup ref="template-identifier.AssociableHotspot.Attr" />
                <xs:attributeGroup ref="show-hide.AssociableHotspot.Attr" />
                <xs:attributeGroup ref="match-group.AssociableHotspot.Attr" />
                <xs:attributeGroup ref="shape.AssociableHotspot.Attr" />
                <xs:attributeGroup ref="coords.AssociableHotspot.Attr" />
                <xs:attributeGroup ref="hotspot-label.AssociableHotspot.Attr" />
                <xs:attributeGroup ref="match-max.AssociableHotspot.Attr" />
                <xs:attributeGroup ref="match-min.AssociableHotspot.Attr" />
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <xs:complexType name="AssociateInteraction.Type" abstract="false" mixed="false">
        <xs:annotation>
            <xs:documentation source="documentation">
                An Associate Interaction is a blockInteraction that presents candidates with a number of
                choices and allows them to create associations between them. The associateInteraction must
                be bound to a response variable with base-type pair and either single or multiple cardina-
                lity.
            </xs:documentation>
        </xs:annotation>
        <xs:complexContent>
            <xs:extension base="BasePromptInteraction.Type">
                <xs:sequence>
                    <xs:element ref="qti-simple-associable-choice" minOccurs="1" maxOccurs="unbounded" />
                </xs:sequence>
                <xs:attributeGroup ref="shuffle.AssociateInteraction.Attr" />
                <xs:attributeGroup ref="max-associations.AssociateInteraction.Attr" />
                <xs:attributeGroup ref="min-associations.AssociateInteraction.Attr" />
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <xs:complexType name="BasePromptInteraction.Type" abstract="false" mixed="false">
        <xs:annotation>
            <xs:documentation source="documentation">
                The BasePromptInteraction is the base class for the QTI interactions that support a Promp-
                t. This also consists of a set of children characteristics.
            </xs:documentation>
        </xs:annotation>
        <xs:sequence>
            <xs:element ref="qti-prompt" minOccurs="0" maxOccurs="1" />
        </xs:sequence>
        <xs:attributeGroup ref="id.BasePromptInteraction.Attr" />
        <xs:attributeGroup ref="class.BasePromptInteraction.Attr" />
        <xs:attributeGroup ref="language.BasePromptInteraction.Attr" />
        <xs:attributeGroup ref="label.BasePromptInteraction.Attr" />
        <xs:attributeGroup ref="base.BasePromptInteraction.Attr" />
        <xs:attributeGroup ref="response-identifier.BasePromptInteraction.Attr" />
        <xs:attributeGroup ref="dir.BasePromptInteraction.Attr" />
        <xs:attributeGroup ref="role.BasePromptInteraction.Attr" />
        <xs:attributeGroup ref="aria-controls.BasePromptInteraction.Attr" />
        <xs:attributeGroup ref="aria-describedby.BasePromptInteraction.Attr" />
        <xs:attributeGroup ref="aria-flowsto.BasePromptInteraction.Attr" />
        <xs:attributeGroup ref="aria-label.BasePromptInteraction.Attr" />
        <xs:attributeGroup ref="aria-labelledby.BasePromptInteraction.Attr" />
        <xs:attributeGroup ref="aria-level.BasePromptInteraction.Attr" />
        <xs:attributeGroup ref="aria-live.BasePromptInteraction.Attr" />
        <xs:attributeGroup ref="aria-orientation.BasePromptInteraction.Attr" />
        <xs:attributeGroup ref="aria-owns.BasePromptInteraction.Attr" />
        <xs:attributeGroup ref="dataExtension.BasePromptInteraction.Attr" />
        <!--  NEW ADDITION (2016-11-28) -->
        <xs:attribute name = "data-catalog-idref" use="optional" type="xs:IDREF" />
        <!--  ************************* -->
        <!--  NEW ADDITION (2017-01-04) -->
        <xs:attribute name = "aria-hidden" use="optional" type="xs:boolean" default="false"/>
        <xs:attribute name = "data-qti-suppress-tts" use="optional">
            <xs:simpleType>
                <xs:restriction base="xs:string">
                    <xs:enumeration value="computer-read-aloud" />
                    <xs:enumeration value="screen-reader" />
                    <xs:enumeration value="all" />
                </xs:restriction>
            </xs:simpleType>
        </xs:attribute>
        <!--  ************************* -->
        <!--  NEW ADDITION (2017-01-06) -->
        <xs:attribute name = "aria-activedescendant" use="optional" type="xs:IDREF" />
        <xs:attribute name = "aria-atomic" use="optional" type="xs:boolean" default="false" />
        <xs:attribute name = "aria-autocomplete" use="optional" default="none">
            <xs:simpleType>
                <xs:restriction base="xs:string">
                    <xs:enumeration value="inline" />
                    <xs:enumeration value="list" />
                    <xs:enumeration value="both" />
                    <xs:enumeration value="none" />
                </xs:restriction>
            </xs:simpleType>
        </xs:attribute>
        <xs:attribute name = "aria-busy" use="optional" type="xs:boolean" default="false" />
        <xs:attribute name = "aria-checked" use="optional" default="undefined">
            <xs:simpleType>
                <xs:restriction base="xs:string">
                    <xs:enumeration value="true" />
                    <xs:enumeration value="false" />
                    <xs:enumeration value="mixed" />
                    <xs:enumeration value="undefined" />
                </xs:restriction>
            </xs:simpleType>
        </xs:attribute>
        <xs:attribute name = "aria-disabled" use="optional" type="xs:boolean" default="false" />
        <xs:attribute name="aria-dropeffect" use="optional" default="none">
            <xs:simpleType>
                <xs:list itemType="DropEffectList.Type" />
            </xs:simpleType>
        </xs:attribute>
        <xs:attribute name = "aria-expanded" use="optional" default="undefined">
            <xs:simpleType>
                <xs:restriction base="xs:string">
                    <xs:enumeration value="true" />
                    <xs:enumeration value="false" />
                    <xs:enumeration value="undefined" />
                </xs:restriction>
            </xs:simpleType>
        </xs:attribute>
        <xs:attribute name = "aria-grabbed" use="optional" default="undefined">
            <xs:simpleType>
                <xs:restriction base="xs:string">
                    <xs:enumeration value="true" />
                    <xs:enumeration value="false" />
                    <xs:enumeration value="undefined" />
                </xs:restriction>
            </xs:simpleType>
        </xs:attribute>
        <xs:attribute name = "aria-haspopup" use="optional" type="xs:boolean" default="false" />
        <xs:attribute name = "aria-invalid" use="optional" default="false">
            <xs:simpleType>
                <xs:restriction base="xs:string">
                    <xs:enumeration value="true" />
                    <xs:enumeration value="false" />
                    <xs:enumeration value="grammar" />
                    <xs:enumeration value="spelling" />
                </xs:restriction>
            </xs:simpleType>
        </xs:attribute>
        <xs:attribute name = "aria-multiline" use="optional" type="xs:boolean" default="false" />
        <xs:attribute name = "aria-multiselectable" use="optional" type="xs:boolean" default="false" />
        <xs:attribute name = "aria-posinset" use="optional" type="ARIALevelInteger.Type" />
        <xs:attribute name = "aria-pressed" use="optional" default="undefined">
            <xs:simpleType>
                <xs:restriction base="xs:string">
                    <xs:enumeration value="true" />
                    <xs:enumeration value="false" />
                    <xs:enumeration value="mixed" />
                    <xs:enumeration value="undefined" />
                </xs:restriction>
            </xs:simpleType>
        </xs:attribute>
        <xs:attribute name = "aria-readonly" use="optional" type="xs:boolean" default="false" />
        <xs:attribute name="aria-relevant" use="optional" default="additions text">
            <xs:simpleType>
                <xs:list itemType="RelevantList.Type" />
            </xs:simpleType>
        </xs:attribute>
        <xs:attribute name = "aria-required" use="optional" type="xs:boolean" default="false" />
        <xs:attribute name = "aria-selected" use="optional" default="undefined">
            <xs:simpleType>
                <xs:restriction base="xs:string">
                    <xs:enumeration value="true" />
                    <xs:enumeration value="false" />
                    <xs:enumeration value="undefined" />
                </xs:restriction>
            </xs:simpleType>
        </xs:attribute>
        <xs:attribute name = "aria-setsize" use="optional" type="xs:positiveInteger" />
        <xs:attribute name = "aria-sort" use="optional" default="none">
            <xs:simpleType>
                <xs:restriction base="xs:string">
                    <xs:enumeration value="ascending" />
                    <xs:enumeration value="descending" />
                    <xs:enumeration value="none" />
                    <xs:enumeration value="other" />
                </xs:restriction>
            </xs:simpleType>
        </xs:attribute>
        <xs:attribute name = "aria-valuemax" use="optional" type="xs:decimal" />
        <xs:attribute name = "aria-valuemin" use="optional" type="xs:decimal" />
        <xs:attribute name = "aria-valuenow" use="optional" type="xs:decimal" />
        <xs:attribute name = "aria-valuetext" use="optional" type="xs:string" />
        <!--  ************************* -->
    </xs:complexType>

    <xs:complexType name="BaseSequence.Type" abstract="false" mixed="false">
        <xs:annotation>
            <xs:documentation source="documentation">
                The BaseSequence class provides the base characteristics for some of the HTML tag and QTI
                interactions.
            </xs:documentation>
        </xs:annotation>
        <xs:sequence>
        </xs:sequence>
        <xs:attributeGroup ref="id.BaseSequence.Attr" />
        <xs:attributeGroup ref="class.BaseSequence.Attr" />
        <xs:attributeGroup ref="language.BaseSequence.Attr" />
        <xs:attributeGroup ref="label.BaseSequence.Attr" />
        <xs:attributeGroup ref="dir.BaseSequence.Attr" />
        <xs:attributeGroup ref="role.BaseSequence.Attr" />
        <xs:attributeGroup ref="aria-controls.BaseSequence.Attr" />
        <xs:attributeGroup ref="aria-describedby.BaseSequence.Attr" />
        <xs:attributeGroup ref="aria-flowto.BaseSequence.Attr" />
        <xs:attributeGroup ref="aria-label.BaseSequence.Attr" />
        <xs:attributeGroup ref="aria-labelledby.BaseSequence.Attr" />
        <xs:attributeGroup ref="aria-level.BaseSequence.Attr" />
        <xs:attributeGroup ref="aria-live.BaseSequence.Attr" />
        <xs:attributeGroup ref="aria-orientation.BaseSequence.Attr" />
        <xs:attributeGroup ref="aria-owns.BaseSequence.Attr" />
        <xs:attributeGroup ref="dataExtension.BaseSequence.Attr" />
        <!--  NEW ADDITION (2016-11-28) -->
        <xs:attribute name = "data-catalog-idref" use="optional" type="xs:IDREF" />
        <!--  ************************* -->
        <!--  NEW ADDITION (2017-01-04) -->
        <xs:attribute name = "aria-hidden" use="optional" type="xs:boolean" default="false"/>
        <xs:attribute name = "data-qti-suppress-tts" use="optional">
            <xs:simpleType>
                <xs:restriction base="xs:string">
                    <xs:enumeration value="computer-read-aloud" />
                    <xs:enumeration value="screen-reader" />
                    <xs:enumeration value="all" />
                </xs:restriction>
            </xs:simpleType>
        </xs:attribute>
        <!--  ************************* -->
        <!--  NEW ADDITION (2017-01-06) -->
        <xs:attribute name = "aria-activedescendant" use="optional" type="xs:IDREF" />
        <xs:attribute name = "aria-atomic" use="optional" type="xs:boolean" default="false" />
        <xs:attribute name = "aria-autocomplete" use="optional" default="none">
            <xs:simpleType>
                <xs:restriction base="xs:string">
                    <xs:enumeration value="inline" />
                    <xs:enumeration value="list" />
                    <xs:enumeration value="both" />
                    <xs:enumeration value="none" />
                </xs:restriction>
            </xs:simpleType>
        </xs:attribute>
        <xs:attribute name = "aria-busy" use="optional" type="xs:boolean" default="false" />
        <xs:attribute name = "aria-checked" use="optional" default="undefined">
            <xs:simpleType>
                <xs:restriction base="xs:string">
                    <xs:enumeration value="true" />
                    <xs:enumeration value="false" />
                    <xs:enumeration value="mixed" />
                    <xs:enumeration value="undefined" />
                </xs:restriction>
            </xs:simpleType>
        </xs:attribute>
        <xs:attribute name = "aria-disabled" use="optional" type="xs:boolean" default="false" />
        <xs:attribute name="aria-dropeffect" use="optional" default="none">
            <xs:simpleType>
                <xs:list itemType="DropEffectList.Type" />
            </xs:simpleType>
        </xs:attribute>
        <xs:attribute name = "aria-expanded" use="optional" default="undefined">
            <xs:simpleType>
                <xs:restriction base="xs:string">
                    <xs:enumeration value="true" />
                    <xs:enumeration value="false" />
                    <xs:enumeration value="undefined" />
                </xs:restriction>
            </xs:simpleType>
        </xs:attribute>
        <xs:attribute name = "aria-grabbed" use="optional" default="undefined">
            <xs:simpleType>
                <xs:restriction base="xs:string">
                    <xs:enumeration value="true" />
                    <xs:enumeration value="false" />
                    <xs:enumeration value="undefined" />
                </xs:restriction>
            </xs:simpleType>
        </xs:attribute>
        <xs:attribute name = "aria-haspopup" use="optional" type="xs:boolean" default="false" />
        <xs:attribute name = "aria-invalid" use="optional" default="false">
            <xs:simpleType>
                <xs:restriction base="xs:string">
                    <xs:enumeration value="true" />
                    <xs:enumeration value="false" />
                    <xs:enumeration value="grammar" />
                    <xs:enumeration value="spelling" />
                </xs:restriction>
            </xs:simpleType>
        </xs:attribute>
        <xs:attribute name = "aria-multiline" use="optional" type="xs:boolean" default="false" />
        <xs:attribute name = "aria-multiselectable" use="optional" type="xs:boolean" default="false" />
        <xs:attribute name = "aria-posinset" use="optional" type="ARIALevelInteger.Type" />
        <xs:attribute name = "aria-pressed" use="optional" default="undefined">
            <xs:simpleType>
                <xs:restriction base="xs:string">
                    <xs:enumeration value="true" />
                    <xs:enumeration value="false" />
                    <xs:enumeration value="mixed" />
                    <xs:enumeration value="undefined" />
                </xs:restriction>
            </xs:simpleType>
        </xs:attribute>
        <xs:attribute name = "aria-readonly" use="optional" type="xs:boolean" default="false" />
        <xs:attribute name="aria-relevant" use="optional" default="additions text">
            <xs:simpleType>
                <xs:list itemType="RelevantList.Type" />
            </xs:simpleType>
        </xs:attribute>
        <xs:attribute name = "aria-required" use="optional" type="xs:boolean" default="false" />
        <xs:attribute name = "aria-selected" use="optional" default="undefined">
            <xs:simpleType>
                <xs:restriction base="xs:string">
                    <xs:enumeration value="true" />
                    <xs:enumeration value="false" />
                    <xs:enumeration value="undefined" />
                </xs:restriction>
            </xs:simpleType>
        </xs:attribute>
        <xs:attribute name = "aria-setsize" use="optional" type="xs:positiveInteger" />
        <xs:attribute name = "aria-sort" use="optional" default="none">
            <xs:simpleType>
                <xs:restriction base="xs:string">
                    <xs:enumeration value="ascending" />
                    <xs:enumeration value="descending" />
                    <xs:enumeration value="none" />
                    <xs:enumeration value="other" />
                </xs:restriction>
            </xs:simpleType>
        </xs:attribute>
        <xs:attribute name = "aria-valuemax" use="optional" type="xs:decimal" />
        <xs:attribute name = "aria-valuemin" use="optional" type="xs:decimal" />
        <xs:attribute name = "aria-valuenow" use="optional" type="xs:decimal" />
        <xs:attribute name = "aria-valuetext" use="optional" type="xs:string" />
        <!--  ************************* -->
    </xs:complexType>

    <xs:complexType name="BaseSequenceFull.Type" abstract="false" mixed="false">
        <xs:annotation>
            <xs:documentation source="documentation">
                The BaseSequenceFull class provides the base characteristics for some of the QTI interact-
                ions that support the full set of base characteristics.
            </xs:documentation>
        </xs:annotation>
        <xs:sequence>
        </xs:sequence>
        <xs:attributeGroup ref="id.BaseSequenceFull.Attr" />
        <xs:attributeGroup ref="class.BaseSequenceFull.Attr" />
        <xs:attributeGroup ref="language.BaseSequenceFull.Attr" />
        <xs:attributeGroup ref="label.BaseSequenceFull.Attr" />
        <xs:attributeGroup ref="response-identifier.BaseSequenceFull.Attr" />
        <xs:attributeGroup ref="base.BaseSequenceFull.Attr" />
        <xs:attributeGroup ref="dir.BaseSequenceFull.Attr" />
        <xs:attributeGroup ref="role.BaseSequenceFull.Attr" />
        <xs:attributeGroup ref="aria-controls.BaseSequenceFull.Attr" />
        <xs:attributeGroup ref="aria-describedby.BaseSequenceFull.Attr" />
        <xs:attributeGroup ref="aria-flowto.BaseSequenceFull.Attr" />
        <xs:attributeGroup ref="aria-label.BaseSequenceFull.Attr" />
        <xs:attributeGroup ref="aria-labelledby.BaseSequenceFull.Attr" />
        <xs:attributeGroup ref="aria-level.BaseSequenceFull.Attr" />
        <xs:attributeGroup ref="aria-live.BaseSequenceFull.Attr" />
        <xs:attributeGroup ref="aria-orientation.BaseSequenceFull.Attr" />
        <xs:attributeGroup ref="aria-owns.BaseSequenceFull.Attr" />
        <xs:attributeGroup ref="dataExtension.BaseSequenceFull.Attr" />
        <!--  NEW ADDITION (2016-11-28) -->
        <xs:attribute name = "data-catalog-idref" use="optional" type="xs:IDREF" />
        <!--  ************************* -->
        <!--  NEW ADDITION (2017-01-04) -->
        <xs:attribute name = "aria-hidden" use="optional" type="xs:boolean" default="false"/>
        <xs:attribute name = "data-qti-suppress-tts" use="optional">
            <xs:simpleType>
                <xs:restriction base="xs:string">
                    <xs:enumeration value="computer-read-aloud" />
                    <xs:enumeration value="screen-reader" />
                    <xs:enumeration value="all" />
                </xs:restriction>
            </xs:simpleType>
        </xs:attribute>
        <!--  ************************* -->
        <!--  NEW ADDITION (2017-01-06) -->
        <xs:attribute name = "aria-activedescendant" use="optional" type="xs:IDREF" />
        <xs:attribute name = "aria-atomic" use="optional" type="xs:boolean" default="false" />
        <xs:attribute name = "aria-autocomplete" use="optional" default="none">
            <xs:simpleType>
                <xs:restriction base="xs:string">
                    <xs:enumeration value="inline" />
                    <xs:enumeration value="list" />
                    <xs:enumeration value="both" />
                    <xs:enumeration value="none" />
                </xs:restriction>
            </xs:simpleType>
        </xs:attribute>
        <xs:attribute name = "aria-busy" use="optional" type="xs:boolean" default="false" />
        <xs:attribute name = "aria-checked" use="optional" default="undefined">
            <xs:simpleType>
                <xs:restriction base="xs:string">
                    <xs:enumeration value="true" />
                    <xs:enumeration value="false" />
                    <xs:enumeration value="mixed" />
                    <xs:enumeration value="undefined" />
                </xs:restriction>
            </xs:simpleType>
        </xs:attribute>
        <xs:attribute name = "aria-disabled" use="optional" type="xs:boolean" default="false" />
        <xs:attribute name="aria-dropeffect" use="optional" default="none">
            <xs:simpleType>
                <xs:list itemType="DropEffectList.Type" />
            </xs:simpleType>
        </xs:attribute>
        <xs:attribute name = "aria-expanded" use="optional" default="undefined">
            <xs:simpleType>
                <xs:restriction base="xs:string">
                    <xs:enumeration value="true" />
                    <xs:enumeration value="false" />
                    <xs:enumeration value="undefined" />
                </xs:restriction>
            </xs:simpleType>
        </xs:attribute>
        <xs:attribute name = "aria-grabbed" use="optional" default="undefined">
            <xs:simpleType>
                <xs:restriction base="xs:string">
                    <xs:enumeration value="true" />
                    <xs:enumeration value="false" />
                    <xs:enumeration value="undefined" />
                </xs:restriction>
            </xs:simpleType>
        </xs:attribute>
        <xs:attribute name = "aria-haspopup" use="optional" type="xs:boolean" default="false" />
        <xs:attribute name = "aria-invalid" use="optional" default="false">
            <xs:simpleType>
                <xs:restriction base="xs:string">
                    <xs:enumeration value="true" />
                    <xs:enumeration value="false" />
                    <xs:enumeration value="grammar" />
                    <xs:enumeration value="spelling" />
                </xs:restriction>
            </xs:simpleType>
        </xs:attribute>
        <xs:attribute name = "aria-multiline" use="optional" type="xs:boolean" default="false" />
        <xs:attribute name = "aria-multiselectable" use="optional" type="xs:boolean" default="false" />
        <xs:attribute name = "aria-posinset" use="optional" type="ARIALevelInteger.Type" />
        <xs:attribute name = "aria-pressed" use="optional" default="undefined">
            <xs:simpleType>
                <xs:restriction base="xs:string">
                    <xs:enumeration value="true" />
                    <xs:enumeration value="false" />
                    <xs:enumeration value="mixed" />
                    <xs:enumeration value="undefined" />
                </xs:restriction>
            </xs:simpleType>
        </xs:attribute>
        <xs:attribute name = "aria-readonly" use="optional" type="xs:boolean" default="false" />
        <xs:attribute name="aria-relevant" use="optional" default="additions text">
            <xs:simpleType>
                <xs:list itemType="RelevantList.Type" />
            </xs:simpleType>
        </xs:attribute>
        <xs:attribute name = "aria-required" use="optional" type="xs:boolean" default="false" />
        <xs:attribute name = "aria-selected" use="optional" default="undefined">
            <xs:simpleType>
                <xs:restriction base="xs:string">
                    <xs:enumeration value="true" />
                    <xs:enumeration value="false" />
                    <xs:enumeration value="undefined" />
                </xs:restriction>
            </xs:simpleType>
        </xs:attribute>
        <xs:attribute name = "aria-setsize" use="optional" type="xs:positiveInteger" />
        <xs:attribute name = "aria-sort" use="optional" default="none">
            <xs:simpleType>
                <xs:restriction base="xs:string">
                    <xs:enumeration value="ascending" />
                    <xs:enumeration value="descending" />
                    <xs:enumeration value="none" />
                    <xs:enumeration value="other" />
                </xs:restriction>
            </xs:simpleType>
        </xs:attribute>
        <xs:attribute name = "aria-valuemax" use="optional" type="xs:decimal" />
        <xs:attribute name = "aria-valuemin" use="optional" type="xs:decimal" />
        <xs:attribute name = "aria-valuenow" use="optional" type="xs:decimal" />
        <xs:attribute name = "aria-valuetext" use="optional" type="xs:string" />
        <!--  ************************* -->
    </xs:complexType>

    <xs:complexType name="BaseSequenceRIdent.Type" abstract="false" mixed="false">
        <xs:annotation>
            <xs:documentation source="documentation">
                The BaseSequenceRIdent class provides the base characteristics (as per the BaseSequence p-
                lus 'rident') for some of the QTI interactions.
            </xs:documentation>
        </xs:annotation>
        <xs:sequence>
        </xs:sequence>
        <xs:attributeGroup ref="id.BaseSequenceRIdent.Attr" />
        <xs:attributeGroup ref="class.BaseSequenceRIdent.Attr" />
        <xs:attributeGroup ref="language.BaseSequenceRIdent.Attr" />
        <xs:attributeGroup ref="label.BaseSequenceRIdent.Attr" />
        <xs:attributeGroup ref="response-identifier.BaseSequenceRIdent.Attr" />
        <xs:attributeGroup ref="dir.BaseSequenceRIdent.Attr" />
        <xs:attributeGroup ref="role.BaseSequenceRIdent.Attr" />
        <xs:attributeGroup ref="aria-controls.BaseSequenceRIdent.Attr" />
        <xs:attributeGroup ref="aria-describedby.BaseSequenceRIdent.Attr" />
        <xs:attributeGroup ref="aria-flowto.BaseSequenceRIdent.Attr" />
        <xs:attributeGroup ref="aria-label.BaseSequenceRIdent.Attr" />
        <xs:attributeGroup ref="aria-labelledby.BaseSequenceRIdent.Attr" />
        <xs:attributeGroup ref="aria-level.BaseSequenceRIdent.Attr" />
        <xs:attributeGroup ref="aria-live.BaseSequenceRIdent.Attr" />
        <xs:attributeGroup ref="aria-orientation.BaseSequenceRIdent.Attr" />
        <xs:attributeGroup ref="aria-owns.BaseSequenceRIdent.Attr" />
        <xs:attributeGroup ref="dataExtension.BaseSequenceRIdent.Attr" />
        <!--  NEW ADDITION (2016-11-28) -->
        <xs:attribute name = "data-catalog-idref" use="optional" type="xs:IDREF" />
        <!--  ************************* -->
        <!--  NEW ADDITION (2017-01-04) -->
        <xs:attribute name = "aria-hidden" use="optional" type="xs:boolean" default="false"/>
        <xs:attribute name = "data-qti-suppress-tts" use="optional">
            <xs:simpleType>
                <xs:restriction base="xs:string">
                    <xs:enumeration value="computer-read-aloud" />
                    <xs:enumeration value="screen-reader" />
                    <xs:enumeration value="all" />
                </xs:restriction>
            </xs:simpleType>
        </xs:attribute>
        <!--  ************************* -->
        <!--  NEW ADDITION (2017-01-06) -->
        <xs:attribute name = "aria-activedescendant" use="optional" type="xs:IDREF" />
        <xs:attribute name = "aria-atomic" use="optional" type="xs:boolean" default="false" />
        <xs:attribute name = "aria-autocomplete" use="optional" default="none">
            <xs:simpleType>
                <xs:restriction base="xs:string">
                    <xs:enumeration value="inline" />
                    <xs:enumeration value="list" />
                    <xs:enumeration value="both" />
                    <xs:enumeration value="none" />
                </xs:restriction>
            </xs:simpleType>
        </xs:attribute>
        <xs:attribute name = "aria-busy" use="optional" type="xs:boolean" default="false" />
        <xs:attribute name = "aria-checked" use="optional" default="undefined">
            <xs:simpleType>
                <xs:restriction base="xs:string">
                    <xs:enumeration value="true" />
                    <xs:enumeration value="false" />
                    <xs:enumeration value="mixed" />
                    <xs:enumeration value="undefined" />
                </xs:restriction>
            </xs:simpleType>
        </xs:attribute>
        <xs:attribute name = "aria-disabled" use="optional" type="xs:boolean" default="false" />
        <xs:attribute name="aria-dropeffect" use="optional" default="none">
            <xs:simpleType>
                <xs:list itemType="DropEffectList.Type" />
            </xs:simpleType>
        </xs:attribute>
        <xs:attribute name = "aria-expanded" use="optional" default="undefined">
            <xs:simpleType>
                <xs:restriction base="xs:string">
                    <xs:enumeration value="true" />
                    <xs:enumeration value="false" />
                    <xs:enumeration value="undefined" />
                </xs:restriction>
            </xs:simpleType>
        </xs:attribute>
        <xs:attribute name = "aria-grabbed" use="optional" default="undefined">
            <xs:simpleType>
                <xs:restriction base="xs:string">
                    <xs:enumeration value="true" />
                    <xs:enumeration value="false" />
                    <xs:enumeration value="undefined" />
                </xs:restriction>
            </xs:simpleType>
        </xs:attribute>
        <xs:attribute name = "aria-haspopup" use="optional" type="xs:boolean" default="false" />
        <xs:attribute name = "aria-invalid" use="optional" default="false">
            <xs:simpleType>
                <xs:restriction base="xs:string">
                    <xs:enumeration value="true" />
                    <xs:enumeration value="false" />
                    <xs:enumeration value="grammar" />
                    <xs:enumeration value="spelling" />
                </xs:restriction>
            </xs:simpleType>
        </xs:attribute>
        <xs:attribute name = "aria-multiline" use="optional" type="xs:boolean" default="false" />
        <xs:attribute name = "aria-multiselectable" use="optional" type="xs:boolean" default="false" />
        <xs:attribute name = "aria-posinset" use="optional" type="ARIALevelInteger.Type" />
        <xs:attribute name = "aria-pressed" use="optional" default="undefined">
            <xs:simpleType>
                <xs:restriction base="xs:string">
                    <xs:enumeration value="true" />
                    <xs:enumeration value="false" />
                    <xs:enumeration value="mixed" />
                    <xs:enumeration value="undefined" />
                </xs:restriction>
            </xs:simpleType>
        </xs:attribute>
        <xs:attribute name = "aria-readonly" use="optional" type="xs:boolean" default="false" />
        <xs:attribute name="aria-relevant" use="optional" default="additions text">
            <xs:simpleType>
                <xs:list itemType="RelevantList.Type" />
            </xs:simpleType>
        </xs:attribute>
        <xs:attribute name = "aria-required" use="optional" type="xs:boolean" default="false" />
        <xs:attribute name = "aria-selected" use="optional" default="undefined">
            <xs:simpleType>
                <xs:restriction base="xs:string">
                    <xs:enumeration value="true" />
                    <xs:enumeration value="false" />
                    <xs:enumeration value="undefined" />
                </xs:restriction>
            </xs:simpleType>
        </xs:attribute>
        <xs:attribute name = "aria-setsize" use="optional" type="xs:positiveInteger" />
        <xs:attribute name = "aria-sort" use="optional" default="none">
            <xs:simpleType>
                <xs:restriction base="xs:string">
                    <xs:enumeration value="ascending" />
                    <xs:enumeration value="descending" />
                    <xs:enumeration value="none" />
                    <xs:enumeration value="other" />
                </xs:restriction>
            </xs:simpleType>
        </xs:attribute>
        <xs:attribute name = "aria-valuemax" use="optional" type="xs:decimal" />
        <xs:attribute name = "aria-valuemin" use="optional" type="xs:decimal" />
        <xs:attribute name = "aria-valuenow" use="optional" type="xs:decimal" />
        <xs:attribute name = "aria-valuetext" use="optional" type="xs:string" />
        <!--  ************************* -->
    </xs:complexType>

    <xs:complexType name="BaseSequenceXBase.Type" abstract="false" mixed="false">
        <xs:annotation>
            <xs:documentation source="documentation">
                The BaseSequenceXBase class provides the base characteristics (as per the BaseSequence pl-
                us 'base') for some of the HTML tags and QTI interactions.
            </xs:documentation>
        </xs:annotation>
        <xs:sequence>
        </xs:sequence>
        <xs:attributeGroup ref="id.BaseSequenceXBase.Attr" />
        <xs:attributeGroup ref="class.BaseSequenceXBase.Attr" />
        <xs:attributeGroup ref="language.BaseSequenceXBase.Attr" />
        <xs:attributeGroup ref="label.BaseSequenceXBase.Attr" />
        <xs:attributeGroup ref="base.BaseSequenceXBase.Attr" />
        <xs:attributeGroup ref="dir.BaseSequenceXBase.Attr" />
        <xs:attributeGroup ref="role.BaseSequenceXBase.Attr" />
        <xs:attributeGroup ref="aria-controls.BaseSequenceXBase.Attr" />
        <xs:attributeGroup ref="aria-describedby.BaseSequenceXBase.Attr" />
        <xs:attributeGroup ref="aria-flowto.BaseSequenceXBase.Attr" />
        <xs:attributeGroup ref="aria-label.BaseSequenceXBase.Attr" />
        <xs:attributeGroup ref="aria-labelledby.BaseSequenceXBase.Attr" />
        <xs:attributeGroup ref="aria-level.BaseSequenceXBase.Attr" />
        <xs:attributeGroup ref="aria-live.BaseSequenceXBase.Attr" />
        <xs:attributeGroup ref="aria-orientation.BaseSequenceXBase.Attr" />
        <xs:attributeGroup ref="aria-owns.BaseSequenceXBase.Attr" />
        <xs:attributeGroup ref="dataExtension.BaseSequenceXBase.Attr" />
        <!--  NEW ADDITION (2016-11-28) -->
        <xs:attribute name = "data-catalog-idref" use="optional" type="xs:IDREF" />
        <!--  ************************* -->
        <!--  NEW ADDITION (2017-01-04) -->
        <xs:attribute name = "aria-hidden" use="optional" type="xs:boolean" default="false"/>
        <xs:attribute name = "data-qti-suppress-tts" use="optional">
            <xs:simpleType>
                <xs:restriction base="xs:string">
                    <xs:enumeration value="computer-read-aloud" />
                    <xs:enumeration value="screen-reader" />
                    <xs:enumeration value="all" />
                </xs:restriction>
            </xs:simpleType>
        </xs:attribute>
        <!--  ************************* -->
        <!--  NEW ADDITION (2017-01-06) -->
        <xs:attribute name = "aria-activedescendant" use="optional" type="xs:IDREF" />
        <xs:attribute name = "aria-atomic" use="optional" type="xs:boolean" default="false" />
        <xs:attribute name = "aria-autocomplete" use="optional" default="none">
            <xs:simpleType>
                <xs:restriction base="xs:string">
                    <xs:enumeration value="inline" />
                    <xs:enumeration value="list" />
                    <xs:enumeration value="both" />
                    <xs:enumeration value="none" />
                </xs:restriction>
            </xs:simpleType>
        </xs:attribute>
        <xs:attribute name = "aria-busy" use="optional" type="xs:boolean" default="false" />
        <xs:attribute name = "aria-checked" use="optional" default="undefined">
            <xs:simpleType>
                <xs:restriction base="xs:string">
                    <xs:enumeration value="true" />
                    <xs:enumeration value="false" />
                    <xs:enumeration value="mixed" />
                    <xs:enumeration value="undefined" />
                </xs:restriction>
            </xs:simpleType>
        </xs:attribute>
        <xs:attribute name = "aria-disabled" use="optional" type="xs:boolean" default="false" />
        <xs:attribute name="aria-dropeffect" use="optional" default="none">
            <xs:simpleType>
                <xs:list itemType="DropEffectList.Type" />
            </xs:simpleType>
        </xs:attribute>
        <xs:attribute name = "aria-expanded" use="optional" default="undefined">
            <xs:simpleType>
                <xs:restriction base="xs:string">
                    <xs:enumeration value="true" />
                    <xs:enumeration value="false" />
                    <xs:enumeration value="undefined" />
                </xs:restriction>
            </xs:simpleType>
        </xs:attribute>
        <xs:attribute name = "aria-grabbed" use="optional" default="undefined">
            <xs:simpleType>
                <xs:restriction base="xs:string">
                    <xs:enumeration value="true" />
                    <xs:enumeration value="false" />
                    <xs:enumeration value="undefined" />
                </xs:restriction>
            </xs:simpleType>
        </xs:attribute>
        <xs:attribute name = "aria-haspopup" use="optional" type="xs:boolean" default="false" />
        <xs:attribute name = "aria-invalid" use="optional" default="false">
            <xs:simpleType>
                <xs:restriction base="xs:string">
                    <xs:enumeration value="true" />
                    <xs:enumeration value="false" />
                    <xs:enumeration value="grammar" />
                    <xs:enumeration value="spelling" />
                </xs:restriction>
            </xs:simpleType>
        </xs:attribute>
        <xs:attribute name = "aria-multiline" use="optional" type="xs:boolean" default="false" />
        <xs:attribute name = "aria-multiselectable" use="optional" type="xs:boolean" default="false" />
        <xs:attribute name = "aria-posinset" use="optional" type="ARIALevelInteger.Type" />
        <xs:attribute name = "aria-pressed" use="optional" default="undefined">
            <xs:simpleType>
                <xs:restriction base="xs:string">
                    <xs:enumeration value="true" />
                    <xs:enumeration value="false" />
                    <xs:enumeration value="mixed" />
                    <xs:enumeration value="undefined" />
                </xs:restriction>
            </xs:simpleType>
        </xs:attribute>
        <xs:attribute name = "aria-readonly" use="optional" type="xs:boolean" default="false" />
        <xs:attribute name="aria-relevant" use="optional" default="additions text">
            <xs:simpleType>
                <xs:list itemType="RelevantList.Type" />
            </xs:simpleType>
        </xs:attribute>
        <xs:attribute name = "aria-required" use="optional" type="xs:boolean" default="false" />
        <xs:attribute name = "aria-selected" use="optional" default="undefined">
            <xs:simpleType>
                <xs:restriction base="xs:string">
                    <xs:enumeration value="true" />
                    <xs:enumeration value="false" />
                    <xs:enumeration value="undefined" />
                </xs:restriction>
            </xs:simpleType>
        </xs:attribute>
        <xs:attribute name = "aria-setsize" use="optional" type="xs:positiveInteger" />
        <xs:attribute name = "aria-sort" use="optional" default="none">
            <xs:simpleType>
                <xs:restriction base="xs:string">
                    <xs:enumeration value="ascending" />
                    <xs:enumeration value="descending" />
                    <xs:enumeration value="none" />
                    <xs:enumeration value="other" />
                </xs:restriction>
            </xs:simpleType>
        </xs:attribute>
        <xs:attribute name = "aria-valuemax" use="optional" type="xs:decimal" />
        <xs:attribute name = "aria-valuemin" use="optional" type="xs:decimal" />
        <xs:attribute name = "aria-valuenow" use="optional" type="xs:decimal" />
        <xs:attribute name = "aria-valuetext" use="optional" type="xs:string" />
        <!--  ************************* -->
    </xs:complexType>

    <xs:complexType name="BDO.Type" abstract="false" mixed="true">
        <xs:annotation>
            <xs:documentation source="documentation">
                This enables the HTML 'bdo' tag. The 'bdo' tag represents explicit text directionality fo-
                rmatting control for its children. It allows authors to override the Unicode bidirectional
                algorithm by explicitly specifying a direction override. Authors must specify the dir att-
                ribute on this tag, with the value ltr to specify a left-to-right override and with the v-
                alue rtl to specify a right-to-left override. The auto value must not be specified.
            </xs:documentation>
        </xs:annotation>
        <xs:complexContent>
            <xs:extension base="BaseSequence.Type">
                <xs:sequence>
                    <xs:choice minOccurs="0" maxOccurs="unbounded">
                        <xs:element ref="img" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="br" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="object" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="em" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="a" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="code" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="span" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="sub" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="acronym" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="big" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="tt" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="kbd" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="q" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="i" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="dfn" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="abbr" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="strong" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="sup" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="var" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="small" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="samp" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="b" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="cite" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="bdo" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="bdi" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="label" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="ruby" minOccurs="1" maxOccurs="1" />
                        <xs:choice minOccurs="1" maxOccurs="1">
                            <xs:element ref="ssml:p" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="ssml:s" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="ssml:say-as" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="ssml:phoneme" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="ssml:sub" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="ssml:voice" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="ssml:emphasis" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="ssml:break" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="ssml:prosody" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="ssml:mark" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="ssml:audio" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="ssml:speak" minOccurs="1" maxOccurs="1" />
                        </xs:choice>
                    </xs:choice>
                </xs:sequence>
                <xs:attributeGroup ref="title.BDO.Attr" />
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <xs:complexType name="BlockQuote.Type" abstract="false" mixed="false">
        <xs:annotation>
            <xs:documentation source="documentation">
                This defines the content of the 'blockquote' HTML tag. The 'blockquote' tag represents co-
                ntent that is quoted from another source, optionally with a citation which must be within
                a footer or cite element, and optionally with in-line changes such as annotations and abb-
                reviations. Content inside a blockquote other than citations and in-line changes must be
                quoted from another source, whose address, if it has one, may be cited in the cite attrib-
                ute. The content of a blockquote may be abbreviated, may have context added or may have a-
                nnotations. Any such additions or changes to quoted text must be indicated in the text (at
                the text level). This may mean the use of notational conventions or explicit remarks, such
                as "emphasis mine".
            </xs:documentation>
        </xs:annotation>
        <xs:complexContent>
            <xs:extension base="BaseSequenceXBase.Type">
                <xs:sequence>
                    <xs:choice minOccurs="0" maxOccurs="unbounded">
                        <xs:element ref="qti-position-object-stage" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="qti-custom-interaction" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="qti-drawing-interaction" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="qti-gap-match-interaction" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="qti-match-interaction" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="qti-graphic-gap-match-interaction" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="qti-hotspot-interaction" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="qti-graphic-order-interaction" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="qti-select-point-interaction" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="qti-graphic-associate-interaction" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="qti-slider-interaction" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="qti-choice-interaction" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="qti-media-interaction" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="qti-hottext-interaction" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="qti-order-interaction" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="qti-extended-text-interaction" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="qti-upload-interaction" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="qti-associate-interaction" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="qti-feedback-block" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="qti-template-block" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="qti-info-control" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="m3:math" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="xi:include" minOccurs="1" maxOccurs="1" />
                        <xs:choice minOccurs="1" maxOccurs="1">
                            <xs:element ref="pre" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="h1" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="h2" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="h3" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="h4" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="h5" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="h6" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="p" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="address" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="dl" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="ol" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="ul" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="hr" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="blockquote" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="table" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="div" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="article" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="aside" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="audio" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="figure" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="footer" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="header" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="nav" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="section" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="video" minOccurs="1" maxOccurs="1" />
                        </xs:choice>
                    </xs:choice>
                </xs:sequence>
                <xs:attributeGroup ref="cite.BlockQuote.Attr" />
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <xs:complexType name="BR.Type" abstract="false" mixed="false">
        <xs:annotation>
            <xs:documentation source="documentation">
                This provides the functionality of the HTML 'br' tag. The 'br' tag represents a line brea-
                k.This tag has no children.
            </xs:documentation>
        </xs:annotation>
        <xs:complexContent>
            <xs:extension base="BaseSequenceXBaseEmpty.Type" />
        </xs:complexContent>
    </xs:complexType>

    <xs:complexType name="BranchRule.Type" abstract="false" mixed="false">
        <xs:annotation>
            <xs:documentation source="documentation">
                A branch-rule is a simple expression attached to an assessmentItemRef, assessmentSection
                or testPart that is evaluated after the item, section or part has been presented to the c-
                andidate. If the expression evaluates to 'true' the test jumps forward to the item, secti-
                on or part referred to by the target identifier. In the case of an item or section, the t-
                arget must refer to an item or section in the same testPart that has not yet been present-
                ed. For testParts, the target must refer to another testPart.
            </xs:documentation>
        </xs:annotation>
        <xs:sequence>
            <xs:choice minOccurs="1" maxOccurs="1">
                <xs:element ref="and" minOccurs="1" maxOccurs="1" />
                <xs:element ref="gt" minOccurs="1" maxOccurs="1" />
                <xs:element ref="not" minOccurs="1" maxOccurs="1" />
                <xs:element ref="lt" minOccurs="1" maxOccurs="1" />
                <xs:element ref="gte" minOccurs="1" maxOccurs="1" />
                <xs:element ref="lte" minOccurs="1" maxOccurs="1" />
                <xs:element ref="or" minOccurs="1" maxOccurs="1" />
                <xs:element ref="sum" minOccurs="1" maxOccurs="1" />
                <xs:element ref="durationLT" minOccurs="1" maxOccurs="1" />
                <xs:element ref="durationGTE" minOccurs="1" maxOccurs="1" />
                <xs:element ref="subtract" minOccurs="1" maxOccurs="1" />
                <xs:element ref="divide" minOccurs="1" maxOccurs="1" />
                <xs:element ref="multiple" minOccurs="1" maxOccurs="1" />
                <xs:element ref="ordered" minOccurs="1" maxOccurs="1" />
                <xs:element ref="customOperator" minOccurs="1" maxOccurs="1" />
                <xs:element ref="random" minOccurs="1" maxOccurs="1" />
                <xs:element ref="numberIncorrect" minOccurs="1" maxOccurs="1" />
                <xs:element ref="numberCorrect" minOccurs="1" maxOccurs="1" />
                <xs:element ref="numberPresented" minOccurs="1" maxOccurs="1" />
                <xs:element ref="numberResponded" minOccurs="1" maxOccurs="1" />
                <xs:element ref="numberSelected" minOccurs="1" maxOccurs="1" />
                <xs:element ref="substring" minOccurs="1" maxOccurs="1" />
                <xs:element ref="equalRounded" minOccurs="1" maxOccurs="1" />
                <xs:element ref="null" minOccurs="1" maxOccurs="1" />
                <xs:element ref="delete" minOccurs="1" maxOccurs="1" />
                <xs:element ref="match" minOccurs="1" maxOccurs="1" />
                <xs:element ref="index" minOccurs="1" maxOccurs="1" />
                <xs:element ref="power" minOccurs="1" maxOccurs="1" />
                <xs:element ref="equal" minOccurs="1" maxOccurs="1" />
                <xs:element ref="contains" minOccurs="1" maxOccurs="1" />
                <xs:element ref="containerSize" minOccurs="1" maxOccurs="1" />
                <xs:element ref="correct" minOccurs="1" maxOccurs="1" />
                <xs:element ref="default" minOccurs="1" maxOccurs="1" />
                <xs:element ref="anyN" minOccurs="1" maxOccurs="1" />
                <xs:element ref="integerDivide" minOccurs="1" maxOccurs="1" />
                <xs:element ref="integerModulus" minOccurs="1" maxOccurs="1" />
                <xs:element ref="isNull" minOccurs="1" maxOccurs="1" />
                <xs:element ref="member" minOccurs="1" maxOccurs="1" />
                <xs:element ref="product" minOccurs="1" maxOccurs="1" />
                <xs:element ref="round" minOccurs="1" maxOccurs="1" />
                <xs:element ref="truncate" minOccurs="1" maxOccurs="1" />
                <xs:element ref="fieldValue" minOccurs="1" maxOccurs="1" />
                <xs:element ref="randomInteger" minOccurs="1" maxOccurs="1" />
                <xs:element ref="randomFloat" minOccurs="1" maxOccurs="1" />
                <xs:element ref="variable" minOccurs="1" maxOccurs="1" />
                <xs:element ref="outcomeMinimum" minOccurs="1" maxOccurs="1" />
                <xs:element ref="outcomeMaximum" minOccurs="1" maxOccurs="1" />
                <xs:element ref="testVariables" minOccurs="1" maxOccurs="1" />
                <xs:element ref="integerToFloat" minOccurs="1" maxOccurs="1" />
                <xs:element ref="inside" minOccurs="1" maxOccurs="1" />
                <xs:element ref="baseValue" minOccurs="1" maxOccurs="1" />
                <xs:element ref="patternMatch" minOccurs="1" maxOccurs="1" />
                <xs:element ref="mapResponsePoint" minOccurs="1" maxOccurs="1" />
                <xs:element ref="mapResponse" minOccurs="1" maxOccurs="1" />
                <xs:element ref="stringMatch" minOccurs="1" maxOccurs="1" />
                <xs:element ref="repeat" minOccurs="1" maxOccurs="1" />
                <xs:element ref="roundTo" minOccurs="1" maxOccurs="1" />
                <xs:element ref="lcm" minOccurs="1" maxOccurs="1" />
                <xs:element ref="gcd" minOccurs="1" maxOccurs="1" />
                <xs:element ref="min" minOccurs="1" maxOccurs="1" />
                <xs:element ref="max" minOccurs="1" maxOccurs="1" />
                <xs:element ref="mathConstant" minOccurs="1" maxOccurs="1" />
                <xs:element ref="statsOperator" minOccurs="1" maxOccurs="1" />
                <xs:element ref="mathOperator" minOccurs="1" maxOccurs="1" />
            </xs:choice>
        </xs:sequence>
        <xs:attributeGroup ref="target.BranchRule.Attr" />
    </xs:complexType>

    <xs:complexType name="Caption.Type" abstract="false" mixed="true">
        <xs:annotation>
            <xs:documentation source="documentation">
                Provides the HTML 'caption' tag functionality. The 'caption' tag represents the title of
                the table that is its parent, if it has a parent and that is a 'table' tag. The caption t-
                ag takes part in the table model. When a table tag is the only content in a figure tag ot-
                her than the figcaption, the caption tag should be omitted in favor of the figcaption. A
                caption can introduce context for a table, making it significantly easier to understand.
            </xs:documentation>
        </xs:annotation>
        <xs:complexContent>
            <xs:extension base="BaseSequence.Type">
                <xs:sequence>
                    <xs:choice minOccurs="0" maxOccurs="unbounded">
                        <xs:element ref="qti-text-entry-interaction" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="qti-hottext" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="qti-printed-variable" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="qti-gap" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="qti-feedback-inline" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="qti-template-inline" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="qti-inline-choice-interaction" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="qti-end-attempt-interaction" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="qti-custom-interaction" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="m3:math" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="xi:include" minOccurs="1" maxOccurs="1" />
                        <xs:choice minOccurs="1" maxOccurs="1">
                            <xs:element ref="img" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="br" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="object" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="em" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="a" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="code" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="span" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="sub" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="acronym" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="big" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="tt" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="kbd" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="q" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="i" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="dfn" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="abbr" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="strong" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="sup" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="var" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="small" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="samp" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="b" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="cite" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="bdo" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="bdi" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="label" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="ruby" minOccurs="1" maxOccurs="1" />
                            <xs:choice minOccurs="1" maxOccurs="1">
                                <xs:element ref="ssml:p" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="ssml:s" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="ssml:say-as" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="ssml:phoneme" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="ssml:sub" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="ssml:voice" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="ssml:emphasis" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="ssml:break" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="ssml:prosody" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="ssml:mark" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="ssml:audio" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="ssml:speak" minOccurs="1" maxOccurs="1" />
                            </xs:choice>
                        </xs:choice>
                    </xs:choice>
                </xs:sequence>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <xs:complexType name="ChoiceInteraction.Type" abstract="false" mixed="false">
        <xs:annotation>
            <xs:documentation source="documentation">
                The choice interaction presents a set of choices to the candidate. The candidate's task is
                to select one or more of the choices, up to a maximum of maxChoices. The interaction is a-
                lways initialized with no choices selected. The choiceInteraction must be bound to a resp-
                onse variable with a baseType of identifier and single or multiple cardinality.
            </xs:documentation>
        </xs:annotation>
        <xs:complexContent>
            <xs:extension base="BasePromptInteraction.Type">
                <xs:sequence>
                    <xs:element ref="qti-simple-choice" minOccurs="1" maxOccurs="unbounded" />
                </xs:sequence>
                <xs:attributeGroup ref="shuffle.ChoiceInteraction.Attr" />
                <xs:attributeGroup ref="max-choices.ChoiceInteraction.Attr" />
                <xs:attributeGroup ref="min-choices.ChoiceInteraction.Attr" />
                <xs:attributeGroup ref="orientation.ChoiceInteraction.Attr" />
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <xs:complexType name="Col.Type" abstract="false" mixed="false">
        <xs:annotation>
            <xs:documentation source="documentation">
                Provides the functionality of the HTML 'col' tag. If a 'col' tag has a parent and that is
                a colgroup tag that itself has a parent that is a table tag, then the col tag represents
                one or more columns in the column group represented by that colgroup. The tag may have a
                span content attribute specified, whose value must be a valid non-negative integer greater
                than zero. The col tag and its span attribute take part in the table model.
            </xs:documentation>
        </xs:annotation>
        <xs:complexContent>
            <xs:extension base="BaseSequenceXBaseEmpty.Type">
                <xs:attributeGroup ref="span.Col.Attr" />
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <xs:complexType name="ColGroup.Type" abstract="false" mixed="false">
        <xs:annotation>
            <xs:documentation source="documentation">
                Provides the functionality of the HTML 'colgroup' tag. The colgroup element represents a
                group of one or more columns in the table that is its parent, if it has a parent and that
                is a table element. If the colgroup element contains no col elements, then the element may
                have a span content attribute specified, whose value must be a valid non-negative integer
                greater than zero. The colgroup element and its span attribute take part in the table mod-
                el.
            </xs:documentation>
        </xs:annotation>
        <xs:complexContent>
            <xs:extension base="BaseSequence.Type">
                <xs:sequence>
                    <xs:element ref="col" minOccurs="1" maxOccurs="unbounded" />
                </xs:sequence>
                <xs:attributeGroup ref="span.ColGroup.Attr" />
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <xs:complexType name="CorrectResponse.Type" abstract="false" mixed="false">
        <xs:annotation>
            <xs:documentation source="documentation">
                This class is used to define, as part of the response declaration, the values(s) for the
                correct response.
            </xs:documentation>
        </xs:annotation>
        <xs:sequence>
            <xs:element ref="value" minOccurs="1" maxOccurs="unbounded" />
        </xs:sequence>
        <xs:attributeGroup ref="interpretation.CorrectResponse.Attr" />
    </xs:complexType>

    <xs:complexType name="CustomInteraction.Type" abstract="false" mixed="false">
        <xs:annotation>
            <xs:documentation source="documentation">
                The custom interaction provides an opportunity for extensibility of this specification to
                include support for interactions not currently documented. The Portable Custom Interaction
                specification should be used in conjunction with this class [PCI, 14].
            </xs:documentation>
        </xs:annotation>
        <xs:complexContent>
            <xs:extension base="BaseSequenceFull.Type">
                <xs:sequence>
                    <xs:group ref="grpAnyLax.any" />
                </xs:sequence>
                <xs:attributeGroup ref="extension.CustomInteraction.Attr" />
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <xs:complexType name="CustomOperator.Type" abstract="false" mixed="false">
        <xs:annotation>
            <xs:documentation source="documentation">
                The custom operator provides an extension mechanism for defining operations not currently
                supported by this specification. It has been suggested that customOperator might be used
                to help link processing rules defined by this specification to instances of web-service b-
                ased processing engines. For example, a web-service which offered automated marking of fr-
                ee text responses. Implementors experimenting with this approach are encouraged to share
                information about their solutions to help determine the best way to achieve this type of
                processing.
            </xs:documentation>
        </xs:annotation>
        <xs:sequence>
            <xs:choice minOccurs="0" maxOccurs="unbounded">
                <xs:element ref="and" minOccurs="1" maxOccurs="1" />
                <xs:element ref="gt" minOccurs="1" maxOccurs="1" />
                <xs:element ref="not" minOccurs="1" maxOccurs="1" />
                <xs:element ref="lt" minOccurs="1" maxOccurs="1" />
                <xs:element ref="gte" minOccurs="1" maxOccurs="1" />
                <xs:element ref="lte" minOccurs="1" maxOccurs="1" />
                <xs:element ref="or" minOccurs="1" maxOccurs="1" />
                <xs:element ref="sum" minOccurs="1" maxOccurs="1" />
                <xs:element ref="durationLT" minOccurs="1" maxOccurs="1" />
                <xs:element ref="durationGTE" minOccurs="1" maxOccurs="1" />
                <xs:element ref="subtract" minOccurs="1" maxOccurs="1" />
                <xs:element ref="divide" minOccurs="1" maxOccurs="1" />
                <xs:element ref="multiple" minOccurs="1" maxOccurs="1" />
                <xs:element ref="ordered" minOccurs="1" maxOccurs="1" />
                <xs:element ref="customOperator" minOccurs="1" maxOccurs="1" />
                <xs:element ref="random" minOccurs="1" maxOccurs="1" />
                <xs:element ref="numberIncorrect" minOccurs="1" maxOccurs="1" />
                <xs:element ref="numberCorrect" minOccurs="1" maxOccurs="1" />
                <xs:element ref="numberPresented" minOccurs="1" maxOccurs="1" />
                <xs:element ref="numberResponded" minOccurs="1" maxOccurs="1" />
                <xs:element ref="numberSelected" minOccurs="1" maxOccurs="1" />
                <xs:element ref="substring" minOccurs="1" maxOccurs="1" />
                <xs:element ref="equalRounded" minOccurs="1" maxOccurs="1" />
                <xs:element ref="null" minOccurs="1" maxOccurs="1" />
                <xs:element ref="delete" minOccurs="1" maxOccurs="1" />
                <xs:element ref="match" minOccurs="1" maxOccurs="1" />
                <xs:element ref="index" minOccurs="1" maxOccurs="1" />
                <xs:element ref="power" minOccurs="1" maxOccurs="1" />
                <xs:element ref="equal" minOccurs="1" maxOccurs="1" />
                <xs:element ref="contains" minOccurs="1" maxOccurs="1" />
                <xs:element ref="containerSize" minOccurs="1" maxOccurs="1" />
                <xs:element ref="correct" minOccurs="1" maxOccurs="1" />
                <xs:element ref="default" minOccurs="1" maxOccurs="1" />
                <xs:element ref="anyN" minOccurs="1" maxOccurs="1" />
                <xs:element ref="integerDivide" minOccurs="1" maxOccurs="1" />
                <xs:element ref="integerModulus" minOccurs="1" maxOccurs="1" />
                <xs:element ref="isNull" minOccurs="1" maxOccurs="1" />
                <xs:element ref="member" minOccurs="1" maxOccurs="1" />
                <xs:element ref="product" minOccurs="1" maxOccurs="1" />
                <xs:element ref="round" minOccurs="1" maxOccurs="1" />
                <xs:element ref="truncate" minOccurs="1" maxOccurs="1" />
                <xs:element ref="fieldValue" minOccurs="1" maxOccurs="1" />
                <xs:element ref="randomInteger" minOccurs="1" maxOccurs="1" />
                <xs:element ref="randomFloat" minOccurs="1" maxOccurs="1" />
                <xs:element ref="variable" minOccurs="1" maxOccurs="1" />
                <xs:element ref="outcomeMinimum" minOccurs="1" maxOccurs="1" />
                <xs:element ref="outcomeMaximum" minOccurs="1" maxOccurs="1" />
                <xs:element ref="testVariables" minOccurs="1" maxOccurs="1" />
                <xs:element ref="integerToFloat" minOccurs="1" maxOccurs="1" />
                <xs:element ref="inside" minOccurs="1" maxOccurs="1" />
                <xs:element ref="baseValue" minOccurs="1" maxOccurs="1" />
                <xs:element ref="patternMatch" minOccurs="1" maxOccurs="1" />
                <xs:element ref="mapResponsePoint" minOccurs="1" maxOccurs="1" />
                <xs:element ref="mapResponse" minOccurs="1" maxOccurs="1" />
                <xs:element ref="stringMatch" minOccurs="1" maxOccurs="1" />
                <xs:element ref="repeat" minOccurs="1" maxOccurs="1" />
                <xs:element ref="roundTo" minOccurs="1" maxOccurs="1" />
                <xs:element ref="lcm" minOccurs="1" maxOccurs="1" />
                <xs:element ref="gcd" minOccurs="1" maxOccurs="1" />
                <xs:element ref="min" minOccurs="1" maxOccurs="1" />
                <xs:element ref="max" minOccurs="1" maxOccurs="1" />
                <xs:element ref="mathConstant" minOccurs="1" maxOccurs="1" />
                <xs:element ref="statsOperator" minOccurs="1" maxOccurs="1" />
                <xs:element ref="mathOperator" minOccurs="1" maxOccurs="1" />
            </xs:choice>
            <xs:group ref="grpLax.any" />
        </xs:sequence>
        <xs:attributeGroup ref="class.CustomOperator.Attr" />
        <xs:attributeGroup ref="definition.CustomOperator.Attr" />
        <xs:attributeGroup ref="extension.CustomOperator.Attr" />
    </xs:complexType>

    <xs:complexType name="DD.Type" abstract="false" mixed="true">
        <xs:annotation>
            <xs:documentation source="documentation">
                The 'dd' tag is a part of the HTML content. The 'dd' tag represents the description, defi-
                nition, or value, part of a term-description group in a description list ('dl' tag).
            </xs:documentation>
        </xs:annotation>
        <xs:complexContent>
            <xs:extension base="BaseSequenceXBase.Type">
                <xs:sequence>
                    <xs:choice minOccurs="0" maxOccurs="unbounded">
                        <xs:element ref="qti-printed-variable" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="qti-feedback-block" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="qti-hottext" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="qti-feedback-inline" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="qti-template-inline" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="qti-template-block" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="m3:math" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="xi:include" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="qti-text-entry-interaction" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="qti-inline-choice-interaction" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="qti-end-attempt-interaction" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="qti-custom-interaction" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="responseDeclaration" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="qti-gap-match-interaction" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="qti-match-interaction" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="qti-graphic-gap-match-interaction" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="qti-hotspot-interaction" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="qti-graphic-order-interaction" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="qti-select-point-interaction" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="qti-graphic-associate-interaction" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="qti-slider-interaction" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="qti-choice-interaction" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="qti-media-interaction" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="qti-hottext-interaction" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="qti-order-interaction" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="qti-extended-text-interaction" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="qti-upload-interaction" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="qti-associate-interaction" minOccurs="1" maxOccurs="1" />
                        <xs:choice minOccurs="1" maxOccurs="1">
                            <xs:element ref="pre" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="h1" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="h2" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="h3" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="h4" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="h5" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="h6" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="p" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="address" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="dl" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="ol" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="ul" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="br" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="hr" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="img" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="object" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="blockquote" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="em" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="a" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="code" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="span" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="sub" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="acronym" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="big" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="tt" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="kbd" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="q" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="i" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="dfn" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="abbr" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="strong" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="sup" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="var" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="small" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="samp" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="b" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="cite" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="table" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="div" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="bdo" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="bdi" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="figure" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="audio" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="video" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="article" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="aside" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="footer" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="header" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="label" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="nav" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="section" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="ruby" minOccurs="1" maxOccurs="1" />
                            <xs:choice minOccurs="1" maxOccurs="1">
                                <xs:element ref="ssml:p" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="ssml:s" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="ssml:say-as" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="ssml:phoneme" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="ssml:sub" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="ssml:voice" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="ssml:emphasis" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="ssml:break" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="ssml:prosody" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="ssml:mark" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="ssml:audio" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="ssml:speak" minOccurs="1" maxOccurs="1" />
                            </xs:choice>
                        </xs:choice>
                    </xs:choice>
                </xs:sequence>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <xs:complexType name="DefaultValue.Type" abstract="false" mixed="false">
        <xs:annotation>
            <xs:documentation source="documentation">
                Defines the default value of the associated response, outcome and template variable.
            </xs:documentation>
        </xs:annotation>
        <xs:sequence>
            <xs:element ref="value" minOccurs="1" maxOccurs="unbounded" />
        </xs:sequence>
        <xs:attributeGroup ref="interpretation.DefaultValue.Attr" />
    </xs:complexType>

    <xs:complexType name="Div.Type" abstract="false" mixed="true">
        <xs:annotation>
            <xs:documentation source="documentation">
                This provides the functionality of the HTML 'div' tag. The div tag has no special meaning
                at all. It represents its children. It can be used with the class, lang, and title charac-
                teristics to mark up semantics common to a group of consecutive elements. Authors are str-
                ongly encouraged to view the div tag as an element of last resort, for when no other elem-
                ent is suitable. Use of more appropriate elements instead of the div element leads to bet-
                ter accessibility for readers and easier maintainability for authors.
            </xs:documentation>
        </xs:annotation>
        <xs:complexContent>
            <xs:extension base="BaseSequenceXBase.Type">
                <xs:sequence>
                    <xs:choice minOccurs="0" maxOccurs="unbounded">
                        <xs:element ref="qti-position-object-stage" minOccurs="1" maxOccurs="1" />
                        <xs:choice minOccurs="1" maxOccurs="1">
                            <xs:element ref="qti-printed-variable" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="qti-feedback-block" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="qti-hottext" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="qti-feedback-inline" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="qti-template-inline" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="qti-template-block" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="m3:math" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="xi:include" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="qti-text-entry-interaction" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="qti-inline-choice-interaction" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="qti-end-attempt-interaction" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="qti-custom-interaction" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="qti-drawing-interaction" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="qti-gap-match-interaction" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="qti-match-interaction" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="qti-graphic-gap-match-interaction" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="qti-hotspot-interaction" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="qti-graphic-order-interaction" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="qti-select-point-interaction" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="qti-graphic-associate-interaction" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="qti-slider-interaction" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="qti-choice-interaction" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="qti-media-interaction" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="qti-hottext-interaction" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="qti-order-interaction" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="qti-extended-text-interaction" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="qti-upload-interaction" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="qti-associate-interaction" minOccurs="1" maxOccurs="1" />
                            <xs:choice minOccurs="1" maxOccurs="1">
                                <xs:element ref="pre" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="h1" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="h2" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="h3" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="h4" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="h5" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="h6" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="p" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="address" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="dl" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="ol" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="ul" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="br" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="hr" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="img" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="object" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="blockquote" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="em" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="a" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="code" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="span" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="sub" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="acronym" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="big" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="tt" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="kbd" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="q" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="i" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="dfn" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="abbr" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="strong" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="sup" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="var" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="small" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="samp" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="b" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="cite" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="table" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="div" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="bdo" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="bdi" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="figure" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="audio" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="video" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="article" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="aside" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="footer" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="header" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="label" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="nav" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="section" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="ruby" minOccurs="1" maxOccurs="1" />
                                <xs:choice minOccurs="1" maxOccurs="1">
                                    <xs:element ref="ssml:p" minOccurs="1" maxOccurs="1" />
                                    <xs:element ref="ssml:s" minOccurs="1" maxOccurs="1" />
                                    <xs:element ref="ssml:say-as" minOccurs="1" maxOccurs="1" />
                                    <xs:element ref="ssml:phoneme" minOccurs="1" maxOccurs="1" />
                                    <xs:element ref="ssml:sub" minOccurs="1" maxOccurs="1" />
                                    <xs:element ref="ssml:voice" minOccurs="1" maxOccurs="1" />
                                    <xs:element ref="ssml:emphasis" minOccurs="1" maxOccurs="1" />
                                    <xs:element ref="ssml:break" minOccurs="1" maxOccurs="1" />
                                    <xs:element ref="ssml:prosody" minOccurs="1" maxOccurs="1" />
                                    <xs:element ref="ssml:mark" minOccurs="1" maxOccurs="1" />
                                    <xs:element ref="ssml:audio" minOccurs="1" maxOccurs="1" />
                                    <xs:element ref="ssml:speak" minOccurs="1" maxOccurs="1" />
                                </xs:choice>
                            </xs:choice>
                        </xs:choice>
                    </xs:choice>
                </xs:sequence>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <xs:complexType name="DL.Type" abstract="false" mixed="false">
        <xs:annotation>
            <xs:documentation source="documentation">
                Denotes the 'dl' HTML tag. The 'dl' tag represents an association list consisting of zero
                or more name-value groups (a description list). A name-value group consists of one or more
                names ('dt' tags) followed by one or more values ('dd' tags), ignoring any nodes other th-
                an 'dt' and 'dd' tags. Within a single 'dl' tag, there should not be more than one 'dt' t-
                ag for each name.
            </xs:documentation>
        </xs:annotation>
        <xs:complexContent>
            <xs:extension base="BaseSequenceXBase.Type">
                <xs:sequence>
                    <xs:choice minOccurs="0" maxOccurs="unbounded">
                        <xs:element ref="dd" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="dt" minOccurs="1" maxOccurs="1" />
                    </xs:choice>
                </xs:sequence>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <xs:complexType name="DrawingInteraction.Type" abstract="false" mixed="false">
        <xs:annotation>
            <xs:documentation source="documentation">
                The drawing interaction allows the candidate to use a common set of drawing tools to modi-
                fy a given graphical image (the canvas). It must be bound to a response variable with bas-
                e-type file and single cardinality. The result is a file in the same format as the origin-
                al image.
            </xs:documentation>
        </xs:annotation>
        <xs:complexContent>
            <xs:extension base="BasePromptInteraction.Type">
                <xs:sequence>
                    <xs:element ref="object" minOccurs="1" maxOccurs="1" />
                </xs:sequence>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <xs:complexType name="DT.Type" abstract="false" mixed="true">
        <xs:annotation>
            <xs:documentation source="documentation">
                The 'dt' tag is a part of the HTML content. The 'dt' tag represents the term, or name, pa-
                rt of a term-description group in a description list (dl element).
            </xs:documentation>
        </xs:annotation>
        <xs:complexContent>
            <xs:extension base="BaseSequenceXBase.Type">
                <xs:sequence>
                    <xs:choice minOccurs="0" maxOccurs="unbounded">
                        <xs:element ref="qti-text-entry-interaction" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="qti-hottext" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="qti-printed-variable" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="qti-gap" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="qti-feedback-inline" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="qti-template-inline" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="qti-inline-choice-interaction" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="qti-end-attempt-interaction" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="qti-custom-interaction" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="m3:math" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="xi:include" minOccurs="1" maxOccurs="1" />
                        <xs:choice minOccurs="1" maxOccurs="1">
                            <xs:element ref="img" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="br" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="object" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="em" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="a" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="code" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="span" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="sub" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="acronym" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="big" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="tt" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="kbd" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="q" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="i" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="dfn" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="abbr" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="strong" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="sup" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="var" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="small" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="samp" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="b" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="cite" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="bdo" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="bdi" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="label" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="ruby" minOccurs="1" maxOccurs="1" />
                            <xs:choice minOccurs="1" maxOccurs="1">
                                <xs:element ref="ssml:p" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="ssml:s" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="ssml:say-as" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="ssml:phoneme" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="ssml:sub" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="ssml:voice" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="ssml:emphasis" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="ssml:break" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="ssml:prosody" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="ssml:mark" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="ssml:audio" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="ssml:speak" minOccurs="1" maxOccurs="1" />
                            </xs:choice>
                        </xs:choice>
                    </xs:choice>
                </xs:sequence>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <xs:complexType name="EndAttemptInteraction.Type" abstract="false" mixed="false">
        <xs:annotation>
            <xs:documentation source="documentation">
                The end attempt interaction is a special type of interaction which allows item authors to
                provide the candidate with control over the way in which the candidate terminates an atte-
                mpt. The candidate can use the interaction to terminate the attempt (triggering response
                processing) immediately, typically to request a hint. It must be bound to a response vari-
                able with base-type boolean and single cardinality. If the candidate invokes response pro-
                cessing using an endAttemptInteraction then the associated response variable is set to 't-
                rue'. If response processing is invoked in any other way, either through a different endA-
                ttemptInteraction or through the default method for the delivery engine, then the associa-
                ted response variable is set to 'false'. The default value of the response variable is al-
                ways ignored.
            </xs:documentation>
        </xs:annotation>
        <xs:complexContent>
            <xs:extension base="BaseSequenceXBaseEmpty.Type">
                <xs:attributeGroup ref="response-identifier.EndAttemptInteraction.Attr" />
                <xs:attributeGroup ref="title.EndAttemptInteraction.Attr" />
                <xs:attributeGroup ref="count-attempt.EndAttemptInteraction.Attr" />
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <xs:complexType name="Equal.Type" abstract="false" mixed="false">
        <xs:annotation>
            <xs:documentation source="documentation">
                The equal operator takes two sub-expressions which must both have single cardinality and
                have a numerical base-type. The result is a single boolean with a value of 'true' if the
                two expressions are numerically equal and 'false' if they are not. If either sub-expressi-
                on is NULL then the operator results in NULL.
            </xs:documentation>
        </xs:annotation>
        <xs:sequence>
            <xs:choice minOccurs="2" maxOccurs="2">
                <xs:element ref="and" minOccurs="1" maxOccurs="1" />
                <xs:element ref="gt" minOccurs="1" maxOccurs="1" />
                <xs:element ref="not" minOccurs="1" maxOccurs="1" />
                <xs:element ref="lt" minOccurs="1" maxOccurs="1" />
                <xs:element ref="gte" minOccurs="1" maxOccurs="1" />
                <xs:element ref="lte" minOccurs="1" maxOccurs="1" />
                <xs:element ref="or" minOccurs="1" maxOccurs="1" />
                <xs:element ref="sum" minOccurs="1" maxOccurs="1" />
                <xs:element ref="durationLT" minOccurs="1" maxOccurs="1" />
                <xs:element ref="durationGTE" minOccurs="1" maxOccurs="1" />
                <xs:element ref="subtract" minOccurs="1" maxOccurs="1" />
                <xs:element ref="divide" minOccurs="1" maxOccurs="1" />
                <xs:element ref="multiple" minOccurs="1" maxOccurs="1" />
                <xs:element ref="ordered" minOccurs="1" maxOccurs="1" />
                <xs:element ref="customOperator" minOccurs="1" maxOccurs="1" />
                <xs:element ref="random" minOccurs="1" maxOccurs="1" />
                <xs:element ref="numberIncorrect" minOccurs="1" maxOccurs="1" />
                <xs:element ref="numberCorrect" minOccurs="1" maxOccurs="1" />
                <xs:element ref="numberPresented" minOccurs="1" maxOccurs="1" />
                <xs:element ref="numberResponded" minOccurs="1" maxOccurs="1" />
                <xs:element ref="numberSelected" minOccurs="1" maxOccurs="1" />
                <xs:element ref="substring" minOccurs="1" maxOccurs="1" />
                <xs:element ref="equalRounded" minOccurs="1" maxOccurs="1" />
                <xs:element ref="null" minOccurs="1" maxOccurs="1" />
                <xs:element ref="delete" minOccurs="1" maxOccurs="1" />
                <xs:element ref="match" minOccurs="1" maxOccurs="1" />
                <xs:element ref="index" minOccurs="1" maxOccurs="1" />
                <xs:element ref="power" minOccurs="1" maxOccurs="1" />
                <xs:element ref="equal" minOccurs="1" maxOccurs="1" />
                <xs:element ref="contains" minOccurs="1" maxOccurs="1" />
                <xs:element ref="containerSize" minOccurs="1" maxOccurs="1" />
                <xs:element ref="correct" minOccurs="1" maxOccurs="1" />
                <xs:element ref="default" minOccurs="1" maxOccurs="1" />
                <xs:element ref="anyN" minOccurs="1" maxOccurs="1" />
                <xs:element ref="integerDivide" minOccurs="1" maxOccurs="1" />
                <xs:element ref="integerModulus" minOccurs="1" maxOccurs="1" />
                <xs:element ref="isNull" minOccurs="1" maxOccurs="1" />
                <xs:element ref="member" minOccurs="1" maxOccurs="1" />
                <xs:element ref="product" minOccurs="1" maxOccurs="1" />
                <xs:element ref="round" minOccurs="1" maxOccurs="1" />
                <xs:element ref="truncate" minOccurs="1" maxOccurs="1" />
                <xs:element ref="fieldValue" minOccurs="1" maxOccurs="1" />
                <xs:element ref="randomInteger" minOccurs="1" maxOccurs="1" />
                <xs:element ref="randomFloat" minOccurs="1" maxOccurs="1" />
                <xs:element ref="variable" minOccurs="1" maxOccurs="1" />
                <xs:element ref="outcomeMinimum" minOccurs="1" maxOccurs="1" />
                <xs:element ref="outcomeMaximum" minOccurs="1" maxOccurs="1" />
                <xs:element ref="testVariables" minOccurs="1" maxOccurs="1" />
                <xs:element ref="integerToFloat" minOccurs="1" maxOccurs="1" />
                <xs:element ref="inside" minOccurs="1" maxOccurs="1" />
                <xs:element ref="baseValue" minOccurs="1" maxOccurs="1" />
                <xs:element ref="patternMatch" minOccurs="1" maxOccurs="1" />
                <xs:element ref="mapResponsePoint" minOccurs="1" maxOccurs="1" />
                <xs:element ref="mapResponse" minOccurs="1" maxOccurs="1" />
                <xs:element ref="stringMatch" minOccurs="1" maxOccurs="1" />
                <xs:element ref="repeat" minOccurs="1" maxOccurs="1" />
                <xs:element ref="roundTo" minOccurs="1" maxOccurs="1" />
                <xs:element ref="lcm" minOccurs="1" maxOccurs="1" />
                <xs:element ref="gcd" minOccurs="1" maxOccurs="1" />
                <xs:element ref="min" minOccurs="1" maxOccurs="1" />
                <xs:element ref="max" minOccurs="1" maxOccurs="1" />
                <xs:element ref="mathConstant" minOccurs="1" maxOccurs="1" />
                <xs:element ref="statsOperator" minOccurs="1" maxOccurs="1" />
                <xs:element ref="mathOperator" minOccurs="1" maxOccurs="1" />
            </xs:choice>
        </xs:sequence>
        <xs:attributeGroup ref="toleranceMode.Equal.Attr" />
        <xs:attributeGroup ref="tolerance.Equal.Attr" />
        <xs:attributeGroup ref="includeLowerBound.Equal.Attr" />
        <xs:attributeGroup ref="includeUpperBound.Equal.Attr" />
    </xs:complexType>

    <xs:complexType name="EqualRounded.Type" abstract="false" mixed="false">
        <xs:annotation>
            <xs:documentation source="documentation">
                The equalRounded operator takes two sub-expressions which must both have single cardinali-
                ty and have a numerical base-type. The result is a single boolean with a value of 'true'
                if the two expressions are numerically equal after rounding and 'false' if they are not.
                If either sub-expression is NULL then the operator results in NULL.
            </xs:documentation>
        </xs:annotation>
        <xs:sequence>
            <xs:choice minOccurs="2" maxOccurs="2">
                <xs:element ref="and" minOccurs="1" maxOccurs="1" />
                <xs:element ref="gt" minOccurs="1" maxOccurs="1" />
                <xs:element ref="not" minOccurs="1" maxOccurs="1" />
                <xs:element ref="lt" minOccurs="1" maxOccurs="1" />
                <xs:element ref="gte" minOccurs="1" maxOccurs="1" />
                <xs:element ref="lte" minOccurs="1" maxOccurs="1" />
                <xs:element ref="or" minOccurs="1" maxOccurs="1" />
                <xs:element ref="sum" minOccurs="1" maxOccurs="1" />
                <xs:element ref="durationLT" minOccurs="1" maxOccurs="1" />
                <xs:element ref="durationGTE" minOccurs="1" maxOccurs="1" />
                <xs:element ref="subtract" minOccurs="1" maxOccurs="1" />
                <xs:element ref="divide" minOccurs="1" maxOccurs="1" />
                <xs:element ref="multiple" minOccurs="1" maxOccurs="1" />
                <xs:element ref="ordered" minOccurs="1" maxOccurs="1" />
                <xs:element ref="customOperator" minOccurs="1" maxOccurs="1" />
                <xs:element ref="random" minOccurs="1" maxOccurs="1" />
                <xs:element ref="numberIncorrect" minOccurs="1" maxOccurs="1" />
                <xs:element ref="numberCorrect" minOccurs="1" maxOccurs="1" />
                <xs:element ref="numberPresented" minOccurs="1" maxOccurs="1" />
                <xs:element ref="numberResponded" minOccurs="1" maxOccurs="1" />
                <xs:element ref="numberSelected" minOccurs="1" maxOccurs="1" />
                <xs:element ref="substring" minOccurs="1" maxOccurs="1" />
                <xs:element ref="equalRounded" minOccurs="1" maxOccurs="1" />
                <xs:element ref="null" minOccurs="1" maxOccurs="1" />
                <xs:element ref="delete" minOccurs="1" maxOccurs="1" />
                <xs:element ref="match" minOccurs="1" maxOccurs="1" />
                <xs:element ref="index" minOccurs="1" maxOccurs="1" />
                <xs:element ref="power" minOccurs="1" maxOccurs="1" />
                <xs:element ref="equal" minOccurs="1" maxOccurs="1" />
                <xs:element ref="contains" minOccurs="1" maxOccurs="1" />
                <xs:element ref="containerSize" minOccurs="1" maxOccurs="1" />
                <xs:element ref="correct" minOccurs="1" maxOccurs="1" />
                <xs:element ref="default" minOccurs="1" maxOccurs="1" />
                <xs:element ref="anyN" minOccurs="1" maxOccurs="1" />
                <xs:element ref="integerDivide" minOccurs="1" maxOccurs="1" />
                <xs:element ref="integerModulus" minOccurs="1" maxOccurs="1" />
                <xs:element ref="isNull" minOccurs="1" maxOccurs="1" />
                <xs:element ref="member" minOccurs="1" maxOccurs="1" />
                <xs:element ref="product" minOccurs="1" maxOccurs="1" />
                <xs:element ref="round" minOccurs="1" maxOccurs="1" />
                <xs:element ref="truncate" minOccurs="1" maxOccurs="1" />
                <xs:element ref="fieldValue" minOccurs="1" maxOccurs="1" />
                <xs:element ref="randomInteger" minOccurs="1" maxOccurs="1" />
                <xs:element ref="randomFloat" minOccurs="1" maxOccurs="1" />
                <xs:element ref="variable" minOccurs="1" maxOccurs="1" />
                <xs:element ref="outcomeMinimum" minOccurs="1" maxOccurs="1" />
                <xs:element ref="outcomeMaximum" minOccurs="1" maxOccurs="1" />
                <xs:element ref="testVariables" minOccurs="1" maxOccurs="1" />
                <xs:element ref="integerToFloat" minOccurs="1" maxOccurs="1" />
                <xs:element ref="inside" minOccurs="1" maxOccurs="1" />
                <xs:element ref="baseValue" minOccurs="1" maxOccurs="1" />
                <xs:element ref="patternMatch" minOccurs="1" maxOccurs="1" />
                <xs:element ref="mapResponsePoint" minOccurs="1" maxOccurs="1" />
                <xs:element ref="mapResponse" minOccurs="1" maxOccurs="1" />
                <xs:element ref="stringMatch" minOccurs="1" maxOccurs="1" />
                <xs:element ref="repeat" minOccurs="1" maxOccurs="1" />
                <xs:element ref="roundTo" minOccurs="1" maxOccurs="1" />
                <xs:element ref="lcm" minOccurs="1" maxOccurs="1" />
                <xs:element ref="gcd" minOccurs="1" maxOccurs="1" />
                <xs:element ref="min" minOccurs="1" maxOccurs="1" />
                <xs:element ref="max" minOccurs="1" maxOccurs="1" />
                <xs:element ref="mathConstant" minOccurs="1" maxOccurs="1" />
                <xs:element ref="statsOperator" minOccurs="1" maxOccurs="1" />
                <xs:element ref="mathOperator" minOccurs="1" maxOccurs="1" />
            </xs:choice>
        </xs:sequence>
        <xs:attributeGroup ref="roundingMode.EqualRounded.Attr" />
        <xs:attributeGroup ref="figures.EqualRounded.Attr" />
    </xs:complexType>

    <xs:complexType name="ExtendedTextInteraction.Type" abstract="false" mixed="false">
        <xs:annotation>
            <xs:documentation source="documentation">
                An Extended Text Interaction is a blockInteraction that allows the candidate to enter an
                extended amount of text. The extendedTextInteraction must be bound to a response variable
                of single, multiple, ordered or record cardinality. If the response variable has record c-
                ardinality the fields in the record must be 'stringValue', 'floatValue', etc. Otherwise it
                ust have a baseType of string, integer or float. When bound to response variable with sin-
                gle cardinality a single string of text is required from the candidate. When bound to a r-
                esponse variable with multiple or ordered cardinality several separate text strings may be
                required.
            </xs:documentation>
        </xs:annotation>
        <xs:complexContent>
            <xs:extension base="BasePromptInteraction.Type">
                <xs:attributeGroup ref="base.ExtendedTextInteraction.Attr" />
                <xs:attributeGroup ref="string-identifier.ExtendedTextInteraction.Attr" />
                <xs:attributeGroup ref="expected-length.ExtendedTextInteraction.Attr" />
                <xs:attributeGroup ref="pattern-mask.ExtendedTextInteraction.Attr" />
                <xs:attributeGroup ref="placeholder-text.ExtendedTextInteraction.Attr" />
                <xs:attributeGroup ref="max-strings.ExtendedTextInteraction.Attr" />
                <xs:attributeGroup ref="min-strings.ExtendedTextInteraction.Attr" />
                <xs:attributeGroup ref="expected-lines.ExtendedTextInteraction.Attr" />
                <xs:attributeGroup ref="format.ExtendedTextInteraction.Attr" />
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <xs:complexType name="FeedbackBlock.Type" abstract="false" mixed="true">
        <xs:annotation>
            <xs:documentation source="documentation">
                This class is used to defne the feedback content that can be presented to the learner. A
                feedback element that forms part of a Non-adaptive Item must not contain an interaction o-
                bject, either directly or indirectly. When an interaction is contained in a hidden feedba-
                ck element it must also be hidden. The candidate must not be able to set or update the va-
                lue of the associated response variables. Feedback elements can be embedded inside each o-
                ther, with one exception: feedBackInline cannot contain feedbackBlock elements.
            </xs:documentation>
        </xs:annotation>
        <xs:complexContent>
            <xs:extension base="BaseSequenceXBase.Type">
                <xs:sequence>
                    <xs:choice minOccurs="0" maxOccurs="unbounded">
                        <xs:choice minOccurs="1" maxOccurs="1">
                            <xs:element ref="qti-position-object-stage" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="qti-custom-interaction" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="qti-drawing-interaction" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="qti-gap-match-interaction" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="qti-match-interaction" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="qti-graphic-gap-match-interaction" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="qti-hotspot-interaction" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="qti-graphic-order-interaction" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="qti-select-point-interaction" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="qti-graphic-associate-interaction" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="qti-slider-interaction" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="qti-choice-interaction" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="qti-media-interaction" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="qti-hottext-interaction" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="qti-order-interaction" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="qti-extended-text-interaction" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="qti-upload-interaction" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="qti-associate-interaction" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="qti-feedback-block" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="qti-template-block" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="qti-info-control" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="m3:math" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="xi:include" minOccurs="1" maxOccurs="1" />
                            <xs:choice minOccurs="1" maxOccurs="1">
                                <xs:element ref="pre" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="h1" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="h2" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="h3" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="h4" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="h5" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="h6" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="p" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="address" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="dl" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="ol" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="ul" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="hr" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="blockquote" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="table" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="div" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="article" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="aside" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="audio" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="figure" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="footer" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="header" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="nav" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="section" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="video" minOccurs="1" maxOccurs="1" />
                            </xs:choice>
                        </xs:choice>
                        <xs:choice minOccurs="1" maxOccurs="1">
                            <xs:element ref="img" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="br" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="object" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="em" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="a" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="code" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="span" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="sub" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="acronym" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="big" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="tt" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="kbd" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="q" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="i" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="dfn" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="abbr" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="strong" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="sup" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="var" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="small" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="samp" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="b" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="cite" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="bdo" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="bdi" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="label" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="ruby" minOccurs="1" maxOccurs="1" />
                            <xs:choice minOccurs="1" maxOccurs="1">
                                <xs:element ref="ssml:p" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="ssml:s" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="ssml:say-as" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="ssml:phoneme" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="ssml:sub" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="ssml:voice" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="ssml:emphasis" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="ssml:break" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="ssml:prosody" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="ssml:mark" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="ssml:audio" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="ssml:speak" minOccurs="1" maxOccurs="1" />
                            </xs:choice>
                        </xs:choice>
                        <xs:element ref="qti-template-inline" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="qti-feedback-inline" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="qti-printed-variable" minOccurs="1" maxOccurs="1" />
                    </xs:choice>
                    <xs:element ref="stylesheet" minOccurs="0" maxOccurs="unbounded" />
                </xs:sequence>
                <xs:attributeGroup ref="outcome-identifier.FeedbackBlock.Attr" />
                <xs:attributeGroup ref="identifier.FeedbackBlock.Attr" />
                <xs:attributeGroup ref="show-hide.FeedbackBlock.Attr" />
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <xs:complexType name="FeedbackInline.Type" abstract="false" mixed="true">
        <xs:annotation>
            <xs:documentation source="documentation">
                This is feedback that is presented as inline content. Inline feedback that forms part of a
                Non-adaptive Item must not contain an interaction object, either directly or indirectly.
                When an interaction is contained in a hidden feedback it must also be hidden. The candida-
                te must not be able to set or update the value of the associated response variables. Feed-
                back can be embedded inside each other, with one exception: feedBackInline cannot contain
                feedbackBlock elements.
            </xs:documentation>
        </xs:annotation>
        <xs:complexContent>
            <xs:extension base="BaseSequenceXBase.Type">
                <xs:sequence>
                    <xs:choice minOccurs="0" maxOccurs="unbounded">
                        <xs:choice minOccurs="1" maxOccurs="1">
                            <xs:element ref="img" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="br" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="object" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="em" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="a" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="code" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="span" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="sub" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="acronym" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="big" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="tt" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="kbd" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="q" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="i" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="dfn" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="abbr" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="strong" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="sup" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="var" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="small" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="samp" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="b" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="cite" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="bdo" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="bdi" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="label" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="ruby" minOccurs="1" maxOccurs="1" />
                            <xs:choice minOccurs="1" maxOccurs="1">
                                <xs:element ref="ssml:p" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="ssml:s" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="ssml:say-as" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="ssml:phoneme" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="ssml:sub" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="ssml:voice" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="ssml:emphasis" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="ssml:break" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="ssml:prosody" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="ssml:mark" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="ssml:audio" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="ssml:speak" minOccurs="1" maxOccurs="1" />
                            </xs:choice>
                        </xs:choice>
                        <xs:element ref="m3:math" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="xi:include" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="qti-template-inline" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="qti-printed-variable" minOccurs="1" maxOccurs="1" />
                    </xs:choice>
                </xs:sequence>
                <xs:attributeGroup ref="outcome-identifier.FeedbackInline.Attr" />
                <xs:attributeGroup ref="identifier.FeedbackInline.Attr" />
                <xs:attributeGroup ref="show-hide.FeedbackInline.Attr" />
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <xs:complexType name="FieldValue.Type" abstract="false" mixed="false">
        <xs:annotation>
            <xs:documentation source="documentation">
                This is a QTI expression. The field-value operator takes a sub-expression with a record c-
                ontainer value. The result is the value of the field with the specified fieldIdentifier.
                If there is no field with that identifier then the result of the operator is NULL.
            </xs:documentation>
        </xs:annotation>
        <xs:sequence>
            <xs:choice minOccurs="1" maxOccurs="1">
                <xs:element ref="and" minOccurs="1" maxOccurs="1" />
                <xs:element ref="gt" minOccurs="1" maxOccurs="1" />
                <xs:element ref="not" minOccurs="1" maxOccurs="1" />
                <xs:element ref="lt" minOccurs="1" maxOccurs="1" />
                <xs:element ref="gte" minOccurs="1" maxOccurs="1" />
                <xs:element ref="lte" minOccurs="1" maxOccurs="1" />
                <xs:element ref="or" minOccurs="1" maxOccurs="1" />
                <xs:element ref="sum" minOccurs="1" maxOccurs="1" />
                <xs:element ref="durationLT" minOccurs="1" maxOccurs="1" />
                <xs:element ref="durationGTE" minOccurs="1" maxOccurs="1" />
                <xs:element ref="subtract" minOccurs="1" maxOccurs="1" />
                <xs:element ref="divide" minOccurs="1" maxOccurs="1" />
                <xs:element ref="multiple" minOccurs="1" maxOccurs="1" />
                <xs:element ref="ordered" minOccurs="1" maxOccurs="1" />
                <xs:element ref="customOperator" minOccurs="1" maxOccurs="1" />
                <xs:element ref="random" minOccurs="1" maxOccurs="1" />
                <xs:element ref="numberIncorrect" minOccurs="1" maxOccurs="1" />
                <xs:element ref="numberCorrect" minOccurs="1" maxOccurs="1" />
                <xs:element ref="numberPresented" minOccurs="1" maxOccurs="1" />
                <xs:element ref="numberResponded" minOccurs="1" maxOccurs="1" />
                <xs:element ref="numberSelected" minOccurs="1" maxOccurs="1" />
                <xs:element ref="substring" minOccurs="1" maxOccurs="1" />
                <xs:element ref="equalRounded" minOccurs="1" maxOccurs="1" />
                <xs:element ref="null" minOccurs="1" maxOccurs="1" />
                <xs:element ref="delete" minOccurs="1" maxOccurs="1" />
                <xs:element ref="match" minOccurs="1" maxOccurs="1" />
                <xs:element ref="index" minOccurs="1" maxOccurs="1" />
                <xs:element ref="power" minOccurs="1" maxOccurs="1" />
                <xs:element ref="equal" minOccurs="1" maxOccurs="1" />
                <xs:element ref="contains" minOccurs="1" maxOccurs="1" />
                <xs:element ref="containerSize" minOccurs="1" maxOccurs="1" />
                <xs:element ref="correct" minOccurs="1" maxOccurs="1" />
                <xs:element ref="default" minOccurs="1" maxOccurs="1" />
                <xs:element ref="anyN" minOccurs="1" maxOccurs="1" />
                <xs:element ref="integerDivide" minOccurs="1" maxOccurs="1" />
                <xs:element ref="integerModulus" minOccurs="1" maxOccurs="1" />
                <xs:element ref="isNull" minOccurs="1" maxOccurs="1" />
                <xs:element ref="member" minOccurs="1" maxOccurs="1" />
                <xs:element ref="product" minOccurs="1" maxOccurs="1" />
                <xs:element ref="round" minOccurs="1" maxOccurs="1" />
                <xs:element ref="truncate" minOccurs="1" maxOccurs="1" />
                <xs:element ref="fieldValue" minOccurs="1" maxOccurs="1" />
                <xs:element ref="randomInteger" minOccurs="1" maxOccurs="1" />
                <xs:element ref="randomFloat" minOccurs="1" maxOccurs="1" />
                <xs:element ref="variable" minOccurs="1" maxOccurs="1" />
                <xs:element ref="outcomeMinimum" minOccurs="1" maxOccurs="1" />
                <xs:element ref="outcomeMaximum" minOccurs="1" maxOccurs="1" />
                <xs:element ref="testVariables" minOccurs="1" maxOccurs="1" />
                <xs:element ref="integerToFloat" minOccurs="1" maxOccurs="1" />
                <xs:element ref="inside" minOccurs="1" maxOccurs="1" />
                <xs:element ref="baseValue" minOccurs="1" maxOccurs="1" />
                <xs:element ref="patternMatch" minOccurs="1" maxOccurs="1" />
                <xs:element ref="mapResponsePoint" minOccurs="1" maxOccurs="1" />
                <xs:element ref="mapResponse" minOccurs="1" maxOccurs="1" />
                <xs:element ref="stringMatch" minOccurs="1" maxOccurs="1" />
                <xs:element ref="repeat" minOccurs="1" maxOccurs="1" />
                <xs:element ref="roundTo" minOccurs="1" maxOccurs="1" />
                <xs:element ref="lcm" minOccurs="1" maxOccurs="1" />
                <xs:element ref="gcd" minOccurs="1" maxOccurs="1" />
                <xs:element ref="min" minOccurs="1" maxOccurs="1" />
                <xs:element ref="max" minOccurs="1" maxOccurs="1" />
                <xs:element ref="mathConstant" minOccurs="1" maxOccurs="1" />
                <xs:element ref="statsOperator" minOccurs="1" maxOccurs="1" />
                <xs:element ref="mathOperator" minOccurs="1" maxOccurs="1" />
            </xs:choice>
        </xs:sequence>
        <xs:attributeGroup ref="fieldIdentifier.FieldValue.Attr" />
    </xs:complexType>

    <xs:complexType name="Gap.Type" abstract="false" mixed="false">
        <xs:annotation>
            <xs:documentation source="documentation">
                This defines the gap structure that must only appear within a 'gapMatchInteraction'.
            </xs:documentation>
        </xs:annotation>
        <xs:complexContent>
            <xs:extension base="BaseSequenceXBaseEmpty.Type">
                <xs:attributeGroup ref="identifier.Gap.Attr" />
                <xs:attributeGroup ref="template-identifier.Gap.Attr" />
                <xs:attributeGroup ref="show-hide.Gap.Attr" />
                <xs:attributeGroup ref="match-group.Gap.Attr" />
                <xs:attributeGroup ref="required.Gap.Attr" />
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <xs:complexType name="GapImg.Type" abstract="false" mixed="false">
        <xs:annotation>
            <xs:documentation source="documentation">
                A gap image contains a single image object to be inserted into a gap by the candidate.
            </xs:documentation>
        </xs:annotation>
        <xs:complexContent>
            <xs:extension base="BaseSequence.Type">
                <xs:sequence>
                    <xs:element ref="object" minOccurs="1" maxOccurs="1" />
                </xs:sequence>
                <xs:attributeGroup ref="identifier.GapImg.Attr" />
                <xs:attributeGroup ref="template-identifier.GapImg.Attr" />
                <xs:attributeGroup ref="show-hide.GapImg.Attr" />
                <xs:attributeGroup ref="match-group.GapImg.Attr" />
                <xs:attributeGroup ref="match-max.GapImg.Attr" />
                <xs:attributeGroup ref="match-min.GapImg.Attr" />
                <xs:attributeGroup ref="object-label.GapImg.Attr" />
                <xs:attributeGroup ref="top.GapImg.Attr" />
                <xs:attributeGroup ref="left.GapImg.Attr" />
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <xs:complexType name="GapMatchInteraction.Type" abstract="false" mixed="false">
        <xs:annotation>
            <xs:documentation source="documentation">
                A gap match interaction is a blockInteraction that contains a number gaps that the candid-
                ate can fill from an associated set of choices. The candidate must be able to review the
                content with the gaps filled in context, as indicated by their choices. The gapMatchInter-
                action must be bound to a response variable with base-type directedPair and either single
                or multiple cardinality, depending on the number of gaps. The choices represent the source
                of the pairing and gaps the targets. Each gap can have at most one choice associated with
                it. The maximum occurrence of the choices is controlled by the matchMax characteristic of
                gapChoice.
            </xs:documentation>
        </xs:annotation>
        <xs:complexContent>
            <xs:extension base="BasePromptInteraction.Type">
                <xs:sequence>
                    <xs:choice minOccurs="1" maxOccurs="unbounded">
                        <xs:element ref="qti-gap-text" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="qti-gap-img" minOccurs="1" maxOccurs="1" />
                    </xs:choice>
                    <xs:choice minOccurs="1" maxOccurs="unbounded">
                        <xs:element ref="qti-feedback-block" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="qti-template-block" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="m3:math" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="xi:include" minOccurs="1" maxOccurs="1" />
                        <xs:choice minOccurs="1" maxOccurs="1">
                            <xs:element ref="pre" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="h1" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="h2" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="h3" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="h4" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="h5" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="h6" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="p" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="address" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="dl" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="ol" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="ul" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="hr" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="blockquote" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="table" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="div" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="article" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="aside" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="audio" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="figure" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="footer" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="header" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="nav" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="section" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="video" minOccurs="1" maxOccurs="1" />
                        </xs:choice>
                    </xs:choice>
                </xs:sequence>
                <xs:attributeGroup ref="shuffle.GapMatchInteraction.Attr" />
                <xs:attributeGroup ref="min-associations.GapMatchInteraction.Attr" />
                <xs:attributeGroup ref="max-associations.GapMatchInteraction.Attr" />
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <xs:complexType name="GapText.Type" abstract="false" mixed="true">
        <xs:annotation>
            <xs:documentation source="documentation">
                A simple run of text to be inserted into a gap by the user, may be subject to variable va-
                lue substitution with printedVariable.
            </xs:documentation>
        </xs:annotation>
        <xs:complexContent>
            <xs:extension base="BaseSequence.Type">
                <xs:sequence>
                    <xs:choice minOccurs="0" maxOccurs="unbounded">
                        <xs:element ref="qti-printed-variable" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="qti-feedback-inline" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="qti-template-inline" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="m3:math" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="xi:include" minOccurs="1" maxOccurs="1" />
                        <xs:choice minOccurs="1" maxOccurs="1">
                            <xs:element ref="img" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="br" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="object" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="em" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="a" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="code" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="span" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="sub" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="acronym" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="big" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="tt" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="kbd" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="q" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="i" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="dfn" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="abbr" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="strong" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="sup" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="var" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="small" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="samp" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="b" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="cite" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="bdo" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="bdi" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="label" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="ruby" minOccurs="1" maxOccurs="1" />
                            <xs:choice minOccurs="1" maxOccurs="1">
                                <xs:element ref="ssml:p" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="ssml:s" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="ssml:say-as" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="ssml:phoneme" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="ssml:sub" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="ssml:voice" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="ssml:emphasis" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="ssml:break" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="ssml:prosody" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="ssml:mark" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="ssml:audio" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="ssml:speak" minOccurs="1" maxOccurs="1" />
                            </xs:choice>
                        </xs:choice>
                    </xs:choice>
                </xs:sequence>
                <xs:attributeGroup ref="identifier.GapText.Attr" />
                <xs:attributeGroup ref="template-identifier.GapText.Attr" />
                <xs:attributeGroup ref="show-hide.GapText.Attr" />
                <xs:attributeGroup ref="match-group.GapText.Attr" />
                <xs:attributeGroup ref="match-max.GapText.Attr" />
                <xs:attributeGroup ref="match-min.GapText.Attr" />
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <xs:complexType name="GraphicAssociateInteraction.Type" abstract="false" mixed="false">
        <xs:annotation>
            <xs:documentation source="documentation">
                A graphic associate interaction is a graphic interaction with a corresponding set of choi-
                ces that are defined as areas of the graphic image. The candidate's task is to associate
                the areas (hotspots) with each other. The graphic associate interaction should only be us-
                ed when the graphical relationship of the choices with respect to each other (as represen-
                ted by the graphic image) is important to the needs of the item. Otherwise, associateInte-
                raction should be used instead with separate Material for each option. The delivery engine
                must clearly indicate all defined area(s) of the image. The graphicAssociateInteraction m-
                ust be bound to a response variable with base-type pair and either single or multiple car-
                dinality.
            </xs:documentation>
        </xs:annotation>
        <xs:complexContent>
            <xs:extension base="BasePromptInteraction.Type">
                <xs:sequence>
                    <xs:element ref="object" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="qti-associable-hotspot" minOccurs="1" maxOccurs="unbounded" />
                </xs:sequence>
                <xs:attributeGroup ref="min-associations.GraphicAssociateInteraction.Attr" />
                <xs:attributeGroup ref="max-associations.GraphicAssociateInteraction.Attr" />
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <xs:complexType name="GraphicGapMatchInteraction.Type" abstract="false" mixed="false">
        <xs:annotation>
            <xs:documentation source="documentation">
                A graphic gap-match interaction is a graphical interaction with a set of gaps that are de-
                fined as areas (hotspots) of the graphic image and an additional set of gap choices that
                are defined outside the image. The candidate must associate the gap choices with the gaps
                in the image and be able to review the image with the gaps filled in context, as indicated
                by their choices. Care should be taken when designing these interactions to ensure that t-
                he gaps in the image are a suitable size to receive the required gap choices. It must be
                clear to the candidate which hotspot each choice has been associated with. When associate-
                d, choices must appear wholly inside the gaps if at all possible and, where overlaps are
                required, should not hide each other completely. If the candidate indicates the associati-
                on by positioning the choice over the gap (e.g. drag and drop) the system should 'snap' it
                to the nearest position that satisfies these requirements. The graphicGapMatchInteraction
                must be bound to a response variable with base-type directedPair and multiple cardinality.
                The choices represent the source of the pairing and the gaps in the image (the hotspots)
                the targets. Unlike the simple gapMatchInteraction, each gap can have several choices ass-
                ociated with it if desired, furthermore, the same choice may be associated with an associ-
                ableHotspot multiple times, in which case the corresponding directed pair appears multiple
                times in the value of the response variable.
            </xs:documentation>
        </xs:annotation>
        <xs:complexContent>
            <xs:extension base="BaseSequenceFull.Type">
                <xs:sequence>
                    <xs:element ref="qti-prompt" minOccurs="0" maxOccurs="1" />
                    <xs:element ref="object" minOccurs="1" maxOccurs="1" />
                    <xs:choice minOccurs="1" maxOccurs="unbounded">
                        <xs:element ref="qti-gap-text" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="qti-gap-img" minOccurs="1" maxOccurs="1" />
                    </xs:choice>
                    <xs:element ref="qti-associable-hotspot" minOccurs="1" maxOccurs="unbounded" />
                </xs:sequence>
                <xs:attributeGroup ref="min-associations.GraphicGapMatchInteraction.Attr" />
                <xs:attributeGroup ref="max-associations.GraphicGapMatchInteraction.Attr" />
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <xs:complexType name="GraphicOrderInteraction.Type" abstract="false" mixed="false">
        <xs:annotation>
            <xs:documentation source="documentation">
                A graphic order interaction is a graphic interaction with a corresponding set of choices
                that are defined as areas of the graphic image. The candidate's task is to impose an orde-
                ring on the areas (hotspots). The order hotspot interaction should only be used when the
                spacial relationship of the choices with respect to each other (as represented by the gra-
                phic image) is important to the needs of the item. Otherwise, orderInteraction should be
                used instead with separate material for each option. The delivery engine must clearly ind-
                icate all defined area(s) of the image. The order hotspot interaction must be bound to a
                response variable with a baseType of identifier and ordered cardinality.
            </xs:documentation>
        </xs:annotation>
        <xs:complexContent>
            <xs:extension base="BaseSequenceFull.Type">
                <xs:sequence>
                    <xs:element ref="qti-prompt" minOccurs="0" maxOccurs="1" />
                    <xs:element ref="object" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="qti-hotspot-choice" minOccurs="1" maxOccurs="unbounded" />
                </xs:sequence>
                <xs:attributeGroup ref="min-choices.GraphicOrderInteraction.Attr" />
                <xs:attributeGroup ref="max-choices.GraphicOrderInteraction.Attr" />
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <xs:complexType name="HotspotChoice.Type" abstract="false" mixed="false">
        <xs:annotation>
            <xs:documentation source="documentation">
                The definition of a hotspot choices that can be selected by the candidate. If the delivery
                system does not support pointer-based selection then the order in which the choices are g-
                iven must be the order in which they are offered to the candidate for selection. For exam-
                ple, the 'tab order' in simple keyboard navigation. If hotspots overlap then those listed
                first hide overlapping hotspots that appear later. The default hotspot, if defined, must
                appear last.
            </xs:documentation>
        </xs:annotation>
        <xs:complexContent>
            <xs:extension base="BaseSequenceXBaseEmpty.Type">
                <xs:attributeGroup ref="identifier.HotspotChoice.Attr" />
                <xs:attributeGroup ref="template-identifier.HotspotChoice.Attr" />
                <xs:attributeGroup ref="show-hide.HotspotChoice.Attr" />
                <xs:attributeGroup ref="shape.HotspotChoice.Attr" />
                <xs:attributeGroup ref="coords.HotspotChoice.Attr" />
                <xs:attributeGroup ref="hotspot-label.HotspotChoice.Attr" />
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <xs:complexType name="HotspotInteraction.Type" abstract="false" mixed="false">
        <xs:annotation>
            <xs:documentation source="documentation">
                A hotspot interaction is a graphical interaction with a corresponding set of choices that
                are defined as areas of the graphic image. The candidate's task is to select one or more
                of the areas (hotspots). The hotspot interaction should only be used when the spacial rel-
                ationship of the choices with respect to each other (as represented by the graphic image)
                is important to the needs of the item. Otherwise, choiceInteraction should be used instead
                with separate material for each option. The delivery engine must clearly indicate the sel-
                ected area(s) of the image and may also indicate the unselected areas as well. Interactio-
                ns with hidden hotspots are achieved with the selectPointInteraction. The hotspot interac-
                tion must be bound to a response variable with a baseType of identifier and single or mul-
                tiple cardinality.
            </xs:documentation>
        </xs:annotation>
        <xs:complexContent>
            <xs:extension base="BasePromptInteraction.Type">
                <xs:sequence>
                    <xs:element ref="object" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="qti-hotspot-choice" minOccurs="1" maxOccurs="unbounded" />
                </xs:sequence>
                <xs:attributeGroup ref="min-choices.HotspotInteraction.Attr" />
                <xs:attributeGroup ref="max-choices.HotspotInteraction.Attr" />
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <xs:complexType name="HotText.Type" abstract="false" mixed="true">
        <xs:annotation>
            <xs:documentation source="documentation">
                A HotText area is used within the content of an hotTextInteraction to provide the individ-
                ual choices. It must not contain any nested interactions or other hottext areas. When a h-
                ottext choice is hidden (by the value of an associated template variable) the content of
                the choice must still be presented to the candidate as if it were simply part of the surr-
                ounding material. In the case of hottext, the effect of hiding the choice is simply to ma-
                ke the run of text unselectable by the candidate.
            </xs:documentation>
        </xs:annotation>
        <xs:complexContent>
            <xs:extension base="BaseSequenceXBase.Type">
                <xs:sequence>
                    <xs:choice minOccurs="0" maxOccurs="unbounded">
                        <xs:element ref="qti-printed-variable" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="qti-feedback-inline" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="qti-template-inline" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="m3:math" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="xi:include" minOccurs="1" maxOccurs="1" />
                        <xs:choice minOccurs="1" maxOccurs="1">
                            <xs:element ref="img" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="br" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="object" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="em" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="a" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="code" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="span" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="sub" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="acronym" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="big" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="tt" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="kbd" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="q" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="i" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="dfn" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="abbr" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="strong" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="sup" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="var" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="small" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="samp" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="b" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="cite" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="bdo" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="bdi" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="label" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="ruby" minOccurs="1" maxOccurs="1" />
                            <xs:choice minOccurs="1" maxOccurs="1">
                                <xs:element ref="ssml:p" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="ssml:s" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="ssml:say-as" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="ssml:phoneme" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="ssml:sub" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="ssml:voice" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="ssml:emphasis" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="ssml:break" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="ssml:prosody" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="ssml:mark" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="ssml:audio" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="ssml:speak" minOccurs="1" maxOccurs="1" />
                            </xs:choice>
                        </xs:choice>
                    </xs:choice>
                </xs:sequence>
                <xs:attributeGroup ref="identifier.HotText.Attr" />
                <xs:attributeGroup ref="template-identifier.HotText.Attr" />
                <xs:attributeGroup ref="show-hide.HotText.Attr" />
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <xs:complexType name="HotTextInteraction.Type" abstract="false" mixed="false">
        <xs:annotation>
            <xs:documentation source="documentation">
                The HotText Interaction presents a set of choices to the candidate represented as selecta-
                ble runs of text embedded within a surrounding context, such as a simple passage of text.
                Like choiceInteraction, the candidate's task is to select one or more of the choices, up
                to a maximum of maxChoices. The interaction is initialized from the defaultValue of the a-
                ssociated response variable, a NULL value indicating that no choices are selected (the us-
                ual case). The hottextInteraction must be bound to a response variable with a baseType of
                identifier and single or multiple cardinality.
            </xs:documentation>
        </xs:annotation>
        <xs:complexContent>
            <xs:extension base="BasePromptInteraction.Type">
                <xs:sequence>
                    <xs:choice minOccurs="1" maxOccurs="unbounded">
                        <xs:element ref="qti-feedback-block" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="qti-template-block" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="m3:math" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="xi:include" minOccurs="1" maxOccurs="1" />
                        <xs:choice minOccurs="1" maxOccurs="1">
                            <xs:element ref="pre" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="h1" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="h2" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="h3" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="h4" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="h5" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="h6" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="p" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="address" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="dl" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="ol" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="ul" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="hr" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="blockquote" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="table" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="div" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="article" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="aside" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="audio" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="figure" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="footer" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="header" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="nav" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="section" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="video" minOccurs="1" maxOccurs="1" />
                        </xs:choice>
                    </xs:choice>
                </xs:sequence>
                <xs:attributeGroup ref="max-choices.HotTextInteraction.Attr" />
                <xs:attributeGroup ref="min-choices.HotTextInteraction.Attr" />
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <xs:complexType name="HR.Type" abstract="false" mixed="false">
        <xs:annotation>
            <xs:documentation source="documentation">
                This provides the functionality of the HTML 'hr' tag. The 'hr' tag represents a paragraph-
                -level thematic break, e.g. a scene change in a story, or a transition to another topic w-
                ithin a section of a reference book. This tag has no children.
            </xs:documentation>
        </xs:annotation>
        <xs:complexContent>
            <xs:extension base="BaseSequenceXBaseEmpty.Type" />
        </xs:complexContent>
    </xs:complexType>

    <xs:complexType name="HTMLText.Type" abstract="false" mixed="true">
        <xs:annotation>
            <xs:documentation source="documentation">
                This provides the content for text-based HTML tags e.g. 'pre', 'p', 'h1', 'h2', etc.
            </xs:documentation>
        </xs:annotation>
        <xs:complexContent>
            <xs:extension base="BaseSequenceXBase.Type">
                <xs:sequence>
                    <xs:choice minOccurs="0" maxOccurs="unbounded">
                        <xs:element ref="qti-text-entry-interaction" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="qti-hottext" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="qti-printed-variable" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="qti-gap" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="qti-feedback-inline" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="qti-template-inline" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="qti-inline-choice-interaction" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="qti-end-attempt-interaction" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="qti-custom-interaction" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="m3:math" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="xi:include" minOccurs="1" maxOccurs="1" />
                        <xs:choice minOccurs="1" maxOccurs="1">
                            <xs:element ref="img" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="br" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="object" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="em" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="a" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="code" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="span" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="sub" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="acronym" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="big" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="tt" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="kbd" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="q" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="i" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="dfn" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="abbr" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="strong" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="sup" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="var" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="small" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="samp" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="b" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="cite" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="bdo" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="bdi" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="label" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="ruby" minOccurs="1" maxOccurs="1" />
                            <xs:choice minOccurs="1" maxOccurs="1">
                                <xs:element ref="ssml:p" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="ssml:s" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="ssml:say-as" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="ssml:phoneme" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="ssml:sub" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="ssml:voice" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="ssml:emphasis" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="ssml:break" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="ssml:prosody" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="ssml:mark" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="ssml:audio" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="ssml:speak" minOccurs="1" maxOccurs="1" />
                            </xs:choice>
                        </xs:choice>
                    </xs:choice>
                </xs:sequence>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <xs:complexType name="Img.Type" abstract="false" mixed="false">
        <xs:annotation>
            <xs:documentation source="documentation">
                This provides the HTML 'img' tag content capability.
            </xs:documentation>
        </xs:annotation>
        <xs:complexContent>
            <xs:extension base="BaseSequenceXBaseEmpty.Type">
                <xs:attributeGroup ref="src.Img.Attr" />
                <xs:attributeGroup ref="alt.Img.Attr" />
                <xs:attributeGroup ref="longdesc.Img.Attr" />
                <xs:attributeGroup ref="height.Img.Attr" />
                <xs:attributeGroup ref="width.Img.Attr" />
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <xs:complexType name="Index.Type" abstract="false" mixed="false">
        <xs:annotation>
            <xs:documentation source="documentation">
                The index operator takes a sub-expression with an ordered container value and any base-ty-
                pe. The result is the nth value of the container. The result has the same base-type as the
                sub-expression but single cardinality. The first value of a container has index 1, the se-
                cond 2 and so on. 'n' must be a positive integer. If 'n' exceeds the number of values in
                the container (or the sub-expression is NULL) then the result of the index operator is NU-
                LL. If 'n' is an identifier, it is the value of 'n' at runtime that is used.
            </xs:documentation>
        </xs:annotation>
        <xs:sequence>
            <xs:choice minOccurs="1" maxOccurs="1">
                <xs:element ref="and" minOccurs="1" maxOccurs="1" />
                <xs:element ref="gt" minOccurs="1" maxOccurs="1" />
                <xs:element ref="not" minOccurs="1" maxOccurs="1" />
                <xs:element ref="lt" minOccurs="1" maxOccurs="1" />
                <xs:element ref="gte" minOccurs="1" maxOccurs="1" />
                <xs:element ref="lte" minOccurs="1" maxOccurs="1" />
                <xs:element ref="or" minOccurs="1" maxOccurs="1" />
                <xs:element ref="sum" minOccurs="1" maxOccurs="1" />
                <xs:element ref="durationLT" minOccurs="1" maxOccurs="1" />
                <xs:element ref="durationGTE" minOccurs="1" maxOccurs="1" />
                <xs:element ref="subtract" minOccurs="1" maxOccurs="1" />
                <xs:element ref="divide" minOccurs="1" maxOccurs="1" />
                <xs:element ref="multiple" minOccurs="1" maxOccurs="1" />
                <xs:element ref="ordered" minOccurs="1" maxOccurs="1" />
                <xs:element ref="customOperator" minOccurs="1" maxOccurs="1" />
                <xs:element ref="random" minOccurs="1" maxOccurs="1" />
                <xs:element ref="numberIncorrect" minOccurs="1" maxOccurs="1" />
                <xs:element ref="numberCorrect" minOccurs="1" maxOccurs="1" />
                <xs:element ref="numberPresented" minOccurs="1" maxOccurs="1" />
                <xs:element ref="numberResponded" minOccurs="1" maxOccurs="1" />
                <xs:element ref="numberSelected" minOccurs="1" maxOccurs="1" />
                <xs:element ref="substring" minOccurs="1" maxOccurs="1" />
                <xs:element ref="equalRounded" minOccurs="1" maxOccurs="1" />
                <xs:element ref="null" minOccurs="1" maxOccurs="1" />
                <xs:element ref="delete" minOccurs="1" maxOccurs="1" />
                <xs:element ref="match" minOccurs="1" maxOccurs="1" />
                <xs:element ref="index" minOccurs="1" maxOccurs="1" />
                <xs:element ref="power" minOccurs="1" maxOccurs="1" />
                <xs:element ref="equal" minOccurs="1" maxOccurs="1" />
                <xs:element ref="contains" minOccurs="1" maxOccurs="1" />
                <xs:element ref="containerSize" minOccurs="1" maxOccurs="1" />
                <xs:element ref="correct" minOccurs="1" maxOccurs="1" />
                <xs:element ref="default" minOccurs="1" maxOccurs="1" />
                <xs:element ref="anyN" minOccurs="1" maxOccurs="1" />
                <xs:element ref="integerDivide" minOccurs="1" maxOccurs="1" />
                <xs:element ref="integerModulus" minOccurs="1" maxOccurs="1" />
                <xs:element ref="isNull" minOccurs="1" maxOccurs="1" />
                <xs:element ref="member" minOccurs="1" maxOccurs="1" />
                <xs:element ref="product" minOccurs="1" maxOccurs="1" />
                <xs:element ref="round" minOccurs="1" maxOccurs="1" />
                <xs:element ref="truncate" minOccurs="1" maxOccurs="1" />
                <xs:element ref="fieldValue" minOccurs="1" maxOccurs="1" />
                <xs:element ref="randomInteger" minOccurs="1" maxOccurs="1" />
                <xs:element ref="randomFloat" minOccurs="1" maxOccurs="1" />
                <xs:element ref="variable" minOccurs="1" maxOccurs="1" />
                <xs:element ref="outcomeMinimum" minOccurs="1" maxOccurs="1" />
                <xs:element ref="outcomeMaximum" minOccurs="1" maxOccurs="1" />
                <xs:element ref="testVariables" minOccurs="1" maxOccurs="1" />
                <xs:element ref="integerToFloat" minOccurs="1" maxOccurs="1" />
                <xs:element ref="inside" minOccurs="1" maxOccurs="1" />
                <xs:element ref="baseValue" minOccurs="1" maxOccurs="1" />
                <xs:element ref="patternMatch" minOccurs="1" maxOccurs="1" />
                <xs:element ref="mapResponsePoint" minOccurs="1" maxOccurs="1" />
                <xs:element ref="mapResponse" minOccurs="1" maxOccurs="1" />
                <xs:element ref="stringMatch" minOccurs="1" maxOccurs="1" />
                <xs:element ref="repeat" minOccurs="1" maxOccurs="1" />
                <xs:element ref="roundTo" minOccurs="1" maxOccurs="1" />
                <xs:element ref="lcm" minOccurs="1" maxOccurs="1" />
                <xs:element ref="gcd" minOccurs="1" maxOccurs="1" />
                <xs:element ref="min" minOccurs="1" maxOccurs="1" />
                <xs:element ref="max" minOccurs="1" maxOccurs="1" />
                <xs:element ref="mathConstant" minOccurs="1" maxOccurs="1" />
                <xs:element ref="statsOperator" minOccurs="1" maxOccurs="1" />
                <xs:element ref="mathOperator" minOccurs="1" maxOccurs="1" />
            </xs:choice>
        </xs:sequence>
        <xs:attributeGroup ref="n.Index.Attr" />
    </xs:complexType>

    <xs:complexType name="InfoControl.Type" abstract="false" mixed="true">
        <xs:annotation>
            <xs:documentation source="documentation">
                The infoControl element is a means to provide the candidate with extra information about
                the item when s/he chooses to trigger the control. The extra information can be a hint, b-
                ut could also be additional tools such as a ruler or a (JavaScript) calculator. Unlike en-
                dAttemptInteraction, triggering infoControl has no consequence for response processing. T-
                hat means that its triggering won't be recorded, nor the candidate penalised for triggeri-
                ng it.
            </xs:documentation>
        </xs:annotation>
        <xs:complexContent>
            <xs:extension base="BaseSequence.Type">
                <xs:sequence>
                    <xs:choice minOccurs="0" maxOccurs="unbounded">
                        <xs:element ref="qti-printed-variable" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="qti-feedback-block" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="qti-feedback-inline" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="qti-template-inline" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="qti-template-block" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="m3:math" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="xi:include" minOccurs="1" maxOccurs="1" />
                        <xs:choice minOccurs="1" maxOccurs="1">
                            <xs:element ref="pre" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="h1" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="h2" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="h3" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="h4" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="h5" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="h6" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="p" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="address" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="dl" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="ol" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="ul" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="br" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="hr" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="img" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="object" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="blockquote" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="em" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="a" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="code" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="span" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="sub" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="acronym" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="big" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="tt" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="kbd" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="q" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="i" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="dfn" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="abbr" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="strong" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="sup" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="var" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="small" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="samp" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="b" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="cite" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="table" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="div" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="bdo" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="bdi" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="figure" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="audio" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="video" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="article" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="aside" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="footer" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="header" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="label" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="nav" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="section" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="ruby" minOccurs="1" maxOccurs="1" />
                            <xs:choice minOccurs="1" maxOccurs="1">
                                <xs:element ref="ssml:p" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="ssml:s" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="ssml:say-as" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="ssml:phoneme" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="ssml:sub" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="ssml:voice" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="ssml:emphasis" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="ssml:break" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="ssml:prosody" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="ssml:mark" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="ssml:audio" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="ssml:speak" minOccurs="1" maxOccurs="1" />
                            </xs:choice>
                        </xs:choice>
                    </xs:choice>
                </xs:sequence>
                <xs:attributeGroup ref="title.InfoControl.Attr" />
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <xs:complexType name="InlineChoice.Type" abstract="false" mixed="true">
        <xs:annotation>
            <xs:documentation source="documentation">
                A simple run of text to be displayed to the user, may be subject to variable value substi-
                tution with printedVariable.
            </xs:documentation>
        </xs:annotation>
        <xs:complexContent>
            <xs:extension base="BaseSequence.Type">
                <xs:sequence>
                    <xs:choice minOccurs="0" maxOccurs="unbounded">
                        <xs:element ref="qti-printed-variable" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="qti-feedback-inline" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="qti-template-inline" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="m3:math" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="xi:include" minOccurs="1" maxOccurs="1" />
                        <xs:choice minOccurs="1" maxOccurs="1">
                            <xs:element ref="img" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="br" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="object" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="em" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="a" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="code" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="span" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="sub" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="acronym" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="big" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="tt" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="kbd" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="q" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="i" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="dfn" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="abbr" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="strong" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="sup" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="var" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="small" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="samp" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="b" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="cite" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="bdo" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="bdi" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="label" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="ruby" minOccurs="1" maxOccurs="1" />
                            <xs:choice minOccurs="1" maxOccurs="1">
                                <xs:element ref="ssml:p" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="ssml:s" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="ssml:say-as" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="ssml:phoneme" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="ssml:sub" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="ssml:voice" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="ssml:emphasis" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="ssml:break" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="ssml:prosody" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="ssml:mark" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="ssml:audio" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="ssml:speak" minOccurs="1" maxOccurs="1" />
                            </xs:choice>
                        </xs:choice>
                    </xs:choice>
                </xs:sequence>
                <xs:attributeGroup ref="identifier.InlineChoice.Attr" />
                <xs:attributeGroup ref="fixed.InlineChoice.Attr" />
                <xs:attributeGroup ref="template-identifier.InlineChoice.Attr" />
                <xs:attributeGroup ref="show-hide.InlineChoice.Attr" />
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <xs:complexType name="InlineChoiceInteraction.Type" abstract="false" mixed="false">
        <xs:annotation>
            <xs:documentation source="documentation">
                An inline choice is an inlineInteraction that presents the user with a set of choices, ea-
                ch of which is a simple piece of text. The candidate's task is to select one of the choic-
                es. Unlike the choiceInteraction, the delivery engine must allow the candidate to review
                their choice within the context of the surrounding text. The inlineChoiceInteraction must
                be bound to a response variable with a baseType of identifier and single cardinality only.
            </xs:documentation>
        </xs:annotation>
        <xs:complexContent>
            <xs:extension base="BaseSequenceFull.Type">
                <xs:sequence>
                    <xs:element ref="qti-label" minOccurs="0" maxOccurs="1" />
                    <xs:element ref="qti-inline-choice" minOccurs="1" maxOccurs="unbounded" />
                </xs:sequence>
                <xs:attributeGroup ref="shuffle.InlineChoiceInteraction.Attr" />
                <xs:attributeGroup ref="required.InlineChoiceInteraction.Attr" />
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <xs:complexType name="Inside.Type" abstract="false" mixed="false">
        <xs:annotation>
            <xs:documentation source="documentation">
                The inside operator takes a single sub-expression which must have a baseType of point. The
                result is a single boolean with a value of 'true' if the given point is inside the area d-
                efined by shape and coords. If the sub-expression is a container the result is 'true' if
                any of the points are inside the area. If either sub-expression is NULL then the operator
                results in NULL.
            </xs:documentation>
        </xs:annotation>
        <xs:sequence>
            <xs:choice minOccurs="1" maxOccurs="1">
                <xs:element ref="and" minOccurs="1" maxOccurs="1" />
                <xs:element ref="gt" minOccurs="1" maxOccurs="1" />
                <xs:element ref="not" minOccurs="1" maxOccurs="1" />
                <xs:element ref="lt" minOccurs="1" maxOccurs="1" />
                <xs:element ref="gte" minOccurs="1" maxOccurs="1" />
                <xs:element ref="lte" minOccurs="1" maxOccurs="1" />
                <xs:element ref="or" minOccurs="1" maxOccurs="1" />
                <xs:element ref="sum" minOccurs="1" maxOccurs="1" />
                <xs:element ref="durationLT" minOccurs="1" maxOccurs="1" />
                <xs:element ref="durationGTE" minOccurs="1" maxOccurs="1" />
                <xs:element ref="subtract" minOccurs="1" maxOccurs="1" />
                <xs:element ref="divide" minOccurs="1" maxOccurs="1" />
                <xs:element ref="multiple" minOccurs="1" maxOccurs="1" />
                <xs:element ref="ordered" minOccurs="1" maxOccurs="1" />
                <xs:element ref="customOperator" minOccurs="1" maxOccurs="1" />
                <xs:element ref="random" minOccurs="1" maxOccurs="1" />
                <xs:element ref="numberIncorrect" minOccurs="1" maxOccurs="1" />
                <xs:element ref="numberCorrect" minOccurs="1" maxOccurs="1" />
                <xs:element ref="numberPresented" minOccurs="1" maxOccurs="1" />
                <xs:element ref="numberResponded" minOccurs="1" maxOccurs="1" />
                <xs:element ref="numberSelected" minOccurs="1" maxOccurs="1" />
                <xs:element ref="substring" minOccurs="1" maxOccurs="1" />
                <xs:element ref="equalRounded" minOccurs="1" maxOccurs="1" />
                <xs:element ref="null" minOccurs="1" maxOccurs="1" />
                <xs:element ref="delete" minOccurs="1" maxOccurs="1" />
                <xs:element ref="match" minOccurs="1" maxOccurs="1" />
                <xs:element ref="index" minOccurs="1" maxOccurs="1" />
                <xs:element ref="power" minOccurs="1" maxOccurs="1" />
                <xs:element ref="equal" minOccurs="1" maxOccurs="1" />
                <xs:element ref="contains" minOccurs="1" maxOccurs="1" />
                <xs:element ref="containerSize" minOccurs="1" maxOccurs="1" />
                <xs:element ref="correct" minOccurs="1" maxOccurs="1" />
                <xs:element ref="default" minOccurs="1" maxOccurs="1" />
                <xs:element ref="anyN" minOccurs="1" maxOccurs="1" />
                <xs:element ref="integerDivide" minOccurs="1" maxOccurs="1" />
                <xs:element ref="integerModulus" minOccurs="1" maxOccurs="1" />
                <xs:element ref="isNull" minOccurs="1" maxOccurs="1" />
                <xs:element ref="member" minOccurs="1" maxOccurs="1" />
                <xs:element ref="product" minOccurs="1" maxOccurs="1" />
                <xs:element ref="round" minOccurs="1" maxOccurs="1" />
                <xs:element ref="truncate" minOccurs="1" maxOccurs="1" />
                <xs:element ref="fieldValue" minOccurs="1" maxOccurs="1" />
                <xs:element ref="randomInteger" minOccurs="1" maxOccurs="1" />
                <xs:element ref="randomFloat" minOccurs="1" maxOccurs="1" />
                <xs:element ref="variable" minOccurs="1" maxOccurs="1" />
                <xs:element ref="outcomeMinimum" minOccurs="1" maxOccurs="1" />
                <xs:element ref="outcomeMaximum" minOccurs="1" maxOccurs="1" />
                <xs:element ref="testVariables" minOccurs="1" maxOccurs="1" />
                <xs:element ref="integerToFloat" minOccurs="1" maxOccurs="1" />
                <xs:element ref="inside" minOccurs="1" maxOccurs="1" />
                <xs:element ref="baseValue" minOccurs="1" maxOccurs="1" />
                <xs:element ref="patternMatch" minOccurs="1" maxOccurs="1" />
                <xs:element ref="mapResponsePoint" minOccurs="1" maxOccurs="1" />
                <xs:element ref="mapResponse" minOccurs="1" maxOccurs="1" />
                <xs:element ref="stringMatch" minOccurs="1" maxOccurs="1" />
                <xs:element ref="repeat" minOccurs="1" maxOccurs="1" />
                <xs:element ref="roundTo" minOccurs="1" maxOccurs="1" />
                <xs:element ref="lcm" minOccurs="1" maxOccurs="1" />
                <xs:element ref="gcd" minOccurs="1" maxOccurs="1" />
                <xs:element ref="min" minOccurs="1" maxOccurs="1" />
                <xs:element ref="max" minOccurs="1" maxOccurs="1" />
                <xs:element ref="mathConstant" minOccurs="1" maxOccurs="1" />
                <xs:element ref="statsOperator" minOccurs="1" maxOccurs="1" />
                <xs:element ref="mathOperator" minOccurs="1" maxOccurs="1" />
            </xs:choice>
        </xs:sequence>
        <xs:attributeGroup ref="shape.Inside.Attr" />
        <xs:attributeGroup ref="coords.Inside.Attr" />
    </xs:complexType>

    <xs:complexType name="InterpolationTable.Type" abstract="false" mixed="false">
        <xs:annotation>
            <xs:documentation source="documentation">
                An interpolationTable transforms a source float (or integer) by finding the first interpo-
                lationTableEntry with a sourceValue that is less than or equal to (subject to includeBoun-
                dary) the source value. For example, an interpolation table can be used to map a raw nume-
                ric score onto an identifier representing a grade. It may also be used to implement numer-
                ic transformations such as those from a simple raw score to a value on a calibrated scale.
            </xs:documentation>
        </xs:annotation>
        <xs:sequence>
            <xs:element ref="interpolationTableEntry" minOccurs="1" maxOccurs="unbounded" />
        </xs:sequence>
        <xs:attributeGroup ref="defaultValue.InterpolationTable.Attr" />
    </xs:complexType>

    <xs:complexType name="ItemBody.Type" abstract="false" mixed="false">
        <xs:annotation>
            <xs:documentation source="documentation">
                The item body contains the text, graphics, media objects and interactions that describe t-
                he item's content and information about how it is structured. The body is presented by co-
                mbining it with stylesheet information, either explicitly or implicitly using the default
                style rules of the delivery or authoring system.
                The body must be presented to the candid-
                ate when the associated item session is in the interacting state. In this state, the cand-
                idate must be able to interact with each of the visible interactions and therefore set or
                update the values of the associated response variables. The body may be presented to the
                candidate when the item session is in the closed or review state. In these states, althou-
                gh the candidate's responses should be visible, the interactions must be disabled so as to
                prevent the candidate from setting or updating the values of the associated response vari-
                ables. Finally, the body may be presented to the candidate in the solution state, in which
                case the correct values of the response variables must be visible and the associated inte-
                ractions disabled.
                The content model employed by this specification uses many concepts ta-
                ken directly from [XHTML, 10]. In effect, this part of the specification defines a profile
                of XHTML. Only some of the elements defined in XHTML are allowable in an assessmentItem a-
                nd of those that are, some have additional constraints placed on their attributes. Only t-
                hose elements from XHTML that are explicitly defined within this specification can be use-
                d. See XHTML Elements for details. Finally, this specification defines some new elements
                which are used to represent the interactions and to control the display of Integrated Fee-
                dback and content restricted to one or more of the defined content views.
            </xs:documentation>
        </xs:annotation>
        <xs:sequence>
            <xs:choice minOccurs="1" maxOccurs="unbounded">
                <xs:element ref="qti-rubric-block" minOccurs="1" maxOccurs="1" />
                <xs:choice minOccurs="1" maxOccurs="1">
                    <xs:element ref="qti-position-object-stage" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="qti-custom-interaction" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="qti-drawing-interaction" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="qti-gap-match-interaction" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="qti-match-interaction" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="qti-graphic-gap-match-interaction" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="qti-hotspot-interaction" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="qti-graphic-order-interaction" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="qti-select-point-interaction" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="qti-graphic-associate-interaction" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="qti-slider-interaction" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="qti-choice-interaction" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="qti-media-interaction" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="qti-hottext-interaction" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="qti-order-interaction" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="qti-extended-text-interaction" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="qti-upload-interaction" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="qti-associate-interaction" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="qti-feedback-block" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="qti-template-block" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="qti-info-control" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="m3:math" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="xi:include" minOccurs="1" maxOccurs="1" />
                    <xs:choice minOccurs="1" maxOccurs="1">
                        <xs:element ref="pre" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="h1" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="h2" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="h3" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="h4" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="h5" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="h6" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="p" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="address" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="dl" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="ol" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="ul" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="hr" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="blockquote" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="table" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="div" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="article" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="aside" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="audio" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="figure" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="footer" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="header" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="nav" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="section" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="video" minOccurs="1" maxOccurs="1" />
                    </xs:choice>
                </xs:choice>
            </xs:choice>
        </xs:sequence>
        <xs:attributeGroup ref="id.ItemBody.Attr" />
        <xs:attributeGroup ref="class.ItemBody.Attr" />
        <xs:attributeGroup ref="language.ItemBody.Attr" />
        <xs:attributeGroup ref="label.ItemBody.Attr" />
        <xs:attributeGroup ref="dir.ItemBody.Attr" />
        <!--  NEW ADDITION (2016-11-28) -->
        <xs:attribute name = "data-catalog-idref" use="optional" type="xs:IDREF" />
        <!--  ************************* -->
        <!--  NEW ADDITION (2017-01-04) -->
        <xs:attribute name = "data-qti-suppress-tts" use="optional">
            <xs:simpleType>
                <xs:restriction base="xs:string">
                    <xs:enumeration value="computer-read-aloud" />
                    <xs:enumeration value="screen-reader" />
                    <xs:enumeration value="all" />
                </xs:restriction>
            </xs:simpleType>
        </xs:attribute>
        <!--  ************************* -->
    </xs:complexType>

    <xs:complexType name="QTI-Label.Type" abstract="false" mixed="true">
        <xs:annotation>
            <xs:documentation source="documentation">
                This allows the creation of human readable labels that will be placed close to the associ-
                ated displayed content artefacts. These labels are used with inline choice interactions.
            </xs:documentation>
        </xs:annotation>
        <xs:complexContent>
            <xs:extension base="BaseSequenceXBase.Type">
                <xs:sequence>
                    <xs:choice minOccurs="0" maxOccurs="unbounded">
                        <xs:element ref="qti-printed-variable" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="qti-feedback-inline" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="qti-template-inline" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="m3:math" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="xi:include" minOccurs="1" maxOccurs="1" />
                        <xs:choice minOccurs="1" maxOccurs="1">
                            <xs:element ref="img" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="br" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="object" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="em" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="a" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="code" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="span" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="sub" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="acronym" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="big" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="tt" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="kbd" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="q" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="i" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="dfn" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="abbr" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="strong" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="sup" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="var" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="small" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="samp" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="b" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="cite" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="bdo" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="bdi" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="label" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="ruby" minOccurs="1" maxOccurs="1" />
                            <xs:choice minOccurs="1" maxOccurs="1">
                                <xs:element ref="ssml:p" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="ssml:s" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="ssml:say-as" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="ssml:phoneme" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="ssml:sub" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="ssml:voice" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="ssml:emphasis" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="ssml:break" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="ssml:prosody" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="ssml:mark" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="ssml:audio" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="ssml:speak" minOccurs="1" maxOccurs="1" />
                            </xs:choice>
                        </xs:choice>
                    </xs:choice>
                </xs:sequence>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <xs:complexType name="LI.Type" abstract="false" mixed="true">
        <xs:annotation>
            <xs:documentation source="documentation">
                Provides the HTML 'li' tag functionality. The 'li' tag represents a list item. If its par-
                ent tag is an 'ol' or 'ul', then the tag is an item of the parent tag's list, as defined
                for those elements. Otherwise, the list item has no defined list-related relationship to
                any other 'li' tag. If the parent element is an 'ol' tag, then the 'li' tag has an ordinal
                value.
            </xs:documentation>
        </xs:annotation>
        <xs:complexContent>
            <xs:extension base="BaseSequence.Type">
                <xs:sequence>
                    <xs:choice minOccurs="0" maxOccurs="unbounded">
                        <xs:element ref="qti-printed-variable" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="qti-feedback-block" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="qti-hottext" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="qti-feedback-inline" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="qti-template-inline" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="qti-template-block" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="m3:math" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="xi:include" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="qti-text-entry-interaction" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="qti-inline-choice-interaction" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="qti-end-attempt-interaction" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="qti-custom-interaction" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="qti-drawing-interaction" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="qti-gap-match-interaction" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="qti-match-interaction" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="qti-graphic-gap-match-interaction" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="qti-hotspot-interaction" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="qti-graphic-order-interaction" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="qti-select-point-interaction" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="qti-graphic-associate-interaction" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="qti-slider-interaction" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="qti-choice-interaction" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="qti-media-interaction" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="qti-hottext-interaction" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="qti-order-interaction" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="qti-extended-text-interaction" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="qti-upload-interaction" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="qti-associate-interaction" minOccurs="1" maxOccurs="1" />
                        <xs:choice minOccurs="1" maxOccurs="1">
                            <xs:element ref="pre" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="h1" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="h2" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="h3" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="h4" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="h5" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="h6" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="p" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="address" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="dl" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="ol" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="ul" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="br" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="hr" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="img" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="object" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="blockquote" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="em" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="a" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="code" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="span" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="sub" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="acronym" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="big" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="tt" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="kbd" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="q" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="i" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="dfn" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="abbr" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="strong" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="sup" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="var" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="small" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="samp" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="b" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="cite" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="table" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="div" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="bdo" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="bdi" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="figure" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="audio" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="video" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="article" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="aside" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="footer" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="header" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="label" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="nav" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="section" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="ruby" minOccurs="1" maxOccurs="1" />
                            <xs:choice minOccurs="1" maxOccurs="1">
                                <xs:element ref="ssml:p" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="ssml:s" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="ssml:say-as" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="ssml:phoneme" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="ssml:sub" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="ssml:voice" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="ssml:emphasis" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="ssml:break" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="ssml:prosody" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="ssml:mark" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="ssml:audio" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="ssml:speak" minOccurs="1" maxOccurs="1" />
                            </xs:choice>
                        </xs:choice>
                    </xs:choice>
                </xs:sequence>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <xs:complexType name="Logic0toMany.Type" abstract="false" mixed="false">
        <xs:annotation>
            <xs:documentation source="documentation">
                This is the container for the combination of the zero or more child expressions (see the
                ExpressionGroup abstract class for the details on the permitted expressions).
            </xs:documentation>
        </xs:annotation>
        <xs:sequence>
            <xs:choice minOccurs="0" maxOccurs="unbounded">
                <xs:element ref="and" minOccurs="1" maxOccurs="1" />
                <xs:element ref="gt" minOccurs="1" maxOccurs="1" />
                <xs:element ref="not" minOccurs="1" maxOccurs="1" />
                <xs:element ref="lt" minOccurs="1" maxOccurs="1" />
                <xs:element ref="gte" minOccurs="1" maxOccurs="1" />
                <xs:element ref="lte" minOccurs="1" maxOccurs="1" />
                <xs:element ref="or" minOccurs="1" maxOccurs="1" />
                <xs:element ref="sum" minOccurs="1" maxOccurs="1" />
                <xs:element ref="durationLT" minOccurs="1" maxOccurs="1" />
                <xs:element ref="durationGTE" minOccurs="1" maxOccurs="1" />
                <xs:element ref="subtract" minOccurs="1" maxOccurs="1" />
                <xs:element ref="divide" minOccurs="1" maxOccurs="1" />
                <xs:element ref="multiple" minOccurs="1" maxOccurs="1" />
                <xs:element ref="ordered" minOccurs="1" maxOccurs="1" />
                <xs:element ref="customOperator" minOccurs="1" maxOccurs="1" />
                <xs:element ref="random" minOccurs="1" maxOccurs="1" />
                <xs:element ref="numberIncorrect" minOccurs="1" maxOccurs="1" />
                <xs:element ref="numberCorrect" minOccurs="1" maxOccurs="1" />
                <xs:element ref="numberPresented" minOccurs="1" maxOccurs="1" />
                <xs:element ref="numberResponded" minOccurs="1" maxOccurs="1" />
                <xs:element ref="numberSelected" minOccurs="1" maxOccurs="1" />
                <xs:element ref="substring" minOccurs="1" maxOccurs="1" />
                <xs:element ref="equalRounded" minOccurs="1" maxOccurs="1" />
                <xs:element ref="null" minOccurs="1" maxOccurs="1" />
                <xs:element ref="delete" minOccurs="1" maxOccurs="1" />
                <xs:element ref="match" minOccurs="1" maxOccurs="1" />
                <xs:element ref="index" minOccurs="1" maxOccurs="1" />
                <xs:element ref="power" minOccurs="1" maxOccurs="1" />
                <xs:element ref="equal" minOccurs="1" maxOccurs="1" />
                <xs:element ref="contains" minOccurs="1" maxOccurs="1" />
                <xs:element ref="containerSize" minOccurs="1" maxOccurs="1" />
                <xs:element ref="correct" minOccurs="1" maxOccurs="1" />
                <xs:element ref="default" minOccurs="1" maxOccurs="1" />
                <xs:element ref="anyN" minOccurs="1" maxOccurs="1" />
                <xs:element ref="integerDivide" minOccurs="1" maxOccurs="1" />
                <xs:element ref="integerModulus" minOccurs="1" maxOccurs="1" />
                <xs:element ref="isNull" minOccurs="1" maxOccurs="1" />
                <xs:element ref="member" minOccurs="1" maxOccurs="1" />
                <xs:element ref="product" minOccurs="1" maxOccurs="1" />
                <xs:element ref="round" minOccurs="1" maxOccurs="1" />
                <xs:element ref="truncate" minOccurs="1" maxOccurs="1" />
                <xs:element ref="fieldValue" minOccurs="1" maxOccurs="1" />
                <xs:element ref="randomInteger" minOccurs="1" maxOccurs="1" />
                <xs:element ref="randomFloat" minOccurs="1" maxOccurs="1" />
                <xs:element ref="variable" minOccurs="1" maxOccurs="1" />
                <xs:element ref="outcomeMinimum" minOccurs="1" maxOccurs="1" />
                <xs:element ref="outcomeMaximum" minOccurs="1" maxOccurs="1" />
                <xs:element ref="testVariables" minOccurs="1" maxOccurs="1" />
                <xs:element ref="integerToFloat" minOccurs="1" maxOccurs="1" />
                <xs:element ref="inside" minOccurs="1" maxOccurs="1" />
                <xs:element ref="baseValue" minOccurs="1" maxOccurs="1" />
                <xs:element ref="patternMatch" minOccurs="1" maxOccurs="1" />
                <xs:element ref="mapResponsePoint" minOccurs="1" maxOccurs="1" />
                <xs:element ref="mapResponse" minOccurs="1" maxOccurs="1" />
                <xs:element ref="stringMatch" minOccurs="1" maxOccurs="1" />
                <xs:element ref="repeat" minOccurs="1" maxOccurs="1" />
                <xs:element ref="roundTo" minOccurs="1" maxOccurs="1" />
                <xs:element ref="lcm" minOccurs="1" maxOccurs="1" />
                <xs:element ref="gcd" minOccurs="1" maxOccurs="1" />
                <xs:element ref="min" minOccurs="1" maxOccurs="1" />
                <xs:element ref="max" minOccurs="1" maxOccurs="1" />
                <xs:element ref="mathConstant" minOccurs="1" maxOccurs="1" />
                <xs:element ref="statsOperator" minOccurs="1" maxOccurs="1" />
                <xs:element ref="mathOperator" minOccurs="1" maxOccurs="1" />
            </xs:choice>
        </xs:sequence>
    </xs:complexType>

    <xs:complexType name="Logic1toMany.Type" abstract="false" mixed="false">
        <xs:annotation>
            <xs:documentation source="documentation">
                This is the container for the combination of the one or more child expressions (see the E-
                xpressionGroup abstract class for the details on the permitted expressions).
            </xs:documentation>
        </xs:annotation>
        <xs:sequence>
            <xs:choice minOccurs="1" maxOccurs="unbounded">
                <xs:element ref="and" minOccurs="1" maxOccurs="1" />
                <xs:element ref="gt" minOccurs="1" maxOccurs="1" />
                <xs:element ref="not" minOccurs="1" maxOccurs="1" />
                <xs:element ref="lt" minOccurs="1" maxOccurs="1" />
                <xs:element ref="gte" minOccurs="1" maxOccurs="1" />
                <xs:element ref="lte" minOccurs="1" maxOccurs="1" />
                <xs:element ref="or" minOccurs="1" maxOccurs="1" />
                <xs:element ref="sum" minOccurs="1" maxOccurs="1" />
                <xs:element ref="durationLT" minOccurs="1" maxOccurs="1" />
                <xs:element ref="durationGTE" minOccurs="1" maxOccurs="1" />
                <xs:element ref="subtract" minOccurs="1" maxOccurs="1" />
                <xs:element ref="divide" minOccurs="1" maxOccurs="1" />
                <xs:element ref="multiple" minOccurs="1" maxOccurs="1" />
                <xs:element ref="ordered" minOccurs="1" maxOccurs="1" />
                <xs:element ref="customOperator" minOccurs="1" maxOccurs="1" />
                <xs:element ref="random" minOccurs="1" maxOccurs="1" />
                <xs:element ref="numberIncorrect" minOccurs="1" maxOccurs="1" />
                <xs:element ref="numberCorrect" minOccurs="1" maxOccurs="1" />
                <xs:element ref="numberPresented" minOccurs="1" maxOccurs="1" />
                <xs:element ref="numberResponded" minOccurs="1" maxOccurs="1" />
                <xs:element ref="numberSelected" minOccurs="1" maxOccurs="1" />
                <xs:element ref="substring" minOccurs="1" maxOccurs="1" />
                <xs:element ref="equalRounded" minOccurs="1" maxOccurs="1" />
                <xs:element ref="null" minOccurs="1" maxOccurs="1" />
                <xs:element ref="delete" minOccurs="1" maxOccurs="1" />
                <xs:element ref="match" minOccurs="1" maxOccurs="1" />
                <xs:element ref="index" minOccurs="1" maxOccurs="1" />
                <xs:element ref="power" minOccurs="1" maxOccurs="1" />
                <xs:element ref="equal" minOccurs="1" maxOccurs="1" />
                <xs:element ref="contains" minOccurs="1" maxOccurs="1" />
                <xs:element ref="containerSize" minOccurs="1" maxOccurs="1" />
                <xs:element ref="correct" minOccurs="1" maxOccurs="1" />
                <xs:element ref="default" minOccurs="1" maxOccurs="1" />
                <xs:element ref="anyN" minOccurs="1" maxOccurs="1" />
                <xs:element ref="integerDivide" minOccurs="1" maxOccurs="1" />
                <xs:element ref="integerModulus" minOccurs="1" maxOccurs="1" />
                <xs:element ref="isNull" minOccurs="1" maxOccurs="1" />
                <xs:element ref="member" minOccurs="1" maxOccurs="1" />
                <xs:element ref="product" minOccurs="1" maxOccurs="1" />
                <xs:element ref="round" minOccurs="1" maxOccurs="1" />
                <xs:element ref="truncate" minOccurs="1" maxOccurs="1" />
                <xs:element ref="fieldValue" minOccurs="1" maxOccurs="1" />
                <xs:element ref="randomInteger" minOccurs="1" maxOccurs="1" />
                <xs:element ref="randomFloat" minOccurs="1" maxOccurs="1" />
                <xs:element ref="variable" minOccurs="1" maxOccurs="1" />
                <xs:element ref="outcomeMinimum" minOccurs="1" maxOccurs="1" />
                <xs:element ref="outcomeMaximum" minOccurs="1" maxOccurs="1" />
                <xs:element ref="testVariables" minOccurs="1" maxOccurs="1" />
                <xs:element ref="integerToFloat" minOccurs="1" maxOccurs="1" />
                <xs:element ref="inside" minOccurs="1" maxOccurs="1" />
                <xs:element ref="baseValue" minOccurs="1" maxOccurs="1" />
                <xs:element ref="patternMatch" minOccurs="1" maxOccurs="1" />
                <xs:element ref="mapResponsePoint" minOccurs="1" maxOccurs="1" />
                <xs:element ref="mapResponse" minOccurs="1" maxOccurs="1" />
                <xs:element ref="stringMatch" minOccurs="1" maxOccurs="1" />
                <xs:element ref="repeat" minOccurs="1" maxOccurs="1" />
                <xs:element ref="roundTo" minOccurs="1" maxOccurs="1" />
                <xs:element ref="lcm" minOccurs="1" maxOccurs="1" />
                <xs:element ref="gcd" minOccurs="1" maxOccurs="1" />
                <xs:element ref="min" minOccurs="1" maxOccurs="1" />
                <xs:element ref="max" minOccurs="1" maxOccurs="1" />
                <xs:element ref="mathConstant" minOccurs="1" maxOccurs="1" />
                <xs:element ref="statsOperator" minOccurs="1" maxOccurs="1" />
                <xs:element ref="mathOperator" minOccurs="1" maxOccurs="1" />
            </xs:choice>
        </xs:sequence>
    </xs:complexType>

    <xs:complexType name="LogicPair.Type" abstract="false" mixed="false">
        <xs:annotation>
            <xs:documentation source="documentation">
                This is the container for the combination of the two child expressions (see the Expressio-
                nGroup abstract class for the details on the permitted expressions).
            </xs:documentation>
        </xs:annotation>
        <xs:sequence>
            <xs:choice minOccurs="2" maxOccurs="2">
                <xs:element ref="and" minOccurs="1" maxOccurs="1" />
                <xs:element ref="gt" minOccurs="1" maxOccurs="1" />
                <xs:element ref="not" minOccurs="1" maxOccurs="1" />
                <xs:element ref="lt" minOccurs="1" maxOccurs="1" />
                <xs:element ref="gte" minOccurs="1" maxOccurs="1" />
                <xs:element ref="lte" minOccurs="1" maxOccurs="1" />
                <xs:element ref="or" minOccurs="1" maxOccurs="1" />
                <xs:element ref="sum" minOccurs="1" maxOccurs="1" />
                <xs:element ref="durationLT" minOccurs="1" maxOccurs="1" />
                <xs:element ref="durationGTE" minOccurs="1" maxOccurs="1" />
                <xs:element ref="subtract" minOccurs="1" maxOccurs="1" />
                <xs:element ref="divide" minOccurs="1" maxOccurs="1" />
                <xs:element ref="multiple" minOccurs="1" maxOccurs="1" />
                <xs:element ref="ordered" minOccurs="1" maxOccurs="1" />
                <xs:element ref="customOperator" minOccurs="1" maxOccurs="1" />
                <xs:element ref="random" minOccurs="1" maxOccurs="1" />
                <xs:element ref="numberIncorrect" minOccurs="1" maxOccurs="1" />
                <xs:element ref="numberCorrect" minOccurs="1" maxOccurs="1" />
                <xs:element ref="numberPresented" minOccurs="1" maxOccurs="1" />
                <xs:element ref="numberResponded" minOccurs="1" maxOccurs="1" />
                <xs:element ref="numberSelected" minOccurs="1" maxOccurs="1" />
                <xs:element ref="substring" minOccurs="1" maxOccurs="1" />
                <xs:element ref="equalRounded" minOccurs="1" maxOccurs="1" />
                <xs:element ref="null" minOccurs="1" maxOccurs="1" />
                <xs:element ref="delete" minOccurs="1" maxOccurs="1" />
                <xs:element ref="match" minOccurs="1" maxOccurs="1" />
                <xs:element ref="index" minOccurs="1" maxOccurs="1" />
                <xs:element ref="power" minOccurs="1" maxOccurs="1" />
                <xs:element ref="equal" minOccurs="1" maxOccurs="1" />
                <xs:element ref="contains" minOccurs="1" maxOccurs="1" />
                <xs:element ref="containerSize" minOccurs="1" maxOccurs="1" />
                <xs:element ref="correct" minOccurs="1" maxOccurs="1" />
                <xs:element ref="default" minOccurs="1" maxOccurs="1" />
                <xs:element ref="anyN" minOccurs="1" maxOccurs="1" />
                <xs:element ref="integerDivide" minOccurs="1" maxOccurs="1" />
                <xs:element ref="integerModulus" minOccurs="1" maxOccurs="1" />
                <xs:element ref="isNull" minOccurs="1" maxOccurs="1" />
                <xs:element ref="member" minOccurs="1" maxOccurs="1" />
                <xs:element ref="product" minOccurs="1" maxOccurs="1" />
                <xs:element ref="round" minOccurs="1" maxOccurs="1" />
                <xs:element ref="truncate" minOccurs="1" maxOccurs="1" />
                <xs:element ref="fieldValue" minOccurs="1" maxOccurs="1" />
                <xs:element ref="randomInteger" minOccurs="1" maxOccurs="1" />
                <xs:element ref="randomFloat" minOccurs="1" maxOccurs="1" />
                <xs:element ref="variable" minOccurs="1" maxOccurs="1" />
                <xs:element ref="outcomeMinimum" minOccurs="1" maxOccurs="1" />
                <xs:element ref="outcomeMaximum" minOccurs="1" maxOccurs="1" />
                <xs:element ref="testVariables" minOccurs="1" maxOccurs="1" />
                <xs:element ref="integerToFloat" minOccurs="1" maxOccurs="1" />
                <xs:element ref="inside" minOccurs="1" maxOccurs="1" />
                <xs:element ref="baseValue" minOccurs="1" maxOccurs="1" />
                <xs:element ref="patternMatch" minOccurs="1" maxOccurs="1" />
                <xs:element ref="mapResponsePoint" minOccurs="1" maxOccurs="1" />
                <xs:element ref="mapResponse" minOccurs="1" maxOccurs="1" />
                <xs:element ref="stringMatch" minOccurs="1" maxOccurs="1" />
                <xs:element ref="repeat" minOccurs="1" maxOccurs="1" />
                <xs:element ref="roundTo" minOccurs="1" maxOccurs="1" />
                <xs:element ref="lcm" minOccurs="1" maxOccurs="1" />
                <xs:element ref="gcd" minOccurs="1" maxOccurs="1" />
                <xs:element ref="min" minOccurs="1" maxOccurs="1" />
                <xs:element ref="max" minOccurs="1" maxOccurs="1" />
                <xs:element ref="mathConstant" minOccurs="1" maxOccurs="1" />
                <xs:element ref="statsOperator" minOccurs="1" maxOccurs="1" />
                <xs:element ref="mathOperator" minOccurs="1" maxOccurs="1" />
            </xs:choice>
        </xs:sequence>
    </xs:complexType>

    <xs:complexType name="LogicSingle.Type" abstract="false" mixed="false">
        <xs:annotation>
            <xs:documentation source="documentation">
                This is the container for the combination of the single child expression (see the Express-
                ionGroup abstract class for the details on the permitted expressions).
            </xs:documentation>
        </xs:annotation>
        <xs:sequence>
            <xs:choice minOccurs="1" maxOccurs="1">
                <xs:element ref="and" minOccurs="1" maxOccurs="1" />
                <xs:element ref="gt" minOccurs="1" maxOccurs="1" />
                <xs:element ref="not" minOccurs="1" maxOccurs="1" />
                <xs:element ref="lt" minOccurs="1" maxOccurs="1" />
                <xs:element ref="gte" minOccurs="1" maxOccurs="1" />
                <xs:element ref="lte" minOccurs="1" maxOccurs="1" />
                <xs:element ref="or" minOccurs="1" maxOccurs="1" />
                <xs:element ref="sum" minOccurs="1" maxOccurs="1" />
                <xs:element ref="durationLT" minOccurs="1" maxOccurs="1" />
                <xs:element ref="durationGTE" minOccurs="1" maxOccurs="1" />
                <xs:element ref="subtract" minOccurs="1" maxOccurs="1" />
                <xs:element ref="divide" minOccurs="1" maxOccurs="1" />
                <xs:element ref="multiple" minOccurs="1" maxOccurs="1" />
                <xs:element ref="ordered" minOccurs="1" maxOccurs="1" />
                <xs:element ref="customOperator" minOccurs="1" maxOccurs="1" />
                <xs:element ref="random" minOccurs="1" maxOccurs="1" />
                <xs:element ref="numberIncorrect" minOccurs="1" maxOccurs="1" />
                <xs:element ref="numberCorrect" minOccurs="1" maxOccurs="1" />
                <xs:element ref="numberPresented" minOccurs="1" maxOccurs="1" />
                <xs:element ref="numberResponded" minOccurs="1" maxOccurs="1" />
                <xs:element ref="numberSelected" minOccurs="1" maxOccurs="1" />
                <xs:element ref="substring" minOccurs="1" maxOccurs="1" />
                <xs:element ref="equalRounded" minOccurs="1" maxOccurs="1" />
                <xs:element ref="null" minOccurs="1" maxOccurs="1" />
                <xs:element ref="delete" minOccurs="1" maxOccurs="1" />
                <xs:element ref="match" minOccurs="1" maxOccurs="1" />
                <xs:element ref="index" minOccurs="1" maxOccurs="1" />
                <xs:element ref="power" minOccurs="1" maxOccurs="1" />
                <xs:element ref="equal" minOccurs="1" maxOccurs="1" />
                <xs:element ref="contains" minOccurs="1" maxOccurs="1" />
                <xs:element ref="containerSize" minOccurs="1" maxOccurs="1" />
                <xs:element ref="correct" minOccurs="1" maxOccurs="1" />
                <xs:element ref="default" minOccurs="1" maxOccurs="1" />
                <xs:element ref="anyN" minOccurs="1" maxOccurs="1" />
                <xs:element ref="integerDivide" minOccurs="1" maxOccurs="1" />
                <xs:element ref="integerModulus" minOccurs="1" maxOccurs="1" />
                <xs:element ref="isNull" minOccurs="1" maxOccurs="1" />
                <xs:element ref="member" minOccurs="1" maxOccurs="1" />
                <xs:element ref="product" minOccurs="1" maxOccurs="1" />
                <xs:element ref="round" minOccurs="1" maxOccurs="1" />
                <xs:element ref="truncate" minOccurs="1" maxOccurs="1" />
                <xs:element ref="fieldValue" minOccurs="1" maxOccurs="1" />
                <xs:element ref="randomInteger" minOccurs="1" maxOccurs="1" />
                <xs:element ref="randomFloat" minOccurs="1" maxOccurs="1" />
                <xs:element ref="variable" minOccurs="1" maxOccurs="1" />
                <xs:element ref="outcomeMinimum" minOccurs="1" maxOccurs="1" />
                <xs:element ref="outcomeMaximum" minOccurs="1" maxOccurs="1" />
                <xs:element ref="testVariables" minOccurs="1" maxOccurs="1" />
                <xs:element ref="integerToFloat" minOccurs="1" maxOccurs="1" />
                <xs:element ref="inside" minOccurs="1" maxOccurs="1" />
                <xs:element ref="baseValue" minOccurs="1" maxOccurs="1" />
                <xs:element ref="patternMatch" minOccurs="1" maxOccurs="1" />
                <xs:element ref="mapResponsePoint" minOccurs="1" maxOccurs="1" />
                <xs:element ref="mapResponse" minOccurs="1" maxOccurs="1" />
                <xs:element ref="stringMatch" minOccurs="1" maxOccurs="1" />
                <xs:element ref="repeat" minOccurs="1" maxOccurs="1" />
                <xs:element ref="roundTo" minOccurs="1" maxOccurs="1" />
                <xs:element ref="lcm" minOccurs="1" maxOccurs="1" />
                <xs:element ref="gcd" minOccurs="1" maxOccurs="1" />
                <xs:element ref="min" minOccurs="1" maxOccurs="1" />
                <xs:element ref="max" minOccurs="1" maxOccurs="1" />
                <xs:element ref="mathConstant" minOccurs="1" maxOccurs="1" />
                <xs:element ref="statsOperator" minOccurs="1" maxOccurs="1" />
                <xs:element ref="mathOperator" minOccurs="1" maxOccurs="1" />
            </xs:choice>
        </xs:sequence>
    </xs:complexType>

    <xs:complexType name="LookupOutcomeValue.Type" abstract="false" mixed="false">
        <xs:annotation>
            <xs:documentation source="documentation">
                The lookupOutcomeValue rule sets the value of an outcome variable to the value obtained by
                looking up the value of the associated expression in the lookupTable associated with the
                outcome's declaration.
            </xs:documentation>
        </xs:annotation>
        <xs:sequence>
            <xs:choice minOccurs="1" maxOccurs="1">
                <xs:element ref="and" minOccurs="1" maxOccurs="1" />
                <xs:element ref="gt" minOccurs="1" maxOccurs="1" />
                <xs:element ref="not" minOccurs="1" maxOccurs="1" />
                <xs:element ref="lt" minOccurs="1" maxOccurs="1" />
                <xs:element ref="gte" minOccurs="1" maxOccurs="1" />
                <xs:element ref="lte" minOccurs="1" maxOccurs="1" />
                <xs:element ref="or" minOccurs="1" maxOccurs="1" />
                <xs:element ref="sum" minOccurs="1" maxOccurs="1" />
                <xs:element ref="durationLT" minOccurs="1" maxOccurs="1" />
                <xs:element ref="durationGTE" minOccurs="1" maxOccurs="1" />
                <xs:element ref="subtract" minOccurs="1" maxOccurs="1" />
                <xs:element ref="divide" minOccurs="1" maxOccurs="1" />
                <xs:element ref="multiple" minOccurs="1" maxOccurs="1" />
                <xs:element ref="ordered" minOccurs="1" maxOccurs="1" />
                <xs:element ref="customOperator" minOccurs="1" maxOccurs="1" />
                <xs:element ref="random" minOccurs="1" maxOccurs="1" />
                <xs:element ref="numberIncorrect" minOccurs="1" maxOccurs="1" />
                <xs:element ref="numberCorrect" minOccurs="1" maxOccurs="1" />
                <xs:element ref="numberPresented" minOccurs="1" maxOccurs="1" />
                <xs:element ref="numberResponded" minOccurs="1" maxOccurs="1" />
                <xs:element ref="numberSelected" minOccurs="1" maxOccurs="1" />
                <xs:element ref="substring" minOccurs="1" maxOccurs="1" />
                <xs:element ref="equalRounded" minOccurs="1" maxOccurs="1" />
                <xs:element ref="null" minOccurs="1" maxOccurs="1" />
                <xs:element ref="delete" minOccurs="1" maxOccurs="1" />
                <xs:element ref="match" minOccurs="1" maxOccurs="1" />
                <xs:element ref="index" minOccurs="1" maxOccurs="1" />
                <xs:element ref="power" minOccurs="1" maxOccurs="1" />
                <xs:element ref="equal" minOccurs="1" maxOccurs="1" />
                <xs:element ref="contains" minOccurs="1" maxOccurs="1" />
                <xs:element ref="containerSize" minOccurs="1" maxOccurs="1" />
                <xs:element ref="correct" minOccurs="1" maxOccurs="1" />
                <xs:element ref="default" minOccurs="1" maxOccurs="1" />
                <xs:element ref="anyN" minOccurs="1" maxOccurs="1" />
                <xs:element ref="integerDivide" minOccurs="1" maxOccurs="1" />
                <xs:element ref="integerModulus" minOccurs="1" maxOccurs="1" />
                <xs:element ref="isNull" minOccurs="1" maxOccurs="1" />
                <xs:element ref="member" minOccurs="1" maxOccurs="1" />
                <xs:element ref="product" minOccurs="1" maxOccurs="1" />
                <xs:element ref="round" minOccurs="1" maxOccurs="1" />
                <xs:element ref="truncate" minOccurs="1" maxOccurs="1" />
                <xs:element ref="fieldValue" minOccurs="1" maxOccurs="1" />
                <xs:element ref="randomInteger" minOccurs="1" maxOccurs="1" />
                <xs:element ref="randomFloat" minOccurs="1" maxOccurs="1" />
                <xs:element ref="variable" minOccurs="1" maxOccurs="1" />
                <xs:element ref="outcomeMinimum" minOccurs="1" maxOccurs="1" />
                <xs:element ref="outcomeMaximum" minOccurs="1" maxOccurs="1" />
                <xs:element ref="testVariables" minOccurs="1" maxOccurs="1" />
                <xs:element ref="integerToFloat" minOccurs="1" maxOccurs="1" />
                <xs:element ref="inside" minOccurs="1" maxOccurs="1" />
                <xs:element ref="baseValue" minOccurs="1" maxOccurs="1" />
                <xs:element ref="patternMatch" minOccurs="1" maxOccurs="1" />
                <xs:element ref="mapResponsePoint" minOccurs="1" maxOccurs="1" />
                <xs:element ref="mapResponse" minOccurs="1" maxOccurs="1" />
                <xs:element ref="stringMatch" minOccurs="1" maxOccurs="1" />
                <xs:element ref="repeat" minOccurs="1" maxOccurs="1" />
                <xs:element ref="roundTo" minOccurs="1" maxOccurs="1" />
                <xs:element ref="lcm" minOccurs="1" maxOccurs="1" />
                <xs:element ref="gcd" minOccurs="1" maxOccurs="1" />
                <xs:element ref="min" minOccurs="1" maxOccurs="1" />
                <xs:element ref="max" minOccurs="1" maxOccurs="1" />
                <xs:element ref="mathConstant" minOccurs="1" maxOccurs="1" />
                <xs:element ref="statsOperator" minOccurs="1" maxOccurs="1" />
                <xs:element ref="mathOperator" minOccurs="1" maxOccurs="1" />
            </xs:choice>
        </xs:sequence>
        <xs:attributeGroup ref="identifier.LookupOutcomeValue.Attr" />
    </xs:complexType>

    <xs:complexType name="Mapping.Type" abstract="false" mixed="false">
        <xs:annotation>
            <xs:documentation source="documentation">
                A special class used to create a mapping from a source set of any baseType (except file a-
                nd duration) to a single float. Note that mappings from values of base type float should
                be avoided due to the difficulty of matching floating point values, see the match operator
                for more details. When mapping containers the result is the sum of the mapped values from
                the target set. See the MapResponse class for details.
            </xs:documentation>
        </xs:annotation>
        <xs:sequence>
            <xs:element ref="mapEntry" minOccurs="1" maxOccurs="unbounded" />
        </xs:sequence>
        <xs:attributeGroup ref="lowerBound.Mapping.Attr" />
        <xs:attributeGroup ref="upperBound.Mapping.Attr" />
        <xs:attributeGroup ref="defaultValue.Mapping.Attr" />
    </xs:complexType>

    <xs:complexType name="MatchInteraction.Type" abstract="false" mixed="false">
        <xs:annotation>
            <xs:documentation source="documentation">
                A match interaction is a blockInteraction that presents candidates with two sets of choic-
                es and allows them to create associates between pairs of choices in the two sets, but not
                between pairs of choices in the same set. Further restrictions can still be placed on the
                allowable associations using the matchMax characteristic of the choices. The matchInterac-
                tion must be bound to a response variable with base-type directedPair and either single or
                multiple cardinality.
            </xs:documentation>
        </xs:annotation>
        <xs:complexContent>
            <xs:extension base="BasePromptInteraction.Type">
                <xs:sequence>
                    <xs:element ref="qti-simple-match-set" minOccurs="2" maxOccurs="2" />
                </xs:sequence>
                <xs:attributeGroup ref="shuffle.MatchInteraction.Attr" />
                <xs:attributeGroup ref="max-associations.MatchInteraction.Attr" />
                <xs:attributeGroup ref="min-associations.MatchInteraction.Attr" />
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <xs:complexType name="MatchTable.Type" abstract="false" mixed="false">
        <xs:annotation>
            <xs:documentation source="documentation">
                A matchTable transforms a source integer by finding the first matchTableEntry with an exa-
                ct match to the source.
            </xs:documentation>
        </xs:annotation>
        <xs:sequence>
            <xs:element ref="matchTableEntry" minOccurs="1" maxOccurs="unbounded" />
        </xs:sequence>
        <xs:attributeGroup ref="defaultValue.MatchTable.Attr" />
    </xs:complexType>

    <xs:complexType name="MathOperator.Type" abstract="false" mixed="false">
        <xs:annotation>
            <xs:documentation source="documentation">
                The mathOperator operator takes 1 or more sub-expressions which all have single cardinali-
                ty and have numerical base-types. The trigonometric functions, sin, cos and tan, take one
                argument in radians, which evaluates to a single float. Other functions take one numerical
                argument. Further functions might take more than one numerical argument, e.g. atan2 (two
                argument arc tan). The result is a single float, except for the functions signum, floor a-
                nd ceil, which return a single integer. If any of the sub-expressions is NULL, the result
                is NULL. If any of the sub-expressions falls outside the natural domain of the function c-
                alled by mathOperator, e.g. log(0) or asin(2), then the result is NULL.
            </xs:documentation>
        </xs:annotation>
        <xs:sequence>
            <xs:choice minOccurs="1" maxOccurs="unbounded">
                <xs:element ref="and" minOccurs="1" maxOccurs="1" />
                <xs:element ref="gt" minOccurs="1" maxOccurs="1" />
                <xs:element ref="not" minOccurs="1" maxOccurs="1" />
                <xs:element ref="lt" minOccurs="1" maxOccurs="1" />
                <xs:element ref="gte" minOccurs="1" maxOccurs="1" />
                <xs:element ref="lte" minOccurs="1" maxOccurs="1" />
                <xs:element ref="or" minOccurs="1" maxOccurs="1" />
                <xs:element ref="sum" minOccurs="1" maxOccurs="1" />
                <xs:element ref="durationLT" minOccurs="1" maxOccurs="1" />
                <xs:element ref="durationGTE" minOccurs="1" maxOccurs="1" />
                <xs:element ref="subtract" minOccurs="1" maxOccurs="1" />
                <xs:element ref="divide" minOccurs="1" maxOccurs="1" />
                <xs:element ref="multiple" minOccurs="1" maxOccurs="1" />
                <xs:element ref="ordered" minOccurs="1" maxOccurs="1" />
                <xs:element ref="customOperator" minOccurs="1" maxOccurs="1" />
                <xs:element ref="random" minOccurs="1" maxOccurs="1" />
                <xs:element ref="numberIncorrect" minOccurs="1" maxOccurs="1" />
                <xs:element ref="numberCorrect" minOccurs="1" maxOccurs="1" />
                <xs:element ref="numberPresented" minOccurs="1" maxOccurs="1" />
                <xs:element ref="numberResponded" minOccurs="1" maxOccurs="1" />
                <xs:element ref="numberSelected" minOccurs="1" maxOccurs="1" />
                <xs:element ref="substring" minOccurs="1" maxOccurs="1" />
                <xs:element ref="equalRounded" minOccurs="1" maxOccurs="1" />
                <xs:element ref="null" minOccurs="1" maxOccurs="1" />
                <xs:element ref="delete" minOccurs="1" maxOccurs="1" />
                <xs:element ref="match" minOccurs="1" maxOccurs="1" />
                <xs:element ref="index" minOccurs="1" maxOccurs="1" />
                <xs:element ref="power" minOccurs="1" maxOccurs="1" />
                <xs:element ref="equal" minOccurs="1" maxOccurs="1" />
                <xs:element ref="contains" minOccurs="1" maxOccurs="1" />
                <xs:element ref="containerSize" minOccurs="1" maxOccurs="1" />
                <xs:element ref="correct" minOccurs="1" maxOccurs="1" />
                <xs:element ref="default" minOccurs="1" maxOccurs="1" />
                <xs:element ref="anyN" minOccurs="1" maxOccurs="1" />
                <xs:element ref="integerDivide" minOccurs="1" maxOccurs="1" />
                <xs:element ref="integerModulus" minOccurs="1" maxOccurs="1" />
                <xs:element ref="isNull" minOccurs="1" maxOccurs="1" />
                <xs:element ref="member" minOccurs="1" maxOccurs="1" />
                <xs:element ref="product" minOccurs="1" maxOccurs="1" />
                <xs:element ref="round" minOccurs="1" maxOccurs="1" />
                <xs:element ref="truncate" minOccurs="1" maxOccurs="1" />
                <xs:element ref="fieldValue" minOccurs="1" maxOccurs="1" />
                <xs:element ref="randomInteger" minOccurs="1" maxOccurs="1" />
                <xs:element ref="randomFloat" minOccurs="1" maxOccurs="1" />
                <xs:element ref="variable" minOccurs="1" maxOccurs="1" />
                <xs:element ref="outcomeMinimum" minOccurs="1" maxOccurs="1" />
                <xs:element ref="outcomeMaximum" minOccurs="1" maxOccurs="1" />
                <xs:element ref="testVariables" minOccurs="1" maxOccurs="1" />
                <xs:element ref="integerToFloat" minOccurs="1" maxOccurs="1" />
                <xs:element ref="inside" minOccurs="1" maxOccurs="1" />
                <xs:element ref="baseValue" minOccurs="1" maxOccurs="1" />
                <xs:element ref="patternMatch" minOccurs="1" maxOccurs="1" />
                <xs:element ref="mapResponsePoint" minOccurs="1" maxOccurs="1" />
                <xs:element ref="mapResponse" minOccurs="1" maxOccurs="1" />
                <xs:element ref="stringMatch" minOccurs="1" maxOccurs="1" />
                <xs:element ref="repeat" minOccurs="1" maxOccurs="1" />
                <xs:element ref="roundTo" minOccurs="1" maxOccurs="1" />
                <xs:element ref="lcm" minOccurs="1" maxOccurs="1" />
                <xs:element ref="gcd" minOccurs="1" maxOccurs="1" />
                <xs:element ref="min" minOccurs="1" maxOccurs="1" />
                <xs:element ref="max" minOccurs="1" maxOccurs="1" />
                <xs:element ref="mathConstant" minOccurs="1" maxOccurs="1" />
                <xs:element ref="statsOperator" minOccurs="1" maxOccurs="1" />
                <xs:element ref="mathOperator" minOccurs="1" maxOccurs="1" />
            </xs:choice>
        </xs:sequence>
        <xs:attributeGroup ref="name.MathOperator.Attr" />
    </xs:complexType>

    <xs:complexType name="MediaInteraction.Type" abstract="false" mixed="false">
        <xs:annotation>
            <xs:documentation source="documentation">
                The Media Interaction allows more control over the way the candidate interacts with a tim-
                e-based media object and allows the number of times the media object was experienced to be
                reported in the value of the associated response variable, which must be of base-type int-
                eger and single cardinality.
            </xs:documentation>
        </xs:annotation>
        <xs:complexContent>
            <xs:extension base="BasePromptInteraction.Type">
                <xs:choice>
                    <xs:element ref="object" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="audio" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="video" minOccurs="1" maxOccurs="1" />
                </xs:choice>
                <xs:attributeGroup ref="autostart.MediaInteraction.Attr" />
                <xs:attributeGroup ref="min-plays.MediaInteraction.Attr" />
                <xs:attributeGroup ref="max-plays.MediaInteraction.Attr" />
                <xs:attributeGroup ref="loop.MediaInteraction.Attr" />
                <xs:attributeGroup ref="coords.MediaInteraction.Attr" />
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <xs:complexType name="ModalFeedback.Type" abstract="false" mixed="true">
        <xs:annotation>
            <xs:documentation source="documentation">
                Modal feedback is shown to the candidate directly following response processing. The value
                of an outcome variable is used in conjunction with the showHide and identifier characteri-
                stics to determine whether or not the feedback is shown. The content of the modalFeedback
                must not contain any interactions.
            </xs:documentation>
        </xs:annotation>
        <xs:sequence>
            <xs:choice minOccurs="0" maxOccurs="unbounded">
                <xs:element ref="qti-printed-variable" minOccurs="1" maxOccurs="1" />
                <xs:element ref="qti-hottext" minOccurs="1" maxOccurs="1" />
                <xs:element ref="qti-template-inline" minOccurs="1" maxOccurs="1" />
                <xs:element ref="qti-template-block" minOccurs="1" maxOccurs="1" />
                <xs:element ref="m3:math" minOccurs="1" maxOccurs="1" />
                <xs:element ref="xi:include" minOccurs="1" maxOccurs="1" />
                <xs:choice minOccurs="1" maxOccurs="1">
                    <xs:element ref="pre" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="h1" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="h2" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="h3" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="h4" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="h5" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="h6" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="p" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="address" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="dl" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="ol" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="ul" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="br" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="hr" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="img" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="object" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="blockquote" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="em" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="a" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="code" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="span" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="sub" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="acronym" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="big" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="tt" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="kbd" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="q" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="i" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="dfn" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="abbr" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="strong" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="sup" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="var" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="small" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="samp" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="b" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="cite" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="table" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="div" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="bdo" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="bdi" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="figure" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="audio" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="video" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="article" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="aside" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="footer" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="header" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="label" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="nav" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="section" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="ruby" minOccurs="1" maxOccurs="1" />
                    <xs:choice minOccurs="1" maxOccurs="1">
                        <xs:element ref="ssml:p" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="ssml:s" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="ssml:say-as" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="ssml:phoneme" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="ssml:sub" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="ssml:voice" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="ssml:emphasis" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="ssml:break" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="ssml:prosody" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="ssml:mark" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="ssml:audio" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="ssml:speak" minOccurs="1" maxOccurs="1" />
                    </xs:choice>
                </xs:choice>
            </xs:choice>
            <xs:element ref="stylesheet" minOccurs="0" maxOccurs="unbounded" />
        </xs:sequence>
        <xs:attributeGroup ref="outcomeIdentifier.ModalFeedback.Attr" />
        <xs:attributeGroup ref="showHide.ModalFeedback.Attr" />
        <xs:attributeGroup ref="identifier.ModalFeedback.Attr" />
        <xs:attributeGroup ref="title.ModalFeedback.Attr" />
    </xs:complexType>

    <xs:complexType name="NumericLogic1toMany.Type" abstract="false" mixed="false">
        <xs:annotation>
            <xs:documentation source="documentation">
                This is the container for the combination of the one or more child numeric expressions (s-
                ee the NumericExpressionGroup abstract class for the details on the permitted expressions-
                ).
            </xs:documentation>
        </xs:annotation>
        <xs:sequence>
            <xs:choice minOccurs="1" maxOccurs="unbounded">
                <xs:element ref="sum" minOccurs="1" maxOccurs="1" />
                <xs:element ref="subtract" minOccurs="1" maxOccurs="1" />
                <xs:element ref="divide" minOccurs="1" maxOccurs="1" />
                <xs:element ref="multiple" minOccurs="1" maxOccurs="1" />
                <xs:element ref="ordered" minOccurs="1" maxOccurs="1" />
                <xs:element ref="customOperator" minOccurs="1" maxOccurs="1" />
                <xs:element ref="random" minOccurs="1" maxOccurs="1" />
                <xs:element ref="numberIncorrect" minOccurs="1" maxOccurs="1" />
                <xs:element ref="numberCorrect" minOccurs="1" maxOccurs="1" />
                <xs:element ref="numberPresented" minOccurs="1" maxOccurs="1" />
                <xs:element ref="numberResponded" minOccurs="1" maxOccurs="1" />
                <xs:element ref="numberSelected" minOccurs="1" maxOccurs="1" />
                <xs:element ref="null" minOccurs="1" maxOccurs="1" />
                <xs:element ref="delete" minOccurs="1" maxOccurs="1" />
                <xs:element ref="index" minOccurs="1" maxOccurs="1" />
                <xs:element ref="power" minOccurs="1" maxOccurs="1" />
                <xs:element ref="containerSize" minOccurs="1" maxOccurs="1" />
                <xs:element ref="correct" minOccurs="1" maxOccurs="1" />
                <xs:element ref="default" minOccurs="1" maxOccurs="1" />
                <xs:element ref="integerDivide" minOccurs="1" maxOccurs="1" />
                <xs:element ref="integerModulus" minOccurs="1" maxOccurs="1" />
                <xs:element ref="product" minOccurs="1" maxOccurs="1" />
                <xs:element ref="round" minOccurs="1" maxOccurs="1" />
                <xs:element ref="truncate" minOccurs="1" maxOccurs="1" />
                <xs:element ref="fieldValue" minOccurs="1" maxOccurs="1" />
                <xs:element ref="randomInteger" minOccurs="1" maxOccurs="1" />
                <xs:element ref="variable" minOccurs="1" maxOccurs="1" />
                <xs:element ref="outcomeMinimum" minOccurs="1" maxOccurs="1" />
                <xs:element ref="outcomeMaximum" minOccurs="1" maxOccurs="1" />
                <xs:element ref="testVariables" minOccurs="1" maxOccurs="1" />
                <xs:element ref="integerToFloat" minOccurs="1" maxOccurs="1" />
                <xs:element ref="baseValue" minOccurs="1" maxOccurs="1" />
                <xs:element ref="mapResponsePoint" minOccurs="1" maxOccurs="1" />
                <xs:element ref="mapResponse" minOccurs="1" maxOccurs="1" />
                <xs:element ref="repeat" minOccurs="1" maxOccurs="1" />
                <xs:element ref="roundTo" minOccurs="1" maxOccurs="1" />
                <xs:element ref="lcm" minOccurs="1" maxOccurs="1" />
                <xs:element ref="gcd" minOccurs="1" maxOccurs="1" />
                <xs:element ref="min" minOccurs="1" maxOccurs="1" />
                <xs:element ref="max" minOccurs="1" maxOccurs="1" />
                <xs:element ref="mathConstant" minOccurs="1" maxOccurs="1" />
                <xs:element ref="statsOperator" minOccurs="1" maxOccurs="1" />
                <xs:element ref="mathOperator" minOccurs="1" maxOccurs="1" />
                <xs:element ref="randomFloat" minOccurs="1" maxOccurs="1" />
            </xs:choice>
        </xs:sequence>
    </xs:complexType>

    <xs:complexType name="Object.Type" abstract="false" mixed="true">
        <xs:annotation>
            <xs:documentation source="documentation">
                This is the representation for the HTML 'object' tag.
            </xs:documentation>
        </xs:annotation>
        <xs:complexContent>
            <xs:extension base="BaseSequenceXBase.Type">
                <xs:sequence>
                    <xs:choice minOccurs="0" maxOccurs="unbounded">
                        <xs:element ref="m3:math" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="xi:include" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="param" minOccurs="1" maxOccurs="1" />
                        <xs:choice minOccurs="1" maxOccurs="1">
                            <xs:element ref="pre" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="h1" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="h2" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="h3" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="h4" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="h5" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="h6" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="p" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="address" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="dl" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="ol" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="ul" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="br" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="hr" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="img" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="object" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="blockquote" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="em" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="a" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="code" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="span" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="sub" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="acronym" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="big" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="tt" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="kbd" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="q" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="i" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="dfn" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="abbr" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="strong" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="sup" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="var" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="small" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="samp" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="b" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="cite" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="table" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="div" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="bdo" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="bdi" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="figure" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="audio" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="video" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="article" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="aside" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="footer" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="header" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="label" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="nav" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="section" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="ruby" minOccurs="1" maxOccurs="1" />
                            <xs:choice minOccurs="1" maxOccurs="1">
                                <xs:element ref="ssml:p" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="ssml:s" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="ssml:say-as" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="ssml:phoneme" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="ssml:sub" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="ssml:voice" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="ssml:emphasis" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="ssml:break" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="ssml:prosody" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="ssml:mark" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="ssml:audio" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="ssml:speak" minOccurs="1" maxOccurs="1" />
                            </xs:choice>
                        </xs:choice>
                    </xs:choice>
                </xs:sequence>
                <xs:attributeGroup ref="data.Object.Attr" />
                <xs:attributeGroup ref="type.Object.Attr" />
                <xs:attributeGroup ref="width.Object.Attr" />
                <xs:attributeGroup ref="height.Object.Attr" />
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <xs:complexType name="OrderInteraction.Type" abstract="false" mixed="false">
        <xs:annotation>
            <xs:documentation source="documentation">
                In an Order Interaction the candidate's task is to reorder the choices, the order in which
                the choices are displayed initially is significant. By default the candidate's task is to
                order all of the choices but a subset of the choices can be requested using the maxChoices
                and minChoices attributes. When specified the candidate must select a subset of the choic-
                es and impose an ordering on them.
            </xs:documentation>
        </xs:annotation>
        <xs:complexContent>
            <xs:extension base="BasePromptInteraction.Type">
                <xs:sequence>
                    <xs:element ref="qti-simple-choice" minOccurs="1" maxOccurs="unbounded" />
                </xs:sequence>
                <xs:attributeGroup ref="shuffle.OrderInteraction.Attr" />
                <xs:attributeGroup ref="min-choices.OrderInteraction.Attr" />
                <xs:attributeGroup ref="max-choices.OrderInteraction.Attr" />
                <xs:attributeGroup ref="orientation.OrderInteraction.Attr" />
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <xs:complexType name="OUL.Type" abstract="false" mixed="false">
        <xs:annotation>
            <xs:documentation source="documentation">
                Provides the HTML 'ol' and 'ul' tag functionalities. These provide the ordered and unorde-
                red list capability. The 'ol' tag represents a list of items, where the items have been i-
                ntentionally ordered, such that changing the order would change the meaning of the docume-
                nt. The 'ul' tags have no expicit order relationship. The items of the list are the 'li'
                child nodes.
            </xs:documentation>
        </xs:annotation>
        <xs:complexContent>
            <xs:extension base="BaseSequenceXBase.Type">
                <xs:sequence>
                    <xs:element ref="li" minOccurs="0" maxOccurs="unbounded" />
                </xs:sequence>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <xs:complexType name="OutcomeCondition.Type" abstract="false" mixed="false">
        <xs:annotation>
            <xs:documentation source="documentation">
                This enables the 'If..Then..Else' rules to be defined for the outcome processing. If the
                expression given in a outcomeIf or outcomeElseIf evaluates to 'true' then the sub-rules c-
                ontained within it are followed and any following outcomeElseIf or outcomeElse parts are
                ignored for this outcome condition. If the expression given in a outcomeIf or outcomeElse-
                If does not evaluate to 'true' then consideration passes to the next outcomeElseIf or, if
                there are no more outcomeElseIf parts then the sub-rules of the outcomeElse are followed
                (if specified).
            </xs:documentation>
        </xs:annotation>
        <xs:sequence>
            <xs:element ref="outcomeIf" minOccurs="1" maxOccurs="1" />
            <xs:element ref="outcomeElseIf" minOccurs="0" maxOccurs="unbounded" />
            <xs:element ref="outcomeElse" minOccurs="0" maxOccurs="1" />
        </xs:sequence>
    </xs:complexType>

    <xs:complexType name="OutcomeDeclaration.Type" abstract="false" mixed="false">
        <xs:annotation>
            <xs:documentation source="documentation">
                Outcome variables are declared by outcome declarations. Their value is set either from a
                default given in the declaration itself or by a responseRule during responseProcessing. I-
                tems that declare a numeric outcome variable representing the candidate's overall perform-
                ance on the item should use the outcome name 'SCORE' for the variable. SCORE needs to be a
                float. Items that declare a maximum score (in multiple response choice interactions, for
                example) should do so by declaring the 'MAXSCORE' variable. MAXSCORE needs to be a float.
                Items or tests that want to make the fact that the candidate scored above a predefined tr-
                eshold available as a variable should use the 'PASSED' variable. PASSED needs to be a boo-
                lean. At runtime, outcome variables are instantiated as part of an item session. Their va-
                lues may be initialized with a default value and/or set during responseProcessing. If no
                default value is given in the declaration then the outcome variable is initialized to NULL
                unless the outcome is of a numeric type (integer or float) in which case it is initialized
                to 0. Declared outcomes with numeric types should indicate their range of possible values
                using normalMaximum and normalMinimum, especially if this range differs from [0,1].
            </xs:documentation>
        </xs:annotation>
        <xs:sequence>
            <xs:element ref="defaultValue" minOccurs="0" maxOccurs="1" />
            <xs:choice minOccurs="0" maxOccurs="1">
                <xs:element ref="matchTable" minOccurs="1" maxOccurs="1" />
                <xs:element ref="interpolationTable" minOccurs="1" maxOccurs="1" />
            </xs:choice>
        </xs:sequence>
        <xs:attributeGroup ref="identifier.OutcomeDeclaration.Attr" />
        <xs:attributeGroup ref="cardinality.OutcomeDeclaration.Attr" />
        <xs:attributeGroup ref="baseType.OutcomeDeclaration.Attr" />
        <xs:attributeGroup ref="view.OutcomeDeclaration.Attr" />
        <xs:attributeGroup ref="interpretation.OutcomeDeclaration.Attr" />
        <xs:attributeGroup ref="longInterpretation.OutcomeDeclaration.Attr" />
        <xs:attributeGroup ref="normalMaximum.OutcomeDeclaration.Attr" />
        <xs:attributeGroup ref="normalMinimum.OutcomeDeclaration.Attr" />
        <xs:attributeGroup ref="masteryValue.OutcomeDeclaration.Attr" />
        <xs:attributeGroup ref="externalScored.OutcomeDeclaration.Attr" />
        <xs:attributeGroup ref="variableIdentifierRef.OutcomeDeclaration.Attr" />
    </xs:complexType>

    <xs:complexType name="OutcomeElse.Type" abstract="false" mixed="false">
        <xs:annotation>
            <xs:documentation source="documentation">
                This provides the else part of the 'if..then..elseif..else' structure for outcomes proces-
                sing.
            </xs:documentation>
        </xs:annotation>
        <xs:sequence>
            <xs:choice minOccurs="0" maxOccurs="unbounded">
                <xs:element ref="lookupOutcomeValue" minOccurs="1" maxOccurs="1" />
                <xs:element ref="outcomeProcessingFragment" minOccurs="1" maxOccurs="1" />
                <xs:element ref="setOutcomeValue" minOccurs="1" maxOccurs="1" />
                <xs:element ref="xi:include" minOccurs="1" maxOccurs="1" />
                <xs:element ref="exitTest" minOccurs="1" maxOccurs="1" />
                <xs:element ref="outcomeCondition" minOccurs="1" maxOccurs="1" />
            </xs:choice>
        </xs:sequence>
    </xs:complexType>

    <xs:complexType name="OutcomeIf.Type" abstract="false" mixed="false">
        <xs:annotation>
            <xs:documentation source="documentation">
                An outcomeIf part consists of an expression which must have an effective baseType of bool-
                ean and single cardinality. For more information about the runtime data model employed see
                Expressions (Section 2). It also contains a set of sub-rules. If the expression is true t-
                hen the sub-rules are processed, otherwise they are skipped (including if the expression
                is NULL) and the following outcomeElseIf or outcomeElse parts (if any) are considered ins-
                tead.
            </xs:documentation>
        </xs:annotation>
        <xs:sequence>
            <xs:choice minOccurs="1" maxOccurs="1">
                <xs:element ref="and" minOccurs="1" maxOccurs="1" />
                <xs:element ref="gt" minOccurs="1" maxOccurs="1" />
                <xs:element ref="not" minOccurs="1" maxOccurs="1" />
                <xs:element ref="lt" minOccurs="1" maxOccurs="1" />
                <xs:element ref="gte" minOccurs="1" maxOccurs="1" />
                <xs:element ref="lte" minOccurs="1" maxOccurs="1" />
                <xs:element ref="or" minOccurs="1" maxOccurs="1" />
                <xs:element ref="sum" minOccurs="1" maxOccurs="1" />
                <xs:element ref="durationLT" minOccurs="1" maxOccurs="1" />
                <xs:element ref="durationGTE" minOccurs="1" maxOccurs="1" />
                <xs:element ref="subtract" minOccurs="1" maxOccurs="1" />
                <xs:element ref="divide" minOccurs="1" maxOccurs="1" />
                <xs:element ref="multiple" minOccurs="1" maxOccurs="1" />
                <xs:element ref="ordered" minOccurs="1" maxOccurs="1" />
                <xs:element ref="customOperator" minOccurs="1" maxOccurs="1" />
                <xs:element ref="random" minOccurs="1" maxOccurs="1" />
                <xs:element ref="numberIncorrect" minOccurs="1" maxOccurs="1" />
                <xs:element ref="numberCorrect" minOccurs="1" maxOccurs="1" />
                <xs:element ref="numberPresented" minOccurs="1" maxOccurs="1" />
                <xs:element ref="numberResponded" minOccurs="1" maxOccurs="1" />
                <xs:element ref="numberSelected" minOccurs="1" maxOccurs="1" />
                <xs:element ref="substring" minOccurs="1" maxOccurs="1" />
                <xs:element ref="equalRounded" minOccurs="1" maxOccurs="1" />
                <xs:element ref="null" minOccurs="1" maxOccurs="1" />
                <xs:element ref="delete" minOccurs="1" maxOccurs="1" />
                <xs:element ref="match" minOccurs="1" maxOccurs="1" />
                <xs:element ref="index" minOccurs="1" maxOccurs="1" />
                <xs:element ref="power" minOccurs="1" maxOccurs="1" />
                <xs:element ref="equal" minOccurs="1" maxOccurs="1" />
                <xs:element ref="contains" minOccurs="1" maxOccurs="1" />
                <xs:element ref="containerSize" minOccurs="1" maxOccurs="1" />
                <xs:element ref="correct" minOccurs="1" maxOccurs="1" />
                <xs:element ref="default" minOccurs="1" maxOccurs="1" />
                <xs:element ref="anyN" minOccurs="1" maxOccurs="1" />
                <xs:element ref="integerDivide" minOccurs="1" maxOccurs="1" />
                <xs:element ref="integerModulus" minOccurs="1" maxOccurs="1" />
                <xs:element ref="isNull" minOccurs="1" maxOccurs="1" />
                <xs:element ref="member" minOccurs="1" maxOccurs="1" />
                <xs:element ref="product" minOccurs="1" maxOccurs="1" />
                <xs:element ref="round" minOccurs="1" maxOccurs="1" />
                <xs:element ref="truncate" minOccurs="1" maxOccurs="1" />
                <xs:element ref="fieldValue" minOccurs="1" maxOccurs="1" />
                <xs:element ref="randomInteger" minOccurs="1" maxOccurs="1" />
                <xs:element ref="randomFloat" minOccurs="1" maxOccurs="1" />
                <xs:element ref="variable" minOccurs="1" maxOccurs="1" />
                <xs:element ref="outcomeMinimum" minOccurs="1" maxOccurs="1" />
                <xs:element ref="outcomeMaximum" minOccurs="1" maxOccurs="1" />
                <xs:element ref="testVariables" minOccurs="1" maxOccurs="1" />
                <xs:element ref="integerToFloat" minOccurs="1" maxOccurs="1" />
                <xs:element ref="inside" minOccurs="1" maxOccurs="1" />
                <xs:element ref="baseValue" minOccurs="1" maxOccurs="1" />
                <xs:element ref="patternMatch" minOccurs="1" maxOccurs="1" />
                <xs:element ref="mapResponsePoint" minOccurs="1" maxOccurs="1" />
                <xs:element ref="mapResponse" minOccurs="1" maxOccurs="1" />
                <xs:element ref="stringMatch" minOccurs="1" maxOccurs="1" />
                <xs:element ref="repeat" minOccurs="1" maxOccurs="1" />
                <xs:element ref="roundTo" minOccurs="1" maxOccurs="1" />
                <xs:element ref="lcm" minOccurs="1" maxOccurs="1" />
                <xs:element ref="gcd" minOccurs="1" maxOccurs="1" />
                <xs:element ref="min" minOccurs="1" maxOccurs="1" />
                <xs:element ref="max" minOccurs="1" maxOccurs="1" />
                <xs:element ref="mathConstant" minOccurs="1" maxOccurs="1" />
                <xs:element ref="statsOperator" minOccurs="1" maxOccurs="1" />
                <xs:element ref="mathOperator" minOccurs="1" maxOccurs="1" />
            </xs:choice>
            <xs:choice minOccurs="0" maxOccurs="unbounded">
                <xs:element ref="lookupOutcomeValue" minOccurs="1" maxOccurs="1" />
                <xs:element ref="outcomeProcessingFragment" minOccurs="1" maxOccurs="1" />
                <xs:element ref="setOutcomeValue" minOccurs="1" maxOccurs="1" />
                <xs:element ref="xi:include" minOccurs="1" maxOccurs="1" />
                <xs:element ref="exitTest" minOccurs="1" maxOccurs="1" />
                <xs:element ref="outcomeCondition" minOccurs="1" maxOccurs="1" />
            </xs:choice>
        </xs:sequence>
    </xs:complexType>

    <xs:complexType name="OutcomeProcessing.Type" abstract="false" mixed="false">
        <xs:annotation>
            <xs:documentation source="documentation">
                Outcome processing takes place each time the candidate submits the responses for an item
                (when in individual submission mode) or a group of items (when in simultaneous submission
                mode). It happens after any (item level) response processing triggered by the submission.
                The values of the test's outcome variables are always reset to their defaults prior to ca-
                rrying out the instructions described by the outcomeRules. Because outcome processing hap-
                pens each time the candidate submits responses the resulting values of the test-level out-
                comes may be used to activate test-level feedback during the test or to control the behav-
                iour of subsequent parts through the use of preConditions and branchRules. The structure
                of outcome processing is similar to that or responseProcessing.
            </xs:documentation>
        </xs:annotation>
        <xs:sequence>
            <xs:choice minOccurs="0" maxOccurs="unbounded">
                <xs:element ref="lookupOutcomeValue" minOccurs="1" maxOccurs="1" />
                <xs:element ref="outcomeProcessingFragment" minOccurs="1" maxOccurs="1" />
                <xs:element ref="setOutcomeValue" minOccurs="1" maxOccurs="1" />
                <xs:element ref="xi:include" minOccurs="1" maxOccurs="1" />
                <xs:element ref="exitTest" minOccurs="1" maxOccurs="1" />
                <xs:element ref="outcomeCondition" minOccurs="1" maxOccurs="1" />
            </xs:choice>
        </xs:sequence>
    </xs:complexType>

    <xs:complexType name="OutcomeProcessingFragment.Type" abstract="false" mixed="false">
        <xs:annotation>
            <xs:documentation source="documentation">
                An outcomeProcessingFragment is a simple group of outcomeRules which are grouped together
                in order to allow them to be managed as a separate resource. It should not be used for any
                other purpose.
            </xs:documentation>
        </xs:annotation>
        <xs:sequence>
            <xs:choice minOccurs="0" maxOccurs="unbounded">
                <xs:element ref="lookupOutcomeValue" minOccurs="1" maxOccurs="1" />
                <xs:element ref="outcomeProcessingFragment" minOccurs="1" maxOccurs="1" />
                <xs:element ref="setOutcomeValue" minOccurs="1" maxOccurs="1" />
                <xs:element ref="xi:include" minOccurs="1" maxOccurs="1" />
                <xs:element ref="exitTest" minOccurs="1" maxOccurs="1" />
                <xs:element ref="outcomeCondition" minOccurs="1" maxOccurs="1" />
            </xs:choice>
        </xs:sequence>
    </xs:complexType>

    <xs:complexType name="PatternMatch.Type" abstract="false" mixed="false">
        <xs:annotation>
            <xs:documentation source="documentation">
                The patternMatch operator takes a sub-expression which must have single cardinality and a
                base-type of string. The result is a single boolean with a value of 'true' if the sub-exp-
                ression matches the regular expression given by pattern and 'false' if it does not. If the
                sub-expression is NULL then the operator results in NULL.
            </xs:documentation>
        </xs:annotation>
        <xs:sequence>
            <xs:choice minOccurs="1" maxOccurs="1">
                <xs:element ref="and" minOccurs="1" maxOccurs="1" />
                <xs:element ref="gt" minOccurs="1" maxOccurs="1" />
                <xs:element ref="not" minOccurs="1" maxOccurs="1" />
                <xs:element ref="lt" minOccurs="1" maxOccurs="1" />
                <xs:element ref="gte" minOccurs="1" maxOccurs="1" />
                <xs:element ref="lte" minOccurs="1" maxOccurs="1" />
                <xs:element ref="or" minOccurs="1" maxOccurs="1" />
                <xs:element ref="sum" minOccurs="1" maxOccurs="1" />
                <xs:element ref="durationLT" minOccurs="1" maxOccurs="1" />
                <xs:element ref="durationGTE" minOccurs="1" maxOccurs="1" />
                <xs:element ref="subtract" minOccurs="1" maxOccurs="1" />
                <xs:element ref="divide" minOccurs="1" maxOccurs="1" />
                <xs:element ref="multiple" minOccurs="1" maxOccurs="1" />
                <xs:element ref="ordered" minOccurs="1" maxOccurs="1" />
                <xs:element ref="customOperator" minOccurs="1" maxOccurs="1" />
                <xs:element ref="random" minOccurs="1" maxOccurs="1" />
                <xs:element ref="numberIncorrect" minOccurs="1" maxOccurs="1" />
                <xs:element ref="numberCorrect" minOccurs="1" maxOccurs="1" />
                <xs:element ref="numberPresented" minOccurs="1" maxOccurs="1" />
                <xs:element ref="numberResponded" minOccurs="1" maxOccurs="1" />
                <xs:element ref="numberSelected" minOccurs="1" maxOccurs="1" />
                <xs:element ref="substring" minOccurs="1" maxOccurs="1" />
                <xs:element ref="equalRounded" minOccurs="1" maxOccurs="1" />
                <xs:element ref="null" minOccurs="1" maxOccurs="1" />
                <xs:element ref="delete" minOccurs="1" maxOccurs="1" />
                <xs:element ref="match" minOccurs="1" maxOccurs="1" />
                <xs:element ref="index" minOccurs="1" maxOccurs="1" />
                <xs:element ref="power" minOccurs="1" maxOccurs="1" />
                <xs:element ref="equal" minOccurs="1" maxOccurs="1" />
                <xs:element ref="contains" minOccurs="1" maxOccurs="1" />
                <xs:element ref="containerSize" minOccurs="1" maxOccurs="1" />
                <xs:element ref="correct" minOccurs="1" maxOccurs="1" />
                <xs:element ref="default" minOccurs="1" maxOccurs="1" />
                <xs:element ref="anyN" minOccurs="1" maxOccurs="1" />
                <xs:element ref="integerDivide" minOccurs="1" maxOccurs="1" />
                <xs:element ref="integerModulus" minOccurs="1" maxOccurs="1" />
                <xs:element ref="isNull" minOccurs="1" maxOccurs="1" />
                <xs:element ref="member" minOccurs="1" maxOccurs="1" />
                <xs:element ref="product" minOccurs="1" maxOccurs="1" />
                <xs:element ref="round" minOccurs="1" maxOccurs="1" />
                <xs:element ref="truncate" minOccurs="1" maxOccurs="1" />
                <xs:element ref="fieldValue" minOccurs="1" maxOccurs="1" />
                <xs:element ref="randomInteger" minOccurs="1" maxOccurs="1" />
                <xs:element ref="randomFloat" minOccurs="1" maxOccurs="1" />
                <xs:element ref="variable" minOccurs="1" maxOccurs="1" />
                <xs:element ref="outcomeMinimum" minOccurs="1" maxOccurs="1" />
                <xs:element ref="outcomeMaximum" minOccurs="1" maxOccurs="1" />
                <xs:element ref="testVariables" minOccurs="1" maxOccurs="1" />
                <xs:element ref="integerToFloat" minOccurs="1" maxOccurs="1" />
                <xs:element ref="inside" minOccurs="1" maxOccurs="1" />
                <xs:element ref="baseValue" minOccurs="1" maxOccurs="1" />
                <xs:element ref="patternMatch" minOccurs="1" maxOccurs="1" />
                <xs:element ref="mapResponsePoint" minOccurs="1" maxOccurs="1" />
                <xs:element ref="mapResponse" minOccurs="1" maxOccurs="1" />
                <xs:element ref="stringMatch" minOccurs="1" maxOccurs="1" />
                <xs:element ref="repeat" minOccurs="1" maxOccurs="1" />
                <xs:element ref="roundTo" minOccurs="1" maxOccurs="1" />
                <xs:element ref="lcm" minOccurs="1" maxOccurs="1" />
                <xs:element ref="gcd" minOccurs="1" maxOccurs="1" />
                <xs:element ref="min" minOccurs="1" maxOccurs="1" />
                <xs:element ref="max" minOccurs="1" maxOccurs="1" />
                <xs:element ref="mathConstant" minOccurs="1" maxOccurs="1" />
                <xs:element ref="statsOperator" minOccurs="1" maxOccurs="1" />
                <xs:element ref="mathOperator" minOccurs="1" maxOccurs="1" />
            </xs:choice>
        </xs:sequence>
        <xs:attributeGroup ref="pattern.PatternMatch.Attr" />
    </xs:complexType>

    <xs:complexType name="PositionObjectInteraction.Type" abstract="false" mixed="false">
        <xs:annotation>
            <xs:documentation source="documentation">
                The position object interaction consists of a single image which must be positioned on an-
                other graphic image (the stage) by the candidate. Like selectPointInteraction, the associ-
                ated response may have an areaMapping that scores the response on the basis of comparing
                it against predefined areas but the delivery engine must not indicate these areas of the
                stage. Only the actual position(s) selected by the candidate shall be indicated. The posi-
                tion object interaction must be bound to a response variable with a baseType of point and
                single or multiple cardinality. The point records the coordinates, with respect to the st-
                age, of the centre point of the image being positioned.
            </xs:documentation>
        </xs:annotation>
        <xs:complexContent>
            <xs:extension base="BaseSequenceRIdent.Type">
                <xs:sequence>
                    <xs:element ref="object" minOccurs="1" maxOccurs="1" />
                </xs:sequence>
                <xs:attributeGroup ref="center-point.PositionObjectInteraction.Attr" />
                <xs:attributeGroup ref="min-choices.PositionObjectInteraction.Attr" />
                <xs:attributeGroup ref="max-choices.PositionObjectInteraction.Attr" />
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <xs:complexType name="PositionObjectStage.Type" abstract="false" mixed="false">
        <xs:annotation>
            <xs:documentation source="documentation">
                This is the content frame for the positionObjectInteraction(s).
            </xs:documentation>
        </xs:annotation>
        <xs:sequence>
            <xs:element ref="object" minOccurs="1" maxOccurs="1" />
            <xs:element ref="qti-position-object-interaction" minOccurs="1" maxOccurs="unbounded" />
        </xs:sequence>
        <xs:attributeGroup ref="id.PositionObjectStage.Attr" />
    </xs:complexType>

    <xs:complexType name="Prompt.Type" abstract="false" mixed="true">
        <xs:annotation>
            <xs:documentation source="documentation">
                This enables an author to define the prompt for the question.  The way in which the prompt
                is displayed depends upon the rendering system. The prompt should not be used to contain
                the actual root of the question.
            </xs:documentation>
        </xs:annotation>
        <xs:complexContent>
            <xs:extension base="BaseSequence.Type">
                <xs:sequence>
                    <xs:choice minOccurs="0" maxOccurs="unbounded">
                        <xs:element ref="m3:math" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="xi:include" minOccurs="1" maxOccurs="1" />
                        <xs:choice minOccurs="1" maxOccurs="1">
                            <xs:element ref="pre" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="h1" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="h2" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="h3" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="h4" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="h5" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="h6" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="p" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="address" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="dl" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="ol" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="ul" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="br" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="hr" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="img" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="object" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="blockquote" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="em" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="a" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="code" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="span" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="sub" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="acronym" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="big" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="tt" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="kbd" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="q" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="i" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="dfn" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="abbr" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="strong" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="sup" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="var" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="small" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="samp" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="b" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="cite" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="table" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="div" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="bdo" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="bdi" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="figure" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="audio" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="video" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="article" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="aside" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="footer" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="header" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="label" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="nav" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="section" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="ruby" minOccurs="1" maxOccurs="1" />
                            <xs:choice minOccurs="1" maxOccurs="1">
                                <xs:element ref="ssml:p" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="ssml:s" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="ssml:say-as" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="ssml:phoneme" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="ssml:sub" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="ssml:voice" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="ssml:emphasis" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="ssml:break" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="ssml:prosody" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="ssml:mark" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="ssml:audio" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="ssml:speak" minOccurs="1" maxOccurs="1" />
                            </xs:choice>
                        </xs:choice>
                    </xs:choice>
                </xs:sequence>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <xs:complexType name="Q.Type" abstract="false" mixed="true">
        <xs:annotation>
            <xs:documentation source="documentation">
                This provides the content definition for the HTML 'q' tag.  The q element represents some
                phrasing content quoted from another source. Quotation punctuation (such as quotation mar-
                ks) that is quoting the contents of the tag must not appear immediately before, after, or
                inside q tags; they will be inserted into the rendering by the user agent. Content inside
                a 'q' tag must be quoted from another source, whose address, if it has one, may be cited
                in the cite attribute. The source may be fictional, as when quoting characters in a novel
                or screenplay.  The 'q' tag must not be used in place of quotation marks that do not repr-
                esent quotes; for example, it is inappropriate to use the q element for marking up sarcas-
                tic statements. The use of 'q' tags to mark up quotations is entirely optional; using exp-
                licit quotation punctuation without 'q' tags is just as correct.
            </xs:documentation>
        </xs:annotation>
        <xs:complexContent>
            <xs:extension base="BaseSequenceXBase.Type">
                <xs:sequence>
                    <xs:choice minOccurs="0" maxOccurs="unbounded">
                        <xs:element ref="qti-text-entry-interaction" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="qti-hottext" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="qti-printed-variable" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="qti-gap" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="qti-feedback-inline" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="qti-template-inline" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="qti-inline-choice-interaction" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="qti-end-attempt-interaction" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="qti-custom-interaction" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="m3:math" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="xi:include" minOccurs="1" maxOccurs="1" />
                        <xs:choice minOccurs="1" maxOccurs="1">
                            <xs:element ref="img" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="br" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="object" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="em" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="a" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="code" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="span" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="sub" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="acronym" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="big" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="tt" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="kbd" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="q" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="i" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="dfn" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="abbr" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="strong" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="sup" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="var" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="small" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="samp" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="b" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="cite" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="bdo" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="bdi" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="label" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="ruby" minOccurs="1" maxOccurs="1" />
                            <xs:choice minOccurs="1" maxOccurs="1">
                                <xs:element ref="ssml:p" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="ssml:s" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="ssml:say-as" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="ssml:phoneme" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="ssml:sub" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="ssml:voice" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="ssml:emphasis" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="ssml:break" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="ssml:prosody" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="ssml:mark" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="ssml:audio" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="ssml:speak" minOccurs="1" maxOccurs="1" />
                            </xs:choice>
                        </xs:choice>
                    </xs:choice>
                </xs:sequence>
                <xs:attributeGroup ref="cite.Q.Attr" />
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <xs:complexType name="Repeat.Type" abstract="false" mixed="false">
        <xs:annotation>
            <xs:documentation source="documentation">
                This is a QTI expression function. The repeat operator takes one or more sub-expressions,
                all of which must have either single or ordered cardinality and the same baseType. The re-
                sult is an ordered container having the same baseType as its sub-expressions. The contain-
                er is filled sequentially by evaluating each sub-expression in turn and adding the result-
                ing single values to the container, iterating this process numberRepeats times in total.
                If numberRepeats refers to a variable whose value is less than 1, the value of the whole
                expression is NULL. Any sub-expressions evaluating to NULL are ignored. If all sub-expres-
                sions are NULL then the result is NULL.
            </xs:documentation>
        </xs:annotation>
        <xs:sequence>
            <xs:choice minOccurs="1" maxOccurs="unbounded">
                <xs:element ref="and" minOccurs="1" maxOccurs="1" />
                <xs:element ref="gt" minOccurs="1" maxOccurs="1" />
                <xs:element ref="not" minOccurs="1" maxOccurs="1" />
                <xs:element ref="lt" minOccurs="1" maxOccurs="1" />
                <xs:element ref="gte" minOccurs="1" maxOccurs="1" />
                <xs:element ref="lte" minOccurs="1" maxOccurs="1" />
                <xs:element ref="or" minOccurs="1" maxOccurs="1" />
                <xs:element ref="sum" minOccurs="1" maxOccurs="1" />
                <xs:element ref="durationLT" minOccurs="1" maxOccurs="1" />
                <xs:element ref="durationGTE" minOccurs="1" maxOccurs="1" />
                <xs:element ref="subtract" minOccurs="1" maxOccurs="1" />
                <xs:element ref="divide" minOccurs="1" maxOccurs="1" />
                <xs:element ref="multiple" minOccurs="1" maxOccurs="1" />
                <xs:element ref="ordered" minOccurs="1" maxOccurs="1" />
                <xs:element ref="customOperator" minOccurs="1" maxOccurs="1" />
                <xs:element ref="random" minOccurs="1" maxOccurs="1" />
                <xs:element ref="numberIncorrect" minOccurs="1" maxOccurs="1" />
                <xs:element ref="numberCorrect" minOccurs="1" maxOccurs="1" />
                <xs:element ref="numberPresented" minOccurs="1" maxOccurs="1" />
                <xs:element ref="numberResponded" minOccurs="1" maxOccurs="1" />
                <xs:element ref="numberSelected" minOccurs="1" maxOccurs="1" />
                <xs:element ref="substring" minOccurs="1" maxOccurs="1" />
                <xs:element ref="equalRounded" minOccurs="1" maxOccurs="1" />
                <xs:element ref="null" minOccurs="1" maxOccurs="1" />
                <xs:element ref="delete" minOccurs="1" maxOccurs="1" />
                <xs:element ref="match" minOccurs="1" maxOccurs="1" />
                <xs:element ref="index" minOccurs="1" maxOccurs="1" />
                <xs:element ref="power" minOccurs="1" maxOccurs="1" />
                <xs:element ref="equal" minOccurs="1" maxOccurs="1" />
                <xs:element ref="contains" minOccurs="1" maxOccurs="1" />
                <xs:element ref="containerSize" minOccurs="1" maxOccurs="1" />
                <xs:element ref="correct" minOccurs="1" maxOccurs="1" />
                <xs:element ref="default" minOccurs="1" maxOccurs="1" />
                <xs:element ref="anyN" minOccurs="1" maxOccurs="1" />
                <xs:element ref="integerDivide" minOccurs="1" maxOccurs="1" />
                <xs:element ref="integerModulus" minOccurs="1" maxOccurs="1" />
                <xs:element ref="isNull" minOccurs="1" maxOccurs="1" />
                <xs:element ref="member" minOccurs="1" maxOccurs="1" />
                <xs:element ref="product" minOccurs="1" maxOccurs="1" />
                <xs:element ref="round" minOccurs="1" maxOccurs="1" />
                <xs:element ref="truncate" minOccurs="1" maxOccurs="1" />
                <xs:element ref="fieldValue" minOccurs="1" maxOccurs="1" />
                <xs:element ref="randomInteger" minOccurs="1" maxOccurs="1" />
                <xs:element ref="randomFloat" minOccurs="1" maxOccurs="1" />
                <xs:element ref="variable" minOccurs="1" maxOccurs="1" />
                <xs:element ref="outcomeMinimum" minOccurs="1" maxOccurs="1" />
                <xs:element ref="outcomeMaximum" minOccurs="1" maxOccurs="1" />
                <xs:element ref="testVariables" minOccurs="1" maxOccurs="1" />
                <xs:element ref="integerToFloat" minOccurs="1" maxOccurs="1" />
                <xs:element ref="inside" minOccurs="1" maxOccurs="1" />
                <xs:element ref="baseValue" minOccurs="1" maxOccurs="1" />
                <xs:element ref="patternMatch" minOccurs="1" maxOccurs="1" />
                <xs:element ref="mapResponsePoint" minOccurs="1" maxOccurs="1" />
                <xs:element ref="mapResponse" minOccurs="1" maxOccurs="1" />
                <xs:element ref="stringMatch" minOccurs="1" maxOccurs="1" />
                <xs:element ref="repeat" minOccurs="1" maxOccurs="1" />
                <xs:element ref="roundTo" minOccurs="1" maxOccurs="1" />
                <xs:element ref="lcm" minOccurs="1" maxOccurs="1" />
                <xs:element ref="gcd" minOccurs="1" maxOccurs="1" />
                <xs:element ref="min" minOccurs="1" maxOccurs="1" />
                <xs:element ref="max" minOccurs="1" maxOccurs="1" />
                <xs:element ref="mathConstant" minOccurs="1" maxOccurs="1" />
                <xs:element ref="statsOperator" minOccurs="1" maxOccurs="1" />
                <xs:element ref="mathOperator" minOccurs="1" maxOccurs="1" />
            </xs:choice>
        </xs:sequence>
        <xs:attributeGroup ref="numberRepeats.Repeat.Attr" />
    </xs:complexType>

    <xs:complexType name="ResponseCondition.Type" abstract="false" mixed="false">
        <xs:annotation>
            <xs:documentation source="documentation">
                This enables the 'If..Then..Else' rules to be defined for the response processing. If the
                expression given in a responseIf or responseElseIf evaluates to 'true' then the sub-rules
                contained within it are followed and any following responseElseIf or responseElse parts a-
                re ignored for this response condition. If the expression given in a responseIf or respon-
                seElseIf does not evaluate to 'true' then consideration passes to the next responseElseIf
                or, if there are no more responseElseIf parts then the sub-rules of the responseElse are
                followed (if specified).
            </xs:documentation>
        </xs:annotation>
        <xs:sequence>
            <xs:element ref="responseIf" minOccurs="1" maxOccurs="1" />
            <xs:element ref="responseElseIf" minOccurs="0" maxOccurs="unbounded" />
            <xs:element ref="responseElse" minOccurs="0" maxOccurs="1" />
        </xs:sequence>
    </xs:complexType>

    <xs:complexType name="ResponseDeclaration.Type" abstract="false" mixed="false">
        <xs:annotation>
            <xs:documentation source="documentation">
                Response variables are declared by response declarations and bound to interactions in the
                itemBody. Each response variable declared may be bound to one and only one interaction. At
                runtime, response variables are instantiated as part of an item session. Their values are
                always initialized to NULL (no value) regardless of whether or not a default value is giv-
                en in the declaration. A response variable with a NULL value indicates that the candidate
                has not offered a response, either because they have not attempted the item at all or bec-
                ause they have attempted it and chosen not to provide a response. If a default value has
                been provided for a response variable then the variable is set to this value at the start
                of the first attempt. If the candidate never attempts the item, in other words, the item
                session passes straight from the initial state to the closed state without going through
                the interacting state, then the response variable remains NULL and the default value is n-
                ever used.
            </xs:documentation>
        </xs:annotation>
        <xs:sequence>
            <xs:element ref="defaultValue" minOccurs="0" maxOccurs="1" />
            <xs:element ref="correctResponse" minOccurs="0" maxOccurs="1" />
            <xs:element ref="mapping" minOccurs="0" maxOccurs="1" />
            <xs:element ref="areaMapping" minOccurs="0" maxOccurs="1" />
        </xs:sequence>
        <xs:attributeGroup ref="identifier.responseDeclaration.Attr" />
        <xs:attributeGroup ref="cardinality.responseDeclaration.Attr" />
        <xs:attributeGroup ref="baseType.responseDeclaration.Attr" />
    </xs:complexType>

    <xs:complexType name="ResponseElse.Type" abstract="false" mixed="false">
        <xs:annotation>
            <xs:documentation source="documentation">
                This provides the 'Else' clause of the 'If..Then..Else' for the response processing funct-
                ionality. If the expression given in a responseIf or responseElseIf evaluates to 'true' t-
                hen the sub-rules contained within it are followed and any following responseElseIf or re-
                sponseElse parts are ignored for this response condition. If the expression given in a re-
                sponseIf or responseElseIf does not evaluate to 'true' then consideration passes to the n-
                ext responseElseIf or, if there are no more responseElseIf parts then the sub-rules of the
                responseElse are followed (if specified).
            </xs:documentation>
        </xs:annotation>
        <xs:sequence>
            <xs:choice minOccurs="0" maxOccurs="unbounded">
                <xs:element ref="xi:include" minOccurs="1" maxOccurs="1" />
                <xs:element ref="responseCondition" minOccurs="1" maxOccurs="1" />
                <xs:element ref="responseProcessingFragment" minOccurs="1" maxOccurs="1" />
                <xs:element ref="setOutcomeValue" minOccurs="1" maxOccurs="1" />
                <xs:element ref="exitResponse" minOccurs="1" maxOccurs="1" />
                <xs:element ref="lookupOutcomeValue" minOccurs="1" maxOccurs="1" />
            </xs:choice>
        </xs:sequence>
    </xs:complexType>

    <xs:complexType name="ResponseIf.Type" abstract="false" mixed="false">
        <xs:annotation>
            <xs:documentation source="documentation">
                This provides the 'If' and 'ElseIf' clauses of the 'If..Then..Else' for the response proc-
                essing functionality. A responseIf part consists of an expression which must have an effe-
                ctive baseType of boolean and single cardinality. For more information about the runtime
                data model employed see Expressions (Section 2). It also contains a set of sub-rules. If
                the expression is 'true' then the sub-rules are processed, otherwise they are skipped (in-
                cluding if the expression is NULL) and the following responseElseIf or responseElse parts
                (if any) are considered instead.
            </xs:documentation>
        </xs:annotation>
        <xs:sequence>
            <xs:choice minOccurs="1" maxOccurs="1">
                <xs:element ref="and" minOccurs="1" maxOccurs="1" />
                <xs:element ref="gt" minOccurs="1" maxOccurs="1" />
                <xs:element ref="not" minOccurs="1" maxOccurs="1" />
                <xs:element ref="lt" minOccurs="1" maxOccurs="1" />
                <xs:element ref="gte" minOccurs="1" maxOccurs="1" />
                <xs:element ref="lte" minOccurs="1" maxOccurs="1" />
                <xs:element ref="or" minOccurs="1" maxOccurs="1" />
                <xs:element ref="sum" minOccurs="1" maxOccurs="1" />
                <xs:element ref="durationLT" minOccurs="1" maxOccurs="1" />
                <xs:element ref="durationGTE" minOccurs="1" maxOccurs="1" />
                <xs:element ref="subtract" minOccurs="1" maxOccurs="1" />
                <xs:element ref="divide" minOccurs="1" maxOccurs="1" />
                <xs:element ref="multiple" minOccurs="1" maxOccurs="1" />
                <xs:element ref="ordered" minOccurs="1" maxOccurs="1" />
                <xs:element ref="customOperator" minOccurs="1" maxOccurs="1" />
                <xs:element ref="random" minOccurs="1" maxOccurs="1" />
                <xs:element ref="numberIncorrect" minOccurs="1" maxOccurs="1" />
                <xs:element ref="numberCorrect" minOccurs="1" maxOccurs="1" />
                <xs:element ref="numberPresented" minOccurs="1" maxOccurs="1" />
                <xs:element ref="numberResponded" minOccurs="1" maxOccurs="1" />
                <xs:element ref="numberSelected" minOccurs="1" maxOccurs="1" />
                <xs:element ref="substring" minOccurs="1" maxOccurs="1" />
                <xs:element ref="equalRounded" minOccurs="1" maxOccurs="1" />
                <xs:element ref="null" minOccurs="1" maxOccurs="1" />
                <xs:element ref="delete" minOccurs="1" maxOccurs="1" />
                <xs:element ref="match" minOccurs="1" maxOccurs="1" />
                <xs:element ref="index" minOccurs="1" maxOccurs="1" />
                <xs:element ref="power" minOccurs="1" maxOccurs="1" />
                <xs:element ref="equal" minOccurs="1" maxOccurs="1" />
                <xs:element ref="contains" minOccurs="1" maxOccurs="1" />
                <xs:element ref="containerSize" minOccurs="1" maxOccurs="1" />
                <xs:element ref="correct" minOccurs="1" maxOccurs="1" />
                <xs:element ref="default" minOccurs="1" maxOccurs="1" />
                <xs:element ref="anyN" minOccurs="1" maxOccurs="1" />
                <xs:element ref="integerDivide" minOccurs="1" maxOccurs="1" />
                <xs:element ref="integerModulus" minOccurs="1" maxOccurs="1" />
                <xs:element ref="isNull" minOccurs="1" maxOccurs="1" />
                <xs:element ref="member" minOccurs="1" maxOccurs="1" />
                <xs:element ref="product" minOccurs="1" maxOccurs="1" />
                <xs:element ref="round" minOccurs="1" maxOccurs="1" />
                <xs:element ref="truncate" minOccurs="1" maxOccurs="1" />
                <xs:element ref="fieldValue" minOccurs="1" maxOccurs="1" />
                <xs:element ref="randomInteger" minOccurs="1" maxOccurs="1" />
                <xs:element ref="randomFloat" minOccurs="1" maxOccurs="1" />
                <xs:element ref="variable" minOccurs="1" maxOccurs="1" />
                <xs:element ref="outcomeMinimum" minOccurs="1" maxOccurs="1" />
                <xs:element ref="outcomeMaximum" minOccurs="1" maxOccurs="1" />
                <xs:element ref="testVariables" minOccurs="1" maxOccurs="1" />
                <xs:element ref="integerToFloat" minOccurs="1" maxOccurs="1" />
                <xs:element ref="inside" minOccurs="1" maxOccurs="1" />
                <xs:element ref="baseValue" minOccurs="1" maxOccurs="1" />
                <xs:element ref="patternMatch" minOccurs="1" maxOccurs="1" />
                <xs:element ref="mapResponsePoint" minOccurs="1" maxOccurs="1" />
                <xs:element ref="mapResponse" minOccurs="1" maxOccurs="1" />
                <xs:element ref="stringMatch" minOccurs="1" maxOccurs="1" />
                <xs:element ref="repeat" minOccurs="1" maxOccurs="1" />
                <xs:element ref="roundTo" minOccurs="1" maxOccurs="1" />
                <xs:element ref="lcm" minOccurs="1" maxOccurs="1" />
                <xs:element ref="gcd" minOccurs="1" maxOccurs="1" />
                <xs:element ref="min" minOccurs="1" maxOccurs="1" />
                <xs:element ref="max" minOccurs="1" maxOccurs="1" />
                <xs:element ref="mathConstant" minOccurs="1" maxOccurs="1" />
                <xs:element ref="statsOperator" minOccurs="1" maxOccurs="1" />
                <xs:element ref="mathOperator" minOccurs="1" maxOccurs="1" />
            </xs:choice>
            <xs:choice minOccurs="0" maxOccurs="unbounded">
                <xs:element ref="xi:include" minOccurs="1" maxOccurs="1" />
                <xs:element ref="responseCondition" minOccurs="1" maxOccurs="1" />
                <xs:element ref="responseProcessingFragment" minOccurs="1" maxOccurs="1" />
                <xs:element ref="setOutcomeValue" minOccurs="1" maxOccurs="1" />
                <xs:element ref="exitResponse" minOccurs="1" maxOccurs="1" />
                <xs:element ref="lookupOutcomeValue" minOccurs="1" maxOccurs="1" />
            </xs:choice>
        </xs:sequence>
    </xs:complexType>

    <xs:complexType name="ResponseProcessing.Type" abstract="false" mixed="false">
        <xs:annotation>
            <xs:documentation source="documentation">
                Response processing is the process by which the Delivery Engine assigns outcomes based on
                the candidate's responses. The outcomes may be used to provide feedback to the candidate.
                Feedback is either provided immediately following the end of the candidate's attempt or it
                is provided at some later time, perhaps as part of a summary report on the item session.
                The end of an attempt, and therefore response processing, must only take place in direct
                response to a user action or in response to some expected event, such as the end of a tes-
                t. An item session that enters the suspended state may have values for the response varia-
                bles that have yet to be submitted for response processing.
            </xs:documentation>
        </xs:annotation>
        <xs:sequence>
            <xs:choice minOccurs="0" maxOccurs="unbounded">
                <xs:element ref="xi:include" minOccurs="1" maxOccurs="1" />
                <xs:element ref="responseCondition" minOccurs="1" maxOccurs="1" />
                <xs:element ref="responseProcessingFragment" minOccurs="1" maxOccurs="1" />
                <xs:element ref="setOutcomeValue" minOccurs="1" maxOccurs="1" />
                <xs:element ref="exitResponse" minOccurs="1" maxOccurs="1" />
                <xs:element ref="lookupOutcomeValue" minOccurs="1" maxOccurs="1" />
            </xs:choice>
        </xs:sequence>
        <xs:attributeGroup ref="template.ResponseProcessing.Attr" />
        <xs:attributeGroup ref="templateLocation.ResponseProcessing.Attr" />
    </xs:complexType>

    <xs:complexType name="ResponseProcessingFragment.Type" abstract="false" mixed="false">
        <xs:annotation>
            <xs:documentation source="documentation">
                A responseProcessingFragment is a simple group of responseRules which are grouped together
                in order to allow them to be managed as a separate resource. It should not be used for any
                other purpose. Note that a response processing template allows a system to carry out resp-
                onse processing without having to parse the individual response processing rules. On the
                other hand, a responseProcessing element containing a reference to an externally defined
                response processing fragment must be parsed to determine the actions to carry out.
            </xs:documentation>
        </xs:annotation>
        <xs:sequence>
            <xs:choice minOccurs="0" maxOccurs="unbounded">
                <xs:element ref="xi:include" minOccurs="1" maxOccurs="1" />
                <xs:element ref="responseCondition" minOccurs="1" maxOccurs="1" />
                <xs:element ref="responseProcessingFragment" minOccurs="1" maxOccurs="1" />
                <xs:element ref="setOutcomeValue" minOccurs="1" maxOccurs="1" />
                <xs:element ref="exitResponse" minOccurs="1" maxOccurs="1" />
                <xs:element ref="lookupOutcomeValue" minOccurs="1" maxOccurs="1" />
            </xs:choice>
        </xs:sequence>
    </xs:complexType>

    <xs:complexType name="RoundTo.Type" abstract="false" mixed="false">
        <xs:annotation>
            <xs:documentation source="documentation">
                The roundTo operator takes one sub-expression which must have single cardinality and a nu-
                merical base-type. The result is a single float with the value nearest to that of the exp-
                ression's value such that when converted to a decimal string it represents the expression
                rounded by the specified rounding method to the specified precision. If the sub-expression
                is NULL, then the result is NULL. If the sub-expression is INF, then the result is INF. If
                the sub-expression is -INF, then the result is -INF. If the argument is NaN, then the res-
                ult is NULL.
                When rounding to n significant figures, the deciding digit is the (n+1)th di-
                git counting from the first non-zero digit from the left in the number. If the deciding d-
                igit is 5 or greater, the nth digit is increased by 1 and all digits to its right are dis-
                carded; if the deciding digit is less than 5, all digits to the right of the nth digit are
                discarded.
                When rounding to n decimal places, the deciding digit is the (n+1)th digit cou-
                nting to the right from the decimal point. If the deciding digit is 5 or greater, the nth
                digit is increased by 1 and all digits to its right are discarded; if the deciding digit
                is less than 5, all digits to the right of the nth digit are discarded.
            </xs:documentation>
        </xs:annotation>
        <xs:sequence>
            <xs:choice minOccurs="1" maxOccurs="1">
                <xs:element ref="and" minOccurs="1" maxOccurs="1" />
                <xs:element ref="gt" minOccurs="1" maxOccurs="1" />
                <xs:element ref="not" minOccurs="1" maxOccurs="1" />
                <xs:element ref="lt" minOccurs="1" maxOccurs="1" />
                <xs:element ref="gte" minOccurs="1" maxOccurs="1" />
                <xs:element ref="lte" minOccurs="1" maxOccurs="1" />
                <xs:element ref="or" minOccurs="1" maxOccurs="1" />
                <xs:element ref="sum" minOccurs="1" maxOccurs="1" />
                <xs:element ref="durationLT" minOccurs="1" maxOccurs="1" />
                <xs:element ref="durationGTE" minOccurs="1" maxOccurs="1" />
                <xs:element ref="subtract" minOccurs="1" maxOccurs="1" />
                <xs:element ref="divide" minOccurs="1" maxOccurs="1" />
                <xs:element ref="multiple" minOccurs="1" maxOccurs="1" />
                <xs:element ref="ordered" minOccurs="1" maxOccurs="1" />
                <xs:element ref="customOperator" minOccurs="1" maxOccurs="1" />
                <xs:element ref="random" minOccurs="1" maxOccurs="1" />
                <xs:element ref="numberIncorrect" minOccurs="1" maxOccurs="1" />
                <xs:element ref="numberCorrect" minOccurs="1" maxOccurs="1" />
                <xs:element ref="numberPresented" minOccurs="1" maxOccurs="1" />
                <xs:element ref="numberResponded" minOccurs="1" maxOccurs="1" />
                <xs:element ref="numberSelected" minOccurs="1" maxOccurs="1" />
                <xs:element ref="substring" minOccurs="1" maxOccurs="1" />
                <xs:element ref="equalRounded" minOccurs="1" maxOccurs="1" />
                <xs:element ref="null" minOccurs="1" maxOccurs="1" />
                <xs:element ref="delete" minOccurs="1" maxOccurs="1" />
                <xs:element ref="match" minOccurs="1" maxOccurs="1" />
                <xs:element ref="index" minOccurs="1" maxOccurs="1" />
                <xs:element ref="power" minOccurs="1" maxOccurs="1" />
                <xs:element ref="equal" minOccurs="1" maxOccurs="1" />
                <xs:element ref="contains" minOccurs="1" maxOccurs="1" />
                <xs:element ref="containerSize" minOccurs="1" maxOccurs="1" />
                <xs:element ref="correct" minOccurs="1" maxOccurs="1" />
                <xs:element ref="default" minOccurs="1" maxOccurs="1" />
                <xs:element ref="anyN" minOccurs="1" maxOccurs="1" />
                <xs:element ref="integerDivide" minOccurs="1" maxOccurs="1" />
                <xs:element ref="integerModulus" minOccurs="1" maxOccurs="1" />
                <xs:element ref="isNull" minOccurs="1" maxOccurs="1" />
                <xs:element ref="member" minOccurs="1" maxOccurs="1" />
                <xs:element ref="product" minOccurs="1" maxOccurs="1" />
                <xs:element ref="round" minOccurs="1" maxOccurs="1" />
                <xs:element ref="truncate" minOccurs="1" maxOccurs="1" />
                <xs:element ref="fieldValue" minOccurs="1" maxOccurs="1" />
                <xs:element ref="randomInteger" minOccurs="1" maxOccurs="1" />
                <xs:element ref="randomFloat" minOccurs="1" maxOccurs="1" />
                <xs:element ref="variable" minOccurs="1" maxOccurs="1" />
                <xs:element ref="outcomeMinimum" minOccurs="1" maxOccurs="1" />
                <xs:element ref="outcomeMaximum" minOccurs="1" maxOccurs="1" />
                <xs:element ref="testVariables" minOccurs="1" maxOccurs="1" />
                <xs:element ref="integerToFloat" minOccurs="1" maxOccurs="1" />
                <xs:element ref="inside" minOccurs="1" maxOccurs="1" />
                <xs:element ref="baseValue" minOccurs="1" maxOccurs="1" />
                <xs:element ref="patternMatch" minOccurs="1" maxOccurs="1" />
                <xs:element ref="mapResponsePoint" minOccurs="1" maxOccurs="1" />
                <xs:element ref="mapResponse" minOccurs="1" maxOccurs="1" />
                <xs:element ref="stringMatch" minOccurs="1" maxOccurs="1" />
                <xs:element ref="repeat" minOccurs="1" maxOccurs="1" />
                <xs:element ref="roundTo" minOccurs="1" maxOccurs="1" />
                <xs:element ref="lcm" minOccurs="1" maxOccurs="1" />
                <xs:element ref="gcd" minOccurs="1" maxOccurs="1" />
                <xs:element ref="min" minOccurs="1" maxOccurs="1" />
                <xs:element ref="max" minOccurs="1" maxOccurs="1" />
                <xs:element ref="mathConstant" minOccurs="1" maxOccurs="1" />
                <xs:element ref="statsOperator" minOccurs="1" maxOccurs="1" />
                <xs:element ref="mathOperator" minOccurs="1" maxOccurs="1" />
            </xs:choice>
        </xs:sequence>
        <xs:attributeGroup ref="roundingMode.RoundTo.Attr" />
        <xs:attributeGroup ref="figures.RoundTo.Attr" />
    </xs:complexType>

    <xs:complexType name="RubricBlock.Type" abstract="false" mixed="true">
        <xs:annotation>
            <xs:documentation source="documentation">
                The container for the rubric block content. A rubric block identifies part of the content
                that represents instructions to one or more of the actors that view the item. Although ru-
                bric blocks are defined as simpleBlocks they must not contain interactions. The visibility
                of nested rubricBlocks is determined by the outermost element. In other words, if an elem-
                ent is determined to be hidden then all of its content is hidden including conditionally
                visible elements for which the conditions are satisfied and that therefore would otherwise
                be visible.
            </xs:documentation>
        </xs:annotation>
        <xs:complexContent>
            <xs:extension base="BaseSequenceXBase.Type">
                <xs:sequence>
                    <xs:choice minOccurs="0" maxOccurs="unbounded">
                        <xs:choice minOccurs="1" maxOccurs="1">
                            <xs:element ref="pre" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="h1" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="h2" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="h3" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="h4" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="h5" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="h6" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="p" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="address" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="dl" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="ol" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="ul" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="br" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="hr" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="img" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="object" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="blockquote" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="em" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="a" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="code" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="span" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="sub" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="acronym" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="big" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="tt" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="kbd" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="q" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="i" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="dfn" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="abbr" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="strong" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="sup" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="var" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="small" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="samp" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="b" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="cite" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="table" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="div" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="bdo" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="bdi" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="figure" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="audio" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="video" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="article" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="aside" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="footer" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="header" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="label" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="nav" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="section" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="ruby" minOccurs="1" maxOccurs="1" />
                            <xs:choice minOccurs="1" maxOccurs="1">
                                <xs:element ref="ssml:p" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="ssml:s" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="ssml:say-as" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="ssml:phoneme" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="ssml:sub" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="ssml:voice" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="ssml:emphasis" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="ssml:break" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="ssml:prosody" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="ssml:mark" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="ssml:audio" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="ssml:speak" minOccurs="1" maxOccurs="1" />
                            </xs:choice>
                        </xs:choice>
                        <xs:element ref="m3:math" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="xi:include" minOccurs="1" maxOccurs="1" />
                        <xs:element name="templateBlock" type="RubricBlockTemplateBlock.Type" minOccurs="1" maxOccurs="1"/>
                        <xs:element name="templateInline" type="RubricBlockTemplateInline.Type" minOccurs="1" maxOccurs="1"/>
                        <xs:element ref="qti-printed-variable" minOccurs="1" maxOccurs="1" />
                    </xs:choice>
                    <xs:element ref="stylesheet" minOccurs="0" maxOccurs="unbounded" />
                </xs:sequence>
                <xs:attributeGroup ref="use.RubricBlock.Attr" />
                <xs:attributeGroup ref="view.RubricBlock.Attr" />
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <xs:complexType name="RubricBlockTemplateBlock.Type" abstract="false" mixed="true">
        <xs:annotation>
            <xs:documentation source="documentation">
                This is the container for the rubric content that is used in the context of a template bl-
                ock content.
            </xs:documentation>
        </xs:annotation>
        <xs:complexContent>
            <xs:extension base="BaseSequenceXBase.Type">
                <xs:sequence>
                    <xs:choice minOccurs="0" maxOccurs="unbounded">
                        <xs:choice minOccurs="1" maxOccurs="1">
                            <xs:element ref="pre" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="h1" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="h2" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="h3" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="h4" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="h5" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="h6" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="p" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="address" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="dl" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="ol" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="ul" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="br" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="hr" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="img" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="object" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="blockquote" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="em" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="a" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="code" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="span" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="sub" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="acronym" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="big" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="tt" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="kbd" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="q" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="i" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="dfn" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="abbr" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="strong" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="sup" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="var" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="small" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="samp" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="b" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="cite" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="table" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="div" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="bdo" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="bdi" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="figure" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="audio" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="video" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="article" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="aside" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="footer" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="header" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="label" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="nav" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="section" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="ruby" minOccurs="1" maxOccurs="1" />
                            <xs:choice minOccurs="1" maxOccurs="1">
                                <xs:element ref="ssml:p" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="ssml:s" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="ssml:say-as" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="ssml:phoneme" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="ssml:sub" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="ssml:voice" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="ssml:emphasis" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="ssml:break" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="ssml:prosody" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="ssml:mark" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="ssml:audio" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="ssml:speak" minOccurs="1" maxOccurs="1" />
                            </xs:choice>
                        </xs:choice>
                        <xs:element ref="m3:math" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="xi:include" minOccurs="1" maxOccurs="1" />
                        <xs:element name="qti-template-block" type="RubricBlockTemplateBlock.Type" minOccurs="1" maxOccurs="1"/>
                        <xs:element ref="qti-printed-variable" minOccurs="1" maxOccurs="1" />
                    </xs:choice>
                    <xs:element ref="stylesheet" minOccurs="0" maxOccurs="unbounded" />
                </xs:sequence>
                <xs:attributeGroup ref="templateIdentifier.RubricBlockTemplateBlock.Attr" />
                <xs:attributeGroup ref="showHide.RubricBlockTemplateBlock.Attr" />
                <xs:attributeGroup ref="identifier.RubricBlockTemplateBlock.Attr" />
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <xs:complexType name="RubricBlockTemplateInline.Type" abstract="false" mixed="true">
        <xs:annotation>
            <xs:documentation source="documentation">
                This is the container for the rubric content that is used in the context of a template in-
                line content.
            </xs:documentation>
        </xs:annotation>
        <xs:complexContent>
            <xs:extension base="BaseSequenceXBase.Type">
                <xs:sequence>
                    <xs:choice minOccurs="0" maxOccurs="unbounded">
                        <xs:choice minOccurs="1" maxOccurs="1">
                            <xs:element ref="img" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="br" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="object" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="em" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="a" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="code" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="span" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="sub" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="acronym" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="big" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="tt" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="kbd" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="q" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="i" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="dfn" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="abbr" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="strong" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="sup" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="var" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="small" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="samp" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="b" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="cite" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="bdo" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="bdi" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="label" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="ruby" minOccurs="1" maxOccurs="1" />
                            <xs:choice minOccurs="1" maxOccurs="1">
                                <xs:element ref="ssml:p" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="ssml:s" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="ssml:say-as" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="ssml:phoneme" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="ssml:sub" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="ssml:voice" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="ssml:emphasis" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="ssml:break" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="ssml:prosody" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="ssml:mark" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="ssml:audio" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="ssml:speak" minOccurs="1" maxOccurs="1" />
                            </xs:choice>
                        </xs:choice>
                        <xs:element ref="m3:math" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="xi:include" minOccurs="1" maxOccurs="1" />
                        <xs:element name="qti-template-inline" type="RubricBlockTemplateInline.Type" minOccurs="1" maxOccurs="1"/>
                        <xs:element ref="qti-printed-variable" minOccurs="1" maxOccurs="1" />
                    </xs:choice>
                </xs:sequence>
                <xs:attributeGroup ref="templateIdentifier.RubricBlockTemplateInline.Attr" />
                <xs:attributeGroup ref="showHide.RubricBlockTemplateInline.Attr" />
                <xs:attributeGroup ref="identifier.RubricBlockTemplateInline.Attr" />
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <xs:complexType name="SelectPointInteraction.Type" abstract="false" mixed="false">
        <xs:annotation>
            <xs:documentation source="documentation">
                Like hotspotInteraction, a select point interaction is a graphic interaction. The candida-
                te's task is to select one or more points. The associated response may have an areaMapping
                that scores the response on the basis of comparing it against predefined areas but the de-
                livery engine must not indicate these areas of the image. Only the actual point(s) select-
                ed by the candidate shall be indicated. The select point interaction must be bound to a r-
                esponse variable with a baseType of point and single or multiple cardinality.
            </xs:documentation>
        </xs:annotation>
        <xs:complexContent>
            <xs:extension base="BasePromptInteraction.Type">
                <xs:sequence>
                    <xs:element ref="object" minOccurs="1" maxOccurs="1" />
                </xs:sequence>
                <xs:attributeGroup ref="min-choices.SelectPointInteraction.Attr" />
                <xs:attributeGroup ref="max-choices.SelectPointInteraction.Attr" />
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <xs:complexType name="SetValue.Type" abstract="false" mixed="false">
        <xs:annotation>
            <xs:documentation source="documentation">
                The setValue rule sets the value of a variable (response, outcome or template) to the val-
                ue obtained from the associated expression. A variable can be updated with reference to a
                previously assigned value, in other words, the variable being set may appear in the expre-
                ssion where it takes the value previously assigned to it. Special care is required when u-
                sing the numeric base-types because floating point values can not be assigned to integer
                variables and vice-versa. The truncate, round or integerToFloat operators must be used to
                achieve numeric type conversion.
            </xs:documentation>
        </xs:annotation>
        <xs:sequence>
            <xs:choice minOccurs="1" maxOccurs="1">
                <xs:element ref="and" minOccurs="1" maxOccurs="1" />
                <xs:element ref="gt" minOccurs="1" maxOccurs="1" />
                <xs:element ref="not" minOccurs="1" maxOccurs="1" />
                <xs:element ref="lt" minOccurs="1" maxOccurs="1" />
                <xs:element ref="gte" minOccurs="1" maxOccurs="1" />
                <xs:element ref="lte" minOccurs="1" maxOccurs="1" />
                <xs:element ref="or" minOccurs="1" maxOccurs="1" />
                <xs:element ref="sum" minOccurs="1" maxOccurs="1" />
                <xs:element ref="durationLT" minOccurs="1" maxOccurs="1" />
                <xs:element ref="durationGTE" minOccurs="1" maxOccurs="1" />
                <xs:element ref="subtract" minOccurs="1" maxOccurs="1" />
                <xs:element ref="divide" minOccurs="1" maxOccurs="1" />
                <xs:element ref="multiple" minOccurs="1" maxOccurs="1" />
                <xs:element ref="ordered" minOccurs="1" maxOccurs="1" />
                <xs:element ref="customOperator" minOccurs="1" maxOccurs="1" />
                <xs:element ref="random" minOccurs="1" maxOccurs="1" />
                <xs:element ref="numberIncorrect" minOccurs="1" maxOccurs="1" />
                <xs:element ref="numberCorrect" minOccurs="1" maxOccurs="1" />
                <xs:element ref="numberPresented" minOccurs="1" maxOccurs="1" />
                <xs:element ref="numberResponded" minOccurs="1" maxOccurs="1" />
                <xs:element ref="numberSelected" minOccurs="1" maxOccurs="1" />
                <xs:element ref="substring" minOccurs="1" maxOccurs="1" />
                <xs:element ref="equalRounded" minOccurs="1" maxOccurs="1" />
                <xs:element ref="null" minOccurs="1" maxOccurs="1" />
                <xs:element ref="delete" minOccurs="1" maxOccurs="1" />
                <xs:element ref="match" minOccurs="1" maxOccurs="1" />
                <xs:element ref="index" minOccurs="1" maxOccurs="1" />
                <xs:element ref="power" minOccurs="1" maxOccurs="1" />
                <xs:element ref="equal" minOccurs="1" maxOccurs="1" />
                <xs:element ref="contains" minOccurs="1" maxOccurs="1" />
                <xs:element ref="containerSize" minOccurs="1" maxOccurs="1" />
                <xs:element ref="correct" minOccurs="1" maxOccurs="1" />
                <xs:element ref="default" minOccurs="1" maxOccurs="1" />
                <xs:element ref="anyN" minOccurs="1" maxOccurs="1" />
                <xs:element ref="integerDivide" minOccurs="1" maxOccurs="1" />
                <xs:element ref="integerModulus" minOccurs="1" maxOccurs="1" />
                <xs:element ref="isNull" minOccurs="1" maxOccurs="1" />
                <xs:element ref="member" minOccurs="1" maxOccurs="1" />
                <xs:element ref="product" minOccurs="1" maxOccurs="1" />
                <xs:element ref="round" minOccurs="1" maxOccurs="1" />
                <xs:element ref="truncate" minOccurs="1" maxOccurs="1" />
                <xs:element ref="fieldValue" minOccurs="1" maxOccurs="1" />
                <xs:element ref="randomInteger" minOccurs="1" maxOccurs="1" />
                <xs:element ref="randomFloat" minOccurs="1" maxOccurs="1" />
                <xs:element ref="variable" minOccurs="1" maxOccurs="1" />
                <xs:element ref="outcomeMinimum" minOccurs="1" maxOccurs="1" />
                <xs:element ref="outcomeMaximum" minOccurs="1" maxOccurs="1" />
                <xs:element ref="testVariables" minOccurs="1" maxOccurs="1" />
                <xs:element ref="integerToFloat" minOccurs="1" maxOccurs="1" />
                <xs:element ref="inside" minOccurs="1" maxOccurs="1" />
                <xs:element ref="baseValue" minOccurs="1" maxOccurs="1" />
                <xs:element ref="patternMatch" minOccurs="1" maxOccurs="1" />
                <xs:element ref="mapResponsePoint" minOccurs="1" maxOccurs="1" />
                <xs:element ref="mapResponse" minOccurs="1" maxOccurs="1" />
                <xs:element ref="stringMatch" minOccurs="1" maxOccurs="1" />
                <xs:element ref="repeat" minOccurs="1" maxOccurs="1" />
                <xs:element ref="roundTo" minOccurs="1" maxOccurs="1" />
                <xs:element ref="lcm" minOccurs="1" maxOccurs="1" />
                <xs:element ref="gcd" minOccurs="1" maxOccurs="1" />
                <xs:element ref="min" minOccurs="1" maxOccurs="1" />
                <xs:element ref="max" minOccurs="1" maxOccurs="1" />
                <xs:element ref="mathConstant" minOccurs="1" maxOccurs="1" />
                <xs:element ref="statsOperator" minOccurs="1" maxOccurs="1" />
                <xs:element ref="mathOperator" minOccurs="1" maxOccurs="1" />
            </xs:choice>
        </xs:sequence>
        <xs:attributeGroup ref="identifier.SetValue.Attr" />
    </xs:complexType>

    <xs:complexType name="SimpleAssociableChoice.Type" abstract="false" mixed="true">
        <xs:annotation>
            <xs:documentation source="documentation">
                This is an ordered set of choices for the set.
            </xs:documentation>
        </xs:annotation>
        <xs:complexContent>
            <xs:extension base="BaseSequence.Type">
                <xs:sequence>
                    <xs:choice minOccurs="0" maxOccurs="unbounded">
                        <xs:element ref="qti-printed-variable" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="qti-feedback-block" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="qti-feedback-inline" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="qti-template-inline" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="qti-template-block" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="m3:math" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="xi:include" minOccurs="1" maxOccurs="1" />
                        <xs:choice minOccurs="1" maxOccurs="1">
                            <xs:element ref="pre" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="h1" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="h2" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="h3" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="h4" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="h5" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="h6" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="p" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="address" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="dl" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="ol" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="ul" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="br" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="hr" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="img" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="object" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="blockquote" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="em" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="a" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="code" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="span" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="sub" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="acronym" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="big" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="tt" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="kbd" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="q" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="i" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="dfn" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="abbr" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="strong" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="sup" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="var" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="small" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="samp" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="b" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="cite" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="table" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="div" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="bdo" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="bdi" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="figure" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="audio" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="video" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="article" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="aside" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="footer" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="header" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="label" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="nav" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="section" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="ruby" minOccurs="1" maxOccurs="1" />
                            <xs:choice minOccurs="1" maxOccurs="1">
                                <xs:element ref="ssml:p" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="ssml:s" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="ssml:say-as" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="ssml:phoneme" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="ssml:sub" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="ssml:voice" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="ssml:emphasis" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="ssml:break" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="ssml:prosody" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="ssml:mark" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="ssml:audio" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="ssml:speak" minOccurs="1" maxOccurs="1" />
                            </xs:choice>
                        </xs:choice>
                    </xs:choice>
                </xs:sequence>
                <xs:attributeGroup ref="identifier.SimpleAssociableChoice.Attr" />
                <xs:attributeGroup ref="fixed.SimpleAssociableChoice.Attr" />
                <xs:attributeGroup ref="template-identifier.SimpleAssociableChoice.Attr" />
                <xs:attributeGroup ref="show-hide.SimpleAssociableChoice.Attr" />
                <xs:attributeGroup ref="match-group.SimpleAssociableChoice.Attr" />
                <xs:attributeGroup ref="match-max.SimpleAssociableChoice.Attr" />
                <xs:attributeGroup ref="match-min.SimpleAssociableChoice.Attr" />
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <xs:complexType name="SimpleChoice.Type" abstract="false" mixed="true">
        <xs:annotation>
            <xs:documentation source="documentation">
                A simpleChoice is a choice that contains flowStatic objects. A simpleChoice must not cont-
                ain any nested interactions.
            </xs:documentation>
        </xs:annotation>
        <xs:complexContent>
            <xs:extension base="BaseSequence.Type">
                <xs:sequence>
                    <xs:choice minOccurs="0" maxOccurs="unbounded">
                        <xs:element ref="qti-printed-variable" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="qti-feedback-block" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="qti-feedback-inline" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="qti-template-inline" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="qti-template-block" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="m3:math" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="xi:include" minOccurs="1" maxOccurs="1" />
                        <xs:choice minOccurs="1" maxOccurs="1">
                            <xs:element ref="pre" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="h1" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="h2" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="h3" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="h4" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="h5" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="h6" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="p" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="address" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="dl" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="ol" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="ul" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="br" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="hr" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="img" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="object" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="blockquote" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="em" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="a" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="code" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="span" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="sub" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="acronym" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="big" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="tt" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="kbd" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="q" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="i" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="dfn" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="abbr" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="strong" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="sup" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="var" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="small" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="samp" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="b" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="cite" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="table" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="div" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="bdo" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="bdi" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="figure" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="audio" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="video" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="article" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="aside" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="footer" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="header" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="label" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="nav" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="section" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="ruby" minOccurs="1" maxOccurs="1" />
                            <xs:choice minOccurs="1" maxOccurs="1">
                                <xs:element ref="ssml:p" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="ssml:s" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="ssml:say-as" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="ssml:phoneme" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="ssml:sub" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="ssml:voice" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="ssml:emphasis" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="ssml:break" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="ssml:prosody" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="ssml:mark" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="ssml:audio" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="ssml:speak" minOccurs="1" maxOccurs="1" />
                            </xs:choice>
                        </xs:choice>
                    </xs:choice>
                </xs:sequence>
                <xs:attributeGroup ref="identifier.SimpleChoice.Attr" />
                <xs:attributeGroup ref="fixed.SimpleChoice.Attr" />
                <xs:attributeGroup ref="template-identifier.SimpleChoice.Attr" />
                <xs:attributeGroup ref="show-hide.SimpleChoice.Attr" />
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <xs:complexType name="SimpleMatchSet.Type" abstract="false" mixed="false">
        <xs:annotation>
            <xs:documentation source="documentation">
                This is the ordered set of choices for the match set.
            </xs:documentation>
        </xs:annotation>
        <xs:sequence>
            <xs:element ref="qti-simple-associable-choice" minOccurs="0" maxOccurs="unbounded" />
        </xs:sequence>
        <xs:attributeGroup ref="id.SimpleMatchSet.Attr" />
    </xs:complexType>

    <xs:complexType name="SliderInteraction.Type" abstract="false" mixed="false">
        <xs:annotation>
            <xs:documentation source="documentation">
                The Slider Interaction presents the candidate with a control for selecting a numerical va-
                lue between a lower and upper bound. It must be bound to a response variable with single
                cardinality with a base-type of either integer or float.
                Note that a slider interaction d-
                oes not have a default or initial position except where specified by a default value for
                the associated response variable. The currently selected value, if any, must be clearly i-
                ndicated to the candidate. Because a slider interaction does not have a default or initial
                position, except where specified by a default value for the associated response variable,
                it is difficult to distinguish between an intentional response that corresponds to the sl-
                ider's initial position and a NULL response. As a workaround, sliderInteraction items have
                to either a) not count NULL responses (i.e. count all responses as intentional) or b) inc-
                lude a 'skip' button and count its activation combined with a RESPONSE variable that is e-
                qual to the slider's initial position as a NULL response
            </xs:documentation>
        </xs:annotation>
        <xs:complexContent>
            <xs:extension base="BasePromptInteraction.Type">
                <xs:attributeGroup ref="lower-bound.SliderInteraction.Attr" />
                <xs:attributeGroup ref="upper-bound.SliderInteraction.Attr" />
                <xs:attributeGroup ref="step.SliderInteraction.Attr" />
                <xs:attributeGroup ref="step-label.SliderInteraction.Attr" />
                <xs:attributeGroup ref="orientation.SliderInteraction.Attr" />
                <xs:attributeGroup ref="reverse.SliderInteraction.Attr" />
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <xs:complexType name="StatsOperator.Type" abstract="false" mixed="false">
        <xs:annotation>
            <xs:documentation source="documentation">
                The statsOperator operator takes 1 sub-expression which is a container of multiple or ord-
                ered cardinality and has a numerical base-type. The result is a single float. If the sub--
                expression or any value contained therein is NULL, the result is NULL. If any value conta-
                ined in the sub-expression is not a numerical value, then the result is NULL.
            </xs:documentation>
        </xs:annotation>
        <xs:sequence>
            <xs:choice minOccurs="1" maxOccurs="1">
                <xs:element ref="and" minOccurs="1" maxOccurs="1" />
                <xs:element ref="gt" minOccurs="1" maxOccurs="1" />
                <xs:element ref="not" minOccurs="1" maxOccurs="1" />
                <xs:element ref="lt" minOccurs="1" maxOccurs="1" />
                <xs:element ref="gte" minOccurs="1" maxOccurs="1" />
                <xs:element ref="lte" minOccurs="1" maxOccurs="1" />
                <xs:element ref="or" minOccurs="1" maxOccurs="1" />
                <xs:element ref="sum" minOccurs="1" maxOccurs="1" />
                <xs:element ref="durationLT" minOccurs="1" maxOccurs="1" />
                <xs:element ref="durationGTE" minOccurs="1" maxOccurs="1" />
                <xs:element ref="subtract" minOccurs="1" maxOccurs="1" />
                <xs:element ref="divide" minOccurs="1" maxOccurs="1" />
                <xs:element ref="multiple" minOccurs="1" maxOccurs="1" />
                <xs:element ref="ordered" minOccurs="1" maxOccurs="1" />
                <xs:element ref="customOperator" minOccurs="1" maxOccurs="1" />
                <xs:element ref="random" minOccurs="1" maxOccurs="1" />
                <xs:element ref="numberIncorrect" minOccurs="1" maxOccurs="1" />
                <xs:element ref="numberCorrect" minOccurs="1" maxOccurs="1" />
                <xs:element ref="numberPresented" minOccurs="1" maxOccurs="1" />
                <xs:element ref="numberResponded" minOccurs="1" maxOccurs="1" />
                <xs:element ref="numberSelected" minOccurs="1" maxOccurs="1" />
                <xs:element ref="substring" minOccurs="1" maxOccurs="1" />
                <xs:element ref="equalRounded" minOccurs="1" maxOccurs="1" />
                <xs:element ref="null" minOccurs="1" maxOccurs="1" />
                <xs:element ref="delete" minOccurs="1" maxOccurs="1" />
                <xs:element ref="match" minOccurs="1" maxOccurs="1" />
                <xs:element ref="index" minOccurs="1" maxOccurs="1" />
                <xs:element ref="power" minOccurs="1" maxOccurs="1" />
                <xs:element ref="equal" minOccurs="1" maxOccurs="1" />
                <xs:element ref="contains" minOccurs="1" maxOccurs="1" />
                <xs:element ref="containerSize" minOccurs="1" maxOccurs="1" />
                <xs:element ref="correct" minOccurs="1" maxOccurs="1" />
                <xs:element ref="default" minOccurs="1" maxOccurs="1" />
                <xs:element ref="anyN" minOccurs="1" maxOccurs="1" />
                <xs:element ref="integerDivide" minOccurs="1" maxOccurs="1" />
                <xs:element ref="integerModulus" minOccurs="1" maxOccurs="1" />
                <xs:element ref="isNull" minOccurs="1" maxOccurs="1" />
                <xs:element ref="member" minOccurs="1" maxOccurs="1" />
                <xs:element ref="product" minOccurs="1" maxOccurs="1" />
                <xs:element ref="round" minOccurs="1" maxOccurs="1" />
                <xs:element ref="truncate" minOccurs="1" maxOccurs="1" />
                <xs:element ref="fieldValue" minOccurs="1" maxOccurs="1" />
                <xs:element ref="randomInteger" minOccurs="1" maxOccurs="1" />
                <xs:element ref="randomFloat" minOccurs="1" maxOccurs="1" />
                <xs:element ref="variable" minOccurs="1" maxOccurs="1" />
                <xs:element ref="outcomeMinimum" minOccurs="1" maxOccurs="1" />
                <xs:element ref="outcomeMaximum" minOccurs="1" maxOccurs="1" />
                <xs:element ref="testVariables" minOccurs="1" maxOccurs="1" />
                <xs:element ref="integerToFloat" minOccurs="1" maxOccurs="1" />
                <xs:element ref="inside" minOccurs="1" maxOccurs="1" />
                <xs:element ref="baseValue" minOccurs="1" maxOccurs="1" />
                <xs:element ref="patternMatch" minOccurs="1" maxOccurs="1" />
                <xs:element ref="mapResponsePoint" minOccurs="1" maxOccurs="1" />
                <xs:element ref="mapResponse" minOccurs="1" maxOccurs="1" />
                <xs:element ref="stringMatch" minOccurs="1" maxOccurs="1" />
                <xs:element ref="repeat" minOccurs="1" maxOccurs="1" />
                <xs:element ref="roundTo" minOccurs="1" maxOccurs="1" />
                <xs:element ref="lcm" minOccurs="1" maxOccurs="1" />
                <xs:element ref="gcd" minOccurs="1" maxOccurs="1" />
                <xs:element ref="min" minOccurs="1" maxOccurs="1" />
                <xs:element ref="max" minOccurs="1" maxOccurs="1" />
                <xs:element ref="mathConstant" minOccurs="1" maxOccurs="1" />
                <xs:element ref="statsOperator" minOccurs="1" maxOccurs="1" />
                <xs:element ref="mathOperator" minOccurs="1" maxOccurs="1" />
            </xs:choice>
        </xs:sequence>
        <xs:attributeGroup ref="name.StatsOperator.Attr" />
    </xs:complexType>

    <xs:complexType name="StimulusBody.Type" abstract="false" mixed="false">
        <xs:annotation>
            <xs:documentation source="documentation">
                This is the container for the content that is to be defined as the common stimulus in an
                Item cf. ItemBody. The stimulus body contains the text, graphics, media objects and inter-
                actions that describe the common content and information about how it is structured. The
                body is presented by combining it with stylesheet information, either explicitly or impli-
                citly using the default style rules of the delivery or authoring system.
            </xs:documentation>
        </xs:annotation>
        <xs:complexContent>
            <xs:extension base="BaseSequence.Type">
                <xs:sequence>
                    <xs:choice minOccurs="1" maxOccurs="unbounded">
                        <xs:element ref="qti-position-object-stage" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="qti-custom-interaction" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="qti-drawing-interaction" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="qti-gap-match-interaction" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="qti-match-interaction" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="qti-graphic-gap-match-interaction" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="qti-hotspot-interaction" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="qti-graphic-order-interaction" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="qti-select-point-interaction" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="qti-graphic-associate-interaction" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="qti-slider-interaction" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="qti-choice-interaction" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="qti-media-interaction" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="qti-hottext-interaction" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="qti-order-interaction" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="qti-extended-text-interaction" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="qti-upload-interaction" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="qti-associate-interaction" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="qti-feedback-block" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="qti-template-block" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="qti-info-control" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="m3:math" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="xi:include" minOccurs="1" maxOccurs="1" />
                        <xs:choice minOccurs="1" maxOccurs="1">
                            <xs:element ref="pre" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="h1" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="h2" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="h3" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="h4" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="h5" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="h6" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="p" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="address" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="dl" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="ol" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="ul" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="hr" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="blockquote" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="table" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="div" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="article" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="aside" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="audio" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="figure" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="footer" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="header" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="nav" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="section" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="video" minOccurs="1" maxOccurs="1" />
                        </xs:choice>
                    </xs:choice>
                </xs:sequence>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <xs:complexType name="StringMatch.Type" abstract="false" mixed="false">
        <xs:annotation>
            <xs:documentation source="documentation">
                The stringMatch operator takes two sub-expressions which must have single and a base-type
                of string. The result is a single boolean with a value of true if the two strings match a-
                ccording to the comparison rules defined by the attributes below and false if they don't.
                If either sub-expression is NULL then the operator results in NULL.
            </xs:documentation>
        </xs:annotation>
        <xs:sequence>
            <xs:choice minOccurs="2" maxOccurs="2">
                <xs:element ref="and" minOccurs="1" maxOccurs="1" />
                <xs:element ref="gt" minOccurs="1" maxOccurs="1" />
                <xs:element ref="not" minOccurs="1" maxOccurs="1" />
                <xs:element ref="lt" minOccurs="1" maxOccurs="1" />
                <xs:element ref="gte" minOccurs="1" maxOccurs="1" />
                <xs:element ref="lte" minOccurs="1" maxOccurs="1" />
                <xs:element ref="or" minOccurs="1" maxOccurs="1" />
                <xs:element ref="sum" minOccurs="1" maxOccurs="1" />
                <xs:element ref="durationLT" minOccurs="1" maxOccurs="1" />
                <xs:element ref="durationGTE" minOccurs="1" maxOccurs="1" />
                <xs:element ref="subtract" minOccurs="1" maxOccurs="1" />
                <xs:element ref="divide" minOccurs="1" maxOccurs="1" />
                <xs:element ref="multiple" minOccurs="1" maxOccurs="1" />
                <xs:element ref="ordered" minOccurs="1" maxOccurs="1" />
                <xs:element ref="customOperator" minOccurs="1" maxOccurs="1" />
                <xs:element ref="random" minOccurs="1" maxOccurs="1" />
                <xs:element ref="numberIncorrect" minOccurs="1" maxOccurs="1" />
                <xs:element ref="numberCorrect" minOccurs="1" maxOccurs="1" />
                <xs:element ref="numberPresented" minOccurs="1" maxOccurs="1" />
                <xs:element ref="numberResponded" minOccurs="1" maxOccurs="1" />
                <xs:element ref="numberSelected" minOccurs="1" maxOccurs="1" />
                <xs:element ref="substring" minOccurs="1" maxOccurs="1" />
                <xs:element ref="equalRounded" minOccurs="1" maxOccurs="1" />
                <xs:element ref="null" minOccurs="1" maxOccurs="1" />
                <xs:element ref="delete" minOccurs="1" maxOccurs="1" />
                <xs:element ref="match" minOccurs="1" maxOccurs="1" />
                <xs:element ref="index" minOccurs="1" maxOccurs="1" />
                <xs:element ref="power" minOccurs="1" maxOccurs="1" />
                <xs:element ref="equal" minOccurs="1" maxOccurs="1" />
                <xs:element ref="contains" minOccurs="1" maxOccurs="1" />
                <xs:element ref="containerSize" minOccurs="1" maxOccurs="1" />
                <xs:element ref="correct" minOccurs="1" maxOccurs="1" />
                <xs:element ref="default" minOccurs="1" maxOccurs="1" />
                <xs:element ref="anyN" minOccurs="1" maxOccurs="1" />
                <xs:element ref="integerDivide" minOccurs="1" maxOccurs="1" />
                <xs:element ref="integerModulus" minOccurs="1" maxOccurs="1" />
                <xs:element ref="isNull" minOccurs="1" maxOccurs="1" />
                <xs:element ref="member" minOccurs="1" maxOccurs="1" />
                <xs:element ref="product" minOccurs="1" maxOccurs="1" />
                <xs:element ref="round" minOccurs="1" maxOccurs="1" />
                <xs:element ref="truncate" minOccurs="1" maxOccurs="1" />
                <xs:element ref="fieldValue" minOccurs="1" maxOccurs="1" />
                <xs:element ref="randomInteger" minOccurs="1" maxOccurs="1" />
                <xs:element ref="randomFloat" minOccurs="1" maxOccurs="1" />
                <xs:element ref="variable" minOccurs="1" maxOccurs="1" />
                <xs:element ref="outcomeMinimum" minOccurs="1" maxOccurs="1" />
                <xs:element ref="outcomeMaximum" minOccurs="1" maxOccurs="1" />
                <xs:element ref="testVariables" minOccurs="1" maxOccurs="1" />
                <xs:element ref="integerToFloat" minOccurs="1" maxOccurs="1" />
                <xs:element ref="inside" minOccurs="1" maxOccurs="1" />
                <xs:element ref="baseValue" minOccurs="1" maxOccurs="1" />
                <xs:element ref="patternMatch" minOccurs="1" maxOccurs="1" />
                <xs:element ref="mapResponsePoint" minOccurs="1" maxOccurs="1" />
                <xs:element ref="mapResponse" minOccurs="1" maxOccurs="1" />
                <xs:element ref="stringMatch" minOccurs="1" maxOccurs="1" />
                <xs:element ref="repeat" minOccurs="1" maxOccurs="1" />
                <xs:element ref="roundTo" minOccurs="1" maxOccurs="1" />
                <xs:element ref="lcm" minOccurs="1" maxOccurs="1" />
                <xs:element ref="gcd" minOccurs="1" maxOccurs="1" />
                <xs:element ref="min" minOccurs="1" maxOccurs="1" />
                <xs:element ref="max" minOccurs="1" maxOccurs="1" />
                <xs:element ref="mathConstant" minOccurs="1" maxOccurs="1" />
                <xs:element ref="statsOperator" minOccurs="1" maxOccurs="1" />
                <xs:element ref="mathOperator" minOccurs="1" maxOccurs="1" />
            </xs:choice>
        </xs:sequence>
        <xs:attributeGroup ref="caseSensitive.StringMatch.Attr" />
        <xs:attributeGroup ref="substring.StringMatch.Attr" />
    </xs:complexType>

    <xs:complexType name="Substring.Type" abstract="false" mixed="false">
        <xs:annotation>
            <xs:documentation source="documentation">
                The substring operator takes two sub-expressions which must both have an effective base-t-
                ype of string and single cardinality. The result is a single boolean with a value of true
                if the first expression is a substring of the second expression and false if it isn't. If
                either sub-expression is NULL then the result of the operator is NULL.
            </xs:documentation>
        </xs:annotation>
        <xs:sequence>
            <xs:choice minOccurs="2" maxOccurs="2">
                <xs:element ref="and" minOccurs="1" maxOccurs="1" />
                <xs:element ref="gt" minOccurs="1" maxOccurs="1" />
                <xs:element ref="not" minOccurs="1" maxOccurs="1" />
                <xs:element ref="lt" minOccurs="1" maxOccurs="1" />
                <xs:element ref="gte" minOccurs="1" maxOccurs="1" />
                <xs:element ref="lte" minOccurs="1" maxOccurs="1" />
                <xs:element ref="or" minOccurs="1" maxOccurs="1" />
                <xs:element ref="sum" minOccurs="1" maxOccurs="1" />
                <xs:element ref="durationLT" minOccurs="1" maxOccurs="1" />
                <xs:element ref="durationGTE" minOccurs="1" maxOccurs="1" />
                <xs:element ref="subtract" minOccurs="1" maxOccurs="1" />
                <xs:element ref="divide" minOccurs="1" maxOccurs="1" />
                <xs:element ref="multiple" minOccurs="1" maxOccurs="1" />
                <xs:element ref="ordered" minOccurs="1" maxOccurs="1" />
                <xs:element ref="customOperator" minOccurs="1" maxOccurs="1" />
                <xs:element ref="random" minOccurs="1" maxOccurs="1" />
                <xs:element ref="numberIncorrect" minOccurs="1" maxOccurs="1" />
                <xs:element ref="numberCorrect" minOccurs="1" maxOccurs="1" />
                <xs:element ref="numberPresented" minOccurs="1" maxOccurs="1" />
                <xs:element ref="numberResponded" minOccurs="1" maxOccurs="1" />
                <xs:element ref="numberSelected" minOccurs="1" maxOccurs="1" />
                <xs:element ref="substring" minOccurs="1" maxOccurs="1" />
                <xs:element ref="equalRounded" minOccurs="1" maxOccurs="1" />
                <xs:element ref="null" minOccurs="1" maxOccurs="1" />
                <xs:element ref="delete" minOccurs="1" maxOccurs="1" />
                <xs:element ref="match" minOccurs="1" maxOccurs="1" />
                <xs:element ref="index" minOccurs="1" maxOccurs="1" />
                <xs:element ref="power" minOccurs="1" maxOccurs="1" />
                <xs:element ref="equal" minOccurs="1" maxOccurs="1" />
                <xs:element ref="contains" minOccurs="1" maxOccurs="1" />
                <xs:element ref="containerSize" minOccurs="1" maxOccurs="1" />
                <xs:element ref="correct" minOccurs="1" maxOccurs="1" />
                <xs:element ref="default" minOccurs="1" maxOccurs="1" />
                <xs:element ref="anyN" minOccurs="1" maxOccurs="1" />
                <xs:element ref="integerDivide" minOccurs="1" maxOccurs="1" />
                <xs:element ref="integerModulus" minOccurs="1" maxOccurs="1" />
                <xs:element ref="isNull" minOccurs="1" maxOccurs="1" />
                <xs:element ref="member" minOccurs="1" maxOccurs="1" />
                <xs:element ref="product" minOccurs="1" maxOccurs="1" />
                <xs:element ref="round" minOccurs="1" maxOccurs="1" />
                <xs:element ref="truncate" minOccurs="1" maxOccurs="1" />
                <xs:element ref="fieldValue" minOccurs="1" maxOccurs="1" />
                <xs:element ref="randomInteger" minOccurs="1" maxOccurs="1" />
                <xs:element ref="randomFloat" minOccurs="1" maxOccurs="1" />
                <xs:element ref="variable" minOccurs="1" maxOccurs="1" />
                <xs:element ref="outcomeMinimum" minOccurs="1" maxOccurs="1" />
                <xs:element ref="outcomeMaximum" minOccurs="1" maxOccurs="1" />
                <xs:element ref="testVariables" minOccurs="1" maxOccurs="1" />
                <xs:element ref="integerToFloat" minOccurs="1" maxOccurs="1" />
                <xs:element ref="inside" minOccurs="1" maxOccurs="1" />
                <xs:element ref="baseValue" minOccurs="1" maxOccurs="1" />
                <xs:element ref="patternMatch" minOccurs="1" maxOccurs="1" />
                <xs:element ref="mapResponsePoint" minOccurs="1" maxOccurs="1" />
                <xs:element ref="mapResponse" minOccurs="1" maxOccurs="1" />
                <xs:element ref="stringMatch" minOccurs="1" maxOccurs="1" />
                <xs:element ref="repeat" minOccurs="1" maxOccurs="1" />
                <xs:element ref="roundTo" minOccurs="1" maxOccurs="1" />
                <xs:element ref="lcm" minOccurs="1" maxOccurs="1" />
                <xs:element ref="gcd" minOccurs="1" maxOccurs="1" />
                <xs:element ref="min" minOccurs="1" maxOccurs="1" />
                <xs:element ref="max" minOccurs="1" maxOccurs="1" />
                <xs:element ref="mathConstant" minOccurs="1" maxOccurs="1" />
                <xs:element ref="statsOperator" minOccurs="1" maxOccurs="1" />
                <xs:element ref="mathOperator" minOccurs="1" maxOccurs="1" />
            </xs:choice>
        </xs:sequence>
        <xs:attributeGroup ref="caseSensitive.Substring.Attr" />
    </xs:complexType>

    <xs:complexType name="Table.Type" abstract="false" mixed="false">
        <xs:annotation>
            <xs:documentation source="documentation">
                This provides the HTML 'table' tag functionality within the QTI context.
            </xs:documentation>
        </xs:annotation>
        <xs:complexContent>
            <xs:extension base="BaseSequenceXBase.Type">
                <xs:sequence>
                    <xs:element ref="caption" minOccurs="0" maxOccurs="1" />
                    <xs:element ref="col" minOccurs="0" maxOccurs="unbounded" />
                    <xs:element ref="colgroup" minOccurs="0" maxOccurs="unbounded" />
                    <xs:element ref="thead" minOccurs="0" maxOccurs="1" />
                    <xs:element ref="tfoot" minOccurs="0" maxOccurs="1" />
                    <xs:element ref="tbody" minOccurs="1" maxOccurs="unbounded" />
                </xs:sequence>
                <xs:attributeGroup ref="summary.Table.Attr" />
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <xs:complexType name="TablePart.Type" abstract="false" mixed="false">
        <xs:annotation>
            <xs:documentation source="documentation">
                This allows the construction of the internal structures in the HTML Table tag, namely: the
                head, foot and body of the table.
            </xs:documentation>
        </xs:annotation>
        <xs:complexContent>
            <xs:extension base="BaseSequence.Type">
                <xs:sequence>
                    <xs:element ref="tr" minOccurs="1" maxOccurs="unbounded" />
                </xs:sequence>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <xs:complexType name="TDH.Type" abstract="false" mixed="true">
        <xs:annotation>
            <xs:documentation source="documentation">
                This class allows the defnition of the contents of the HTML 'td' and 'th' tags i.e. the t-
                able cells used within the table rows.
            </xs:documentation>
        </xs:annotation>
        <xs:complexContent>
            <xs:extension base="BaseSequence.Type">
                <xs:sequence>
                    <xs:choice minOccurs="0" maxOccurs="unbounded">
                        <xs:element ref="qti-printed-variable" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="qti-feedback-block" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="qti-hottext" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="qti-feedback-inline" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="qti-template-inline" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="qti-template-block" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="m3:math" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="xi:include" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="qti-text-entry-interaction" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="qti-inline-choice-interaction" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="qti-end-attempt-interaction" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="qti-custom-interaction" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="qti-drawing-interaction" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="qti-gap-match-interaction" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="qti-match-interaction" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="qti-graphic-gap-match-interaction" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="qti-hotspot-interaction" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="qti-graphic-order-interaction" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="qti-select-point-interaction" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="qti-graphic-associate-interaction" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="qti-slider-interaction" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="qti-choice-interaction" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="qti-media-interaction" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="qti-hottext-interaction" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="qti-order-interaction" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="qti-extended-text-interaction" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="qti-upload-interaction" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="qti-associate-interaction" minOccurs="1" maxOccurs="1" />
                        <xs:choice minOccurs="1" maxOccurs="1">
                            <xs:element ref="pre" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="h1" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="h2" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="h3" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="h4" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="h5" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="h6" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="p" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="address" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="dl" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="ol" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="ul" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="br" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="hr" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="img" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="object" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="blockquote" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="em" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="a" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="code" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="span" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="sub" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="acronym" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="big" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="tt" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="kbd" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="q" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="i" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="dfn" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="abbr" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="strong" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="sup" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="var" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="small" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="samp" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="b" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="cite" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="table" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="div" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="bdo" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="bdi" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="figure" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="audio" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="video" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="article" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="aside" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="footer" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="header" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="label" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="nav" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="section" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="ruby" minOccurs="1" maxOccurs="1" />
                            <xs:choice minOccurs="1" maxOccurs="1">
                                <xs:element ref="ssml:p" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="ssml:s" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="ssml:say-as" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="ssml:phoneme" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="ssml:sub" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="ssml:voice" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="ssml:emphasis" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="ssml:break" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="ssml:prosody" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="ssml:mark" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="ssml:audio" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="ssml:speak" minOccurs="1" maxOccurs="1" />
                            </xs:choice>
                        </xs:choice>
                    </xs:choice>
                </xs:sequence>
                <xs:attributeGroup ref="headers.TDH.Attr" />
                <xs:attributeGroup ref="scope.TDH.Attr" />
                <xs:attributeGroup ref="abbr.TDH.Attr" />
                <xs:attributeGroup ref="axis.TDH.Attr" />
                <xs:attributeGroup ref="rowspan.TDH.Attr" />
                <xs:attributeGroup ref="colspan.TDH.Attr" />
                <xs:attributeGroup ref="align.TDH.Attr" />
                <xs:attributeGroup ref="valign.TDH.Attr" />
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <xs:complexType name="TemplateBlock.Type" abstract="false" mixed="true">
        <xs:annotation>
            <xs:documentation source="documentation">
                This class is used to define the block content structures that are available for the crea-
                tion of Item templates. A templateBlock must not contain any interactions, either directly
                or indirectly.
            </xs:documentation>
        </xs:annotation>
        <xs:complexContent>
            <xs:extension base="BaseSequenceXBase.Type">
                <xs:sequence>
                    <xs:choice minOccurs="0" maxOccurs="unbounded">
                        <xs:choice minOccurs="1" maxOccurs="1">
                            <xs:element ref="pre" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="h1" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="h2" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="h3" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="h4" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="h5" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="h6" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="p" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="address" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="dl" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="ol" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="ul" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="br" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="hr" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="img" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="object" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="blockquote" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="em" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="a" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="code" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="span" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="sub" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="acronym" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="big" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="tt" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="kbd" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="q" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="i" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="dfn" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="abbr" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="strong" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="sup" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="var" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="small" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="samp" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="b" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="cite" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="table" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="div" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="bdo" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="bdi" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="figure" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="audio" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="video" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="article" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="aside" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="footer" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="header" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="label" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="nav" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="section" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="ruby" minOccurs="1" maxOccurs="1" />
                            <xs:choice minOccurs="1" maxOccurs="1">
                                <xs:element ref="ssml:p" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="ssml:s" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="ssml:say-as" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="ssml:phoneme" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="ssml:sub" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="ssml:voice" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="ssml:emphasis" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="ssml:break" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="ssml:prosody" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="ssml:mark" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="ssml:audio" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="ssml:speak" minOccurs="1" maxOccurs="1" />
                            </xs:choice>
                        </xs:choice>
                        <xs:element ref="m3:math" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="xi:include" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="qti-template-block" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="qti-template-inline" minOccurs="1" maxOccurs="1" />
                        <xs:element name="qti-feedback-block" type="TemplateBlockFeedbackBlock.Type" minOccurs="1" maxOccurs="1"/>
                        <xs:element ref="qti-feedback-inline" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="qti-printed-variable" minOccurs="1" maxOccurs="1" />
                    </xs:choice>
                    <xs:element ref="stylesheet" minOccurs="0" maxOccurs="unbounded" />
                </xs:sequence>
                <xs:attributeGroup ref="template-identifier.TemplateBlock.Attr" />
                <xs:attributeGroup ref="show-hide.TemplateBlock.Attr" />
                <xs:attributeGroup ref="identifier.TemplateBlock.Attr" />
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <xs:complexType name="TemplateBlockFeedbackBlock.Type" abstract="false" mixed="true">
        <xs:annotation>
            <xs:documentation source="documentation">
                This enables the Block content to be placed in template blocks. This structure is used to
                add constraints on how the block content can be used in recursive block templates.
            </xs:documentation>
        </xs:annotation>
        <xs:complexContent>
            <xs:extension base="BaseSequenceXBase.Type">
                <xs:sequence>
                    <xs:choice minOccurs="0" maxOccurs="unbounded">
                        <xs:choice minOccurs="1" maxOccurs="1">
                            <xs:element ref="pre" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="h1" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="h2" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="h3" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="h4" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="h5" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="h6" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="p" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="address" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="dl" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="ol" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="ul" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="br" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="hr" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="img" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="object" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="blockquote" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="em" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="a" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="code" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="span" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="sub" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="acronym" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="big" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="tt" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="kbd" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="q" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="i" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="dfn" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="abbr" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="strong" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="sup" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="var" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="small" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="samp" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="b" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="cite" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="table" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="div" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="bdo" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="bdi" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="figure" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="audio" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="video" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="article" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="aside" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="footer" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="header" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="label" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="nav" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="section" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="ruby" minOccurs="1" maxOccurs="1" />
                            <xs:choice minOccurs="1" maxOccurs="1">
                                <xs:element ref="ssml:p" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="ssml:s" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="ssml:say-as" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="ssml:phoneme" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="ssml:sub" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="ssml:voice" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="ssml:emphasis" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="ssml:break" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="ssml:prosody" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="ssml:mark" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="ssml:audio" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="ssml:speak" minOccurs="1" maxOccurs="1" />
                            </xs:choice>
                        </xs:choice>
                        <xs:element ref="m3:math" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="xi:include" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="qti-template-block" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="qti-template-inline" minOccurs="1" maxOccurs="1" />
                        <xs:element name="qti-feedback-block" type="TemplateBlockFeedbackBlock.Type" minOccurs="1" maxOccurs="1"/>
                        <xs:element ref="qti-feedback-inline" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="qti-printed-variable" minOccurs="1" maxOccurs="1" />
                    </xs:choice>
                    <xs:element ref="stylesheet" minOccurs="0" maxOccurs="unbounded" />
                </xs:sequence>
                <xs:attributeGroup ref="outcome-identifier.TemplateBlockFeedbackBlock.Attr" />
                <xs:attributeGroup ref="show-hide.TemplateBlockFeedbackBlock.Attr" />
                <xs:attributeGroup ref="identifier.TemplateBlockFeedbackBlock.Attr" />
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <xs:complexType name="TemplateCondition.Type" abstract="false" mixed="false">
        <xs:annotation>
            <xs:documentation source="documentation">
                This class enables the definition of the template processing 'If..Then..Else' clause. If
                the expression given in the templateIf or templateElseIf evaluates to 'true' then the sub-
                -rules contained within it are followed and any following templateElseIf or templateElse
                parts are ignored for this template condition. If the expression given in the templateIf
                or templateElseIf does not evaluate to 'true' then consideration passes to the next templ-
                ateElseIf or, if there are no more templateElseIf parts then the sub-rules of the templat-
                eElse are followed (if specified).
            </xs:documentation>
        </xs:annotation>
        <xs:sequence>
            <xs:element ref="templateIf" minOccurs="1" maxOccurs="1" />
            <xs:element ref="templateElseIf" minOccurs="0" maxOccurs="unbounded" />
            <xs:element ref="templateElse" minOccurs="0" maxOccurs="1" />
        </xs:sequence>
    </xs:complexType>

    <xs:complexType name="TemplateConstraint.Type" abstract="false" mixed="false">
        <xs:annotation>
            <xs:documentation source="documentation">
                A templateConstraint contains an expression which must have an effective baseType of bool-
                ean and single cardinality. For more information about the runtime data model employed see
                Expressions (Section 2). If the expression is 'false' (including if the expression is NUL-
                L), the template variables are set to their default values and templateProcessing is rest-
                arted; this happens repeatedly until the expression is 'true' or the maximum number of it-
                erations is reached. In the event that the maximum number of iterations is reached, any d-
                efault values provided for the variables during declaration are used. Processing then con-
                tinues with the next templateRule after the templateConstraint, or finishes if there are
                no further templateRules. By using a templateConstraint, authors can ensure that the valu-
                es of variables set during templateProcessing satisfy the condition specified by the bool-
                ean expression. For example, two randomly selected numbers might be required which have no
                common factors. A templateConstraint may occur anywhere as a child of templateProcessing.
                It may not be used as a child of any other element. Any number of templateConstraints may
                be used, though two or more consecutive templateConstraints could be combined using the '-
                and' element to combine their boolean expressions. The maximum number of times that the o-
                perations preceding the templateConstraint can be expected to be performed is assumed to
                be 100; implementations may permit more iterations, but there must be a finite maximum nu-
                mber of iterations. This prevents the occurrence of an endless loop. It is the responsibi-
                lity of the author to provide default values for any variables assigned under a templateC-
                onstraint.
            </xs:documentation>
        </xs:annotation>
        <xs:sequence>
            <xs:choice minOccurs="1" maxOccurs="1">
                <xs:element ref="and" minOccurs="1" maxOccurs="1" />
                <xs:element ref="gt" minOccurs="1" maxOccurs="1" />
                <xs:element ref="not" minOccurs="1" maxOccurs="1" />
                <xs:element ref="lt" minOccurs="1" maxOccurs="1" />
                <xs:element ref="gte" minOccurs="1" maxOccurs="1" />
                <xs:element ref="lte" minOccurs="1" maxOccurs="1" />
                <xs:element ref="or" minOccurs="1" maxOccurs="1" />
                <xs:element ref="sum" minOccurs="1" maxOccurs="1" />
                <xs:element ref="durationLT" minOccurs="1" maxOccurs="1" />
                <xs:element ref="durationGTE" minOccurs="1" maxOccurs="1" />
                <xs:element ref="subtract" minOccurs="1" maxOccurs="1" />
                <xs:element ref="divide" minOccurs="1" maxOccurs="1" />
                <xs:element ref="multiple" minOccurs="1" maxOccurs="1" />
                <xs:element ref="ordered" minOccurs="1" maxOccurs="1" />
                <xs:element ref="customOperator" minOccurs="1" maxOccurs="1" />
                <xs:element ref="random" minOccurs="1" maxOccurs="1" />
                <xs:element ref="numberIncorrect" minOccurs="1" maxOccurs="1" />
                <xs:element ref="numberCorrect" minOccurs="1" maxOccurs="1" />
                <xs:element ref="numberPresented" minOccurs="1" maxOccurs="1" />
                <xs:element ref="numberResponded" minOccurs="1" maxOccurs="1" />
                <xs:element ref="numberSelected" minOccurs="1" maxOccurs="1" />
                <xs:element ref="substring" minOccurs="1" maxOccurs="1" />
                <xs:element ref="equalRounded" minOccurs="1" maxOccurs="1" />
                <xs:element ref="null" minOccurs="1" maxOccurs="1" />
                <xs:element ref="delete" minOccurs="1" maxOccurs="1" />
                <xs:element ref="match" minOccurs="1" maxOccurs="1" />
                <xs:element ref="index" minOccurs="1" maxOccurs="1" />
                <xs:element ref="power" minOccurs="1" maxOccurs="1" />
                <xs:element ref="equal" minOccurs="1" maxOccurs="1" />
                <xs:element ref="contains" minOccurs="1" maxOccurs="1" />
                <xs:element ref="containerSize" minOccurs="1" maxOccurs="1" />
                <xs:element ref="correct" minOccurs="1" maxOccurs="1" />
                <xs:element ref="default" minOccurs="1" maxOccurs="1" />
                <xs:element ref="anyN" minOccurs="1" maxOccurs="1" />
                <xs:element ref="integerDivide" minOccurs="1" maxOccurs="1" />
                <xs:element ref="integerModulus" minOccurs="1" maxOccurs="1" />
                <xs:element ref="isNull" minOccurs="1" maxOccurs="1" />
                <xs:element ref="member" minOccurs="1" maxOccurs="1" />
                <xs:element ref="product" minOccurs="1" maxOccurs="1" />
                <xs:element ref="round" minOccurs="1" maxOccurs="1" />
                <xs:element ref="truncate" minOccurs="1" maxOccurs="1" />
                <xs:element ref="fieldValue" minOccurs="1" maxOccurs="1" />
                <xs:element ref="randomInteger" minOccurs="1" maxOccurs="1" />
                <xs:element ref="randomFloat" minOccurs="1" maxOccurs="1" />
                <xs:element ref="variable" minOccurs="1" maxOccurs="1" />
                <xs:element ref="outcomeMinimum" minOccurs="1" maxOccurs="1" />
                <xs:element ref="outcomeMaximum" minOccurs="1" maxOccurs="1" />
                <xs:element ref="testVariables" minOccurs="1" maxOccurs="1" />
                <xs:element ref="integerToFloat" minOccurs="1" maxOccurs="1" />
                <xs:element ref="inside" minOccurs="1" maxOccurs="1" />
                <xs:element ref="baseValue" minOccurs="1" maxOccurs="1" />
                <xs:element ref="patternMatch" minOccurs="1" maxOccurs="1" />
                <xs:element ref="mapResponsePoint" minOccurs="1" maxOccurs="1" />
                <xs:element ref="mapResponse" minOccurs="1" maxOccurs="1" />
                <xs:element ref="stringMatch" minOccurs="1" maxOccurs="1" />
                <xs:element ref="repeat" minOccurs="1" maxOccurs="1" />
                <xs:element ref="roundTo" minOccurs="1" maxOccurs="1" />
                <xs:element ref="lcm" minOccurs="1" maxOccurs="1" />
                <xs:element ref="gcd" minOccurs="1" maxOccurs="1" />
                <xs:element ref="min" minOccurs="1" maxOccurs="1" />
                <xs:element ref="max" minOccurs="1" maxOccurs="1" />
                <xs:element ref="mathConstant" minOccurs="1" maxOccurs="1" />
                <xs:element ref="statsOperator" minOccurs="1" maxOccurs="1" />
                <xs:element ref="mathOperator" minOccurs="1" maxOccurs="1" />
            </xs:choice>
        </xs:sequence>
    </xs:complexType>

    <xs:complexType name="TemplateDeclaration.Type" abstract="false" mixed="false">
        <xs:annotation>
            <xs:documentation source="documentation">
                Template declarations declare item variables that are to be used specifically for the pur-
                poses of cloning items. They can have their value set only during templateProcessing. They
                are referred to within the itemBody in order to individualize the clone and possibly also
                within the responseProcessing rules if the cloning process affects the way the item is sc-
                ored.
            </xs:documentation>
        </xs:annotation>
        <xs:sequence>
            <xs:element ref="defaultValue" minOccurs="0" maxOccurs="1" />
        </xs:sequence>
        <xs:attributeGroup ref="identifier.TemplateDeclaration.Attr" />
        <xs:attributeGroup ref="cardinality.TemplateDeclaration.Attr" />
        <xs:attributeGroup ref="baseType.TemplateDeclaration.Attr" />
        <xs:attributeGroup ref="paramVariable.TemplateDeclaration.Attr" />
        <xs:attributeGroup ref="mathVariable.TemplateDeclaration.Attr" />
    </xs:complexType>

    <xs:complexType name="TemplateDefault.Type" abstract="false" mixed="false">
        <xs:annotation>
            <xs:documentation source="documentation">
                The default value of a template variable in an item can be overridden based on the test c-
                ontext in which the template is instantiated. The value is obtained by evaluating an expr-
                ession defined within the reference to the item at test level and which may therefore dep-
                end on the values of variables taken from other items in the test or from outcomes defined
                at test level itself. For consistent results it is vital that the expression is evaluated
                at the correct time. When the assessmentItemRef occurs in a testPart navigated in linear
                mode the expression is evaluated immediately prior to the start of the first attempt, aft-
                er any pre-conditions are evaluated and acted upon but before the templateProcessing rules
                of the item itself are followed. In nonlinear mode the expression is evaluated at the sta-
                rt of the testPart. In both cases, the timing is unaffected by the submissionMode in effe-
                ct. Care needs to be taken to ensure that values of response variables are not used before
                they have been submitted and that outcome variables are not used before their values have
                been set by the corresponding response or outcomes processing steps. The facility of over-
                riding template defaults allows item templates to be linked to other items (or templates)
                within a test. A candidate response from one item can be used directly to affect the pres-
                entation or even the behaviour of an item presented after it. However once the template is
                instantiated it operates independently - there is no dynamic link created between the ite-
                ms and no concept of a shared variable space between them.
            </xs:documentation>
        </xs:annotation>
        <xs:sequence>
            <xs:choice minOccurs="1" maxOccurs="1">
                <xs:element ref="and" minOccurs="1" maxOccurs="1" />
                <xs:element ref="gt" minOccurs="1" maxOccurs="1" />
                <xs:element ref="not" minOccurs="1" maxOccurs="1" />
                <xs:element ref="lt" minOccurs="1" maxOccurs="1" />
                <xs:element ref="gte" minOccurs="1" maxOccurs="1" />
                <xs:element ref="lte" minOccurs="1" maxOccurs="1" />
                <xs:element ref="or" minOccurs="1" maxOccurs="1" />
                <xs:element ref="sum" minOccurs="1" maxOccurs="1" />
                <xs:element ref="durationLT" minOccurs="1" maxOccurs="1" />
                <xs:element ref="durationGTE" minOccurs="1" maxOccurs="1" />
                <xs:element ref="subtract" minOccurs="1" maxOccurs="1" />
                <xs:element ref="divide" minOccurs="1" maxOccurs="1" />
                <xs:element ref="multiple" minOccurs="1" maxOccurs="1" />
                <xs:element ref="ordered" minOccurs="1" maxOccurs="1" />
                <xs:element ref="customOperator" minOccurs="1" maxOccurs="1" />
                <xs:element ref="random" minOccurs="1" maxOccurs="1" />
                <xs:element ref="numberIncorrect" minOccurs="1" maxOccurs="1" />
                <xs:element ref="numberCorrect" minOccurs="1" maxOccurs="1" />
                <xs:element ref="numberPresented" minOccurs="1" maxOccurs="1" />
                <xs:element ref="numberResponded" minOccurs="1" maxOccurs="1" />
                <xs:element ref="numberSelected" minOccurs="1" maxOccurs="1" />
                <xs:element ref="substring" minOccurs="1" maxOccurs="1" />
                <xs:element ref="equalRounded" minOccurs="1" maxOccurs="1" />
                <xs:element ref="null" minOccurs="1" maxOccurs="1" />
                <xs:element ref="delete" minOccurs="1" maxOccurs="1" />
                <xs:element ref="match" minOccurs="1" maxOccurs="1" />
                <xs:element ref="index" minOccurs="1" maxOccurs="1" />
                <xs:element ref="power" minOccurs="1" maxOccurs="1" />
                <xs:element ref="equal" minOccurs="1" maxOccurs="1" />
                <xs:element ref="contains" minOccurs="1" maxOccurs="1" />
                <xs:element ref="containerSize" minOccurs="1" maxOccurs="1" />
                <xs:element ref="correct" minOccurs="1" maxOccurs="1" />
                <xs:element ref="default" minOccurs="1" maxOccurs="1" />
                <xs:element ref="anyN" minOccurs="1" maxOccurs="1" />
                <xs:element ref="integerDivide" minOccurs="1" maxOccurs="1" />
                <xs:element ref="integerModulus" minOccurs="1" maxOccurs="1" />
                <xs:element ref="isNull" minOccurs="1" maxOccurs="1" />
                <xs:element ref="member" minOccurs="1" maxOccurs="1" />
                <xs:element ref="product" minOccurs="1" maxOccurs="1" />
                <xs:element ref="round" minOccurs="1" maxOccurs="1" />
                <xs:element ref="truncate" minOccurs="1" maxOccurs="1" />
                <xs:element ref="fieldValue" minOccurs="1" maxOccurs="1" />
                <xs:element ref="randomInteger" minOccurs="1" maxOccurs="1" />
                <xs:element ref="randomFloat" minOccurs="1" maxOccurs="1" />
                <xs:element ref="variable" minOccurs="1" maxOccurs="1" />
                <xs:element ref="outcomeMinimum" minOccurs="1" maxOccurs="1" />
                <xs:element ref="outcomeMaximum" minOccurs="1" maxOccurs="1" />
                <xs:element ref="testVariables" minOccurs="1" maxOccurs="1" />
                <xs:element ref="integerToFloat" minOccurs="1" maxOccurs="1" />
                <xs:element ref="inside" minOccurs="1" maxOccurs="1" />
                <xs:element ref="baseValue" minOccurs="1" maxOccurs="1" />
                <xs:element ref="patternMatch" minOccurs="1" maxOccurs="1" />
                <xs:element ref="mapResponsePoint" minOccurs="1" maxOccurs="1" />
                <xs:element ref="mapResponse" minOccurs="1" maxOccurs="1" />
                <xs:element ref="stringMatch" minOccurs="1" maxOccurs="1" />
                <xs:element ref="repeat" minOccurs="1" maxOccurs="1" />
                <xs:element ref="roundTo" minOccurs="1" maxOccurs="1" />
                <xs:element ref="lcm" minOccurs="1" maxOccurs="1" />
                <xs:element ref="gcd" minOccurs="1" maxOccurs="1" />
                <xs:element ref="min" minOccurs="1" maxOccurs="1" />
                <xs:element ref="max" minOccurs="1" maxOccurs="1" />
                <xs:element ref="mathConstant" minOccurs="1" maxOccurs="1" />
                <xs:element ref="statsOperator" minOccurs="1" maxOccurs="1" />
                <xs:element ref="mathOperator" minOccurs="1" maxOccurs="1" />
            </xs:choice>
        </xs:sequence>
        <xs:attributeGroup ref="templateIdentifier.TemplateDefault.Attr" />
    </xs:complexType>

    <xs:complexType name="TemplateElse.Type" abstract="false" mixed="false">
        <xs:annotation>
            <xs:documentation source="documentation">
                This enables the definition of the 'Else' clause of the 'If..Then..Else' rule construction
                when defining a template.
            </xs:documentation>
        </xs:annotation>
        <xs:sequence>
            <xs:choice minOccurs="0" maxOccurs="unbounded">
                <xs:element ref="setTemplateValue" minOccurs="1" maxOccurs="1" />
                <xs:element ref="exitTemplate" minOccurs="1" maxOccurs="1" />
                <xs:element ref="templateCondition" minOccurs="1" maxOccurs="1" />
                <xs:element ref="setDefaultValue" minOccurs="1" maxOccurs="1" />
                <xs:element ref="setCorrectResponse" minOccurs="1" maxOccurs="1" />
                <xs:element ref="templateConstraint" minOccurs="1" maxOccurs="1" />
            </xs:choice>
        </xs:sequence>
    </xs:complexType>

    <xs:complexType name="TemplateIf.Type" abstract="false" mixed="false">
        <xs:annotation>
            <xs:documentation source="documentation">
                This provides the 'If' and 'ElseIf' clauses of the 'If..Then..Else' for the template proc-
                essing functionality. A responseIf part consists of an expression which must have an effe-
                ctive baseType of boolean and single cardinality. For more information about the runtime
                data model employed see Expressions (Section 2). It also contains a set of sub-rules. If
                the expression is true then the sub-rules are processed, otherwise they are skipped (incl-
                uding if the expression is NULL) and the following templateElseIf or templateElse parts (-
                if any) are considered instead.
            </xs:documentation>
        </xs:annotation>
        <xs:sequence>
            <xs:choice minOccurs="1" maxOccurs="1">
                <xs:element ref="and" minOccurs="1" maxOccurs="1" />
                <xs:element ref="gt" minOccurs="1" maxOccurs="1" />
                <xs:element ref="not" minOccurs="1" maxOccurs="1" />
                <xs:element ref="lt" minOccurs="1" maxOccurs="1" />
                <xs:element ref="gte" minOccurs="1" maxOccurs="1" />
                <xs:element ref="lte" minOccurs="1" maxOccurs="1" />
                <xs:element ref="or" minOccurs="1" maxOccurs="1" />
                <xs:element ref="sum" minOccurs="1" maxOccurs="1" />
                <xs:element ref="durationLT" minOccurs="1" maxOccurs="1" />
                <xs:element ref="durationGTE" minOccurs="1" maxOccurs="1" />
                <xs:element ref="subtract" minOccurs="1" maxOccurs="1" />
                <xs:element ref="divide" minOccurs="1" maxOccurs="1" />
                <xs:element ref="multiple" minOccurs="1" maxOccurs="1" />
                <xs:element ref="ordered" minOccurs="1" maxOccurs="1" />
                <xs:element ref="customOperator" minOccurs="1" maxOccurs="1" />
                <xs:element ref="random" minOccurs="1" maxOccurs="1" />
                <xs:element ref="numberIncorrect" minOccurs="1" maxOccurs="1" />
                <xs:element ref="numberCorrect" minOccurs="1" maxOccurs="1" />
                <xs:element ref="numberPresented" minOccurs="1" maxOccurs="1" />
                <xs:element ref="numberResponded" minOccurs="1" maxOccurs="1" />
                <xs:element ref="numberSelected" minOccurs="1" maxOccurs="1" />
                <xs:element ref="substring" minOccurs="1" maxOccurs="1" />
                <xs:element ref="equalRounded" minOccurs="1" maxOccurs="1" />
                <xs:element ref="null" minOccurs="1" maxOccurs="1" />
                <xs:element ref="delete" minOccurs="1" maxOccurs="1" />
                <xs:element ref="match" minOccurs="1" maxOccurs="1" />
                <xs:element ref="index" minOccurs="1" maxOccurs="1" />
                <xs:element ref="power" minOccurs="1" maxOccurs="1" />
                <xs:element ref="equal" minOccurs="1" maxOccurs="1" />
                <xs:element ref="contains" minOccurs="1" maxOccurs="1" />
                <xs:element ref="containerSize" minOccurs="1" maxOccurs="1" />
                <xs:element ref="correct" minOccurs="1" maxOccurs="1" />
                <xs:element ref="default" minOccurs="1" maxOccurs="1" />
                <xs:element ref="anyN" minOccurs="1" maxOccurs="1" />
                <xs:element ref="integerDivide" minOccurs="1" maxOccurs="1" />
                <xs:element ref="integerModulus" minOccurs="1" maxOccurs="1" />
                <xs:element ref="isNull" minOccurs="1" maxOccurs="1" />
                <xs:element ref="member" minOccurs="1" maxOccurs="1" />
                <xs:element ref="product" minOccurs="1" maxOccurs="1" />
                <xs:element ref="round" minOccurs="1" maxOccurs="1" />
                <xs:element ref="truncate" minOccurs="1" maxOccurs="1" />
                <xs:element ref="fieldValue" minOccurs="1" maxOccurs="1" />
                <xs:element ref="randomInteger" minOccurs="1" maxOccurs="1" />
                <xs:element ref="randomFloat" minOccurs="1" maxOccurs="1" />
                <xs:element ref="variable" minOccurs="1" maxOccurs="1" />
                <xs:element ref="outcomeMinimum" minOccurs="1" maxOccurs="1" />
                <xs:element ref="outcomeMaximum" minOccurs="1" maxOccurs="1" />
                <xs:element ref="testVariables" minOccurs="1" maxOccurs="1" />
                <xs:element ref="integerToFloat" minOccurs="1" maxOccurs="1" />
                <xs:element ref="inside" minOccurs="1" maxOccurs="1" />
                <xs:element ref="baseValue" minOccurs="1" maxOccurs="1" />
                <xs:element ref="patternMatch" minOccurs="1" maxOccurs="1" />
                <xs:element ref="mapResponsePoint" minOccurs="1" maxOccurs="1" />
                <xs:element ref="mapResponse" minOccurs="1" maxOccurs="1" />
                <xs:element ref="stringMatch" minOccurs="1" maxOccurs="1" />
                <xs:element ref="repeat" minOccurs="1" maxOccurs="1" />
                <xs:element ref="roundTo" minOccurs="1" maxOccurs="1" />
                <xs:element ref="lcm" minOccurs="1" maxOccurs="1" />
                <xs:element ref="gcd" minOccurs="1" maxOccurs="1" />
                <xs:element ref="min" minOccurs="1" maxOccurs="1" />
                <xs:element ref="max" minOccurs="1" maxOccurs="1" />
                <xs:element ref="mathConstant" minOccurs="1" maxOccurs="1" />
                <xs:element ref="statsOperator" minOccurs="1" maxOccurs="1" />
                <xs:element ref="mathOperator" minOccurs="1" maxOccurs="1" />
            </xs:choice>
            <xs:choice minOccurs="0" maxOccurs="unbounded">
                <xs:element ref="setTemplateValue" minOccurs="1" maxOccurs="1" />
                <xs:element ref="exitTemplate" minOccurs="1" maxOccurs="1" />
                <xs:element ref="templateCondition" minOccurs="1" maxOccurs="1" />
                <xs:element ref="setDefaultValue" minOccurs="1" maxOccurs="1" />
                <xs:element ref="setCorrectResponse" minOccurs="1" maxOccurs="1" />
                <xs:element ref="templateConstraint" minOccurs="1" maxOccurs="1" />
            </xs:choice>
        </xs:sequence>
    </xs:complexType>

    <xs:complexType name="TemplateInline.Type" abstract="false" mixed="true">
        <xs:annotation>
            <xs:documentation source="documentation">
                This enables the Inline content to be placed in templates. This structure is used to add
                constraints on how the inline content can be used in recursive templates.
            </xs:documentation>
        </xs:annotation>
        <xs:complexContent>
            <xs:extension base="BaseSequenceXBase.Type">
                <xs:sequence>
                    <xs:choice minOccurs="0" maxOccurs="unbounded">
                        <xs:element ref="qti-hottext" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="qti-printed-variable" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="qti-gap" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="qti-feedback-inline" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="qti-template-inline" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="m3:math" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="xi:include" minOccurs="1" maxOccurs="1" />
                        <xs:choice minOccurs="1" maxOccurs="1">
                            <xs:element ref="img" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="br" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="object" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="em" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="a" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="code" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="span" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="sub" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="acronym" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="big" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="tt" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="kbd" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="q" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="i" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="dfn" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="abbr" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="strong" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="sup" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="var" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="small" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="samp" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="b" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="cite" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="bdo" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="bdi" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="label" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="ruby" minOccurs="1" maxOccurs="1" />
                            <xs:choice minOccurs="1" maxOccurs="1">
                                <xs:element ref="ssml:p" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="ssml:s" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="ssml:say-as" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="ssml:phoneme" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="ssml:sub" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="ssml:voice" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="ssml:emphasis" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="ssml:break" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="ssml:prosody" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="ssml:mark" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="ssml:audio" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="ssml:speak" minOccurs="1" maxOccurs="1" />
                            </xs:choice>
                        </xs:choice>
                    </xs:choice>
                </xs:sequence>
                <xs:attributeGroup ref="template-identifier.TemplateInline.Attr" />
                <xs:attributeGroup ref="show-hide.TemplateInline.Attr" />
                <xs:attributeGroup ref="identifier.TemplateInline.Attr" />
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <xs:complexType name="TemplateProcessing.Type" abstract="false" mixed="false">
        <xs:annotation>
            <xs:documentation source="documentation">
                Template processing consists of one or more templateRules that are followed by the cloning
                engine or delivery system in order to assign values to the template variables. Template p-
                rocessing is identical in form to responseProcessing except that the purpose is to assign
                values to template variables, not outcome variables.
            </xs:documentation>
        </xs:annotation>
        <xs:sequence>
            <xs:choice minOccurs="1" maxOccurs="unbounded">
                <xs:element ref="setTemplateValue" minOccurs="1" maxOccurs="1" />
                <xs:element ref="exitTemplate" minOccurs="1" maxOccurs="1" />
                <xs:element ref="templateCondition" minOccurs="1" maxOccurs="1" />
                <xs:element ref="setDefaultValue" minOccurs="1" maxOccurs="1" />
                <xs:element ref="setCorrectResponse" minOccurs="1" maxOccurs="1" />
                <xs:element ref="templateConstraint" minOccurs="1" maxOccurs="1" />
            </xs:choice>
        </xs:sequence>
    </xs:complexType>

    <xs:complexType name="TestFeedback.Type" abstract="false" mixed="true">
        <xs:annotation>
            <xs:documentation source="documentation">
                This enables the definition of the test-level feedback including the content and when the
                feedback is to be revealed.
            </xs:documentation>
        </xs:annotation>
        <xs:sequence>
            <xs:choice minOccurs="0" maxOccurs="unbounded">
                <xs:element ref="qti-printed-variable" minOccurs="1" maxOccurs="1" />
                <xs:element ref="qti-hottext" minOccurs="1" maxOccurs="1" />
                <xs:element ref="qti-template-inline" minOccurs="1" maxOccurs="1" />
                <xs:element ref="qti-template-block" minOccurs="1" maxOccurs="1" />
                <xs:element ref="m3:math" minOccurs="1" maxOccurs="1" />
                <xs:element ref="xi:include" minOccurs="1" maxOccurs="1" />
                <xs:choice minOccurs="1" maxOccurs="1">
                    <xs:element ref="pre" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="h1" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="h2" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="h3" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="h4" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="h5" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="h6" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="p" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="address" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="dl" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="ol" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="ul" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="br" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="hr" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="img" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="object" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="blockquote" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="em" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="a" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="code" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="span" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="sub" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="acronym" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="big" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="tt" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="kbd" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="q" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="i" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="dfn" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="abbr" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="strong" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="sup" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="var" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="small" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="samp" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="b" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="cite" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="table" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="div" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="bdo" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="bdi" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="figure" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="audio" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="video" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="article" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="aside" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="footer" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="header" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="label" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="nav" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="section" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="ruby" minOccurs="1" maxOccurs="1" />
                    <xs:choice minOccurs="1" maxOccurs="1">
                        <xs:element ref="ssml:p" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="ssml:s" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="ssml:say-as" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="ssml:phoneme" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="ssml:sub" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="ssml:voice" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="ssml:emphasis" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="ssml:break" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="ssml:prosody" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="ssml:mark" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="ssml:audio" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="ssml:speak" minOccurs="1" maxOccurs="1" />
                    </xs:choice>
                </xs:choice>
            </xs:choice>
            <xs:element ref="stylesheet" minOccurs="0" maxOccurs="unbounded" />
        </xs:sequence>
        <xs:attributeGroup ref="access.TestFeedback.Attr" />
        <xs:attributeGroup ref="outcomeIdentifier.TestFeedback.Attr" />
        <xs:attributeGroup ref="showHide.TestFeedback.Attr" />
        <xs:attributeGroup ref="identifier.TestFeedback.Attr" />
        <xs:attributeGroup ref="title.TestFeedback.Attr" />
    </xs:complexType>

    <xs:complexType name="TextEntryInteraction.Type" abstract="false" mixed="false">
        <xs:annotation>
            <xs:documentation source="documentation">
                A TextEntry Interaction is an inlineInteraction that obtains a simple piece of text from
                the candidate. Like inlineChoiceInteraction, the delivery engine must allow the candidate
                to review their choice within the context of the surrounding text. The textEntryInteracti-
                on must be bound to a response variable with single or record cardinality only. If the re-
                sponse variable has single cardinality the baseType must be one of string, integer or flo-
                at; if it has record cardinality the permitted fields are 'stringValue', 'floatValue', et-
                c.
            </xs:documentation>
        </xs:annotation>
        <xs:complexContent>
            <xs:extension base="BaseSequenceXBaseEmpty.Type">
                <xs:attributeGroup ref="response-identifier.TextEntryInteraction.Attr" />
                <xs:attributeGroup ref="base.TextEntryInteraction.Attr" />
                <xs:attributeGroup ref="string-identifier.TextEntryInteraction.Attr" />
                <xs:attributeGroup ref="expected-length.TextEntryInteraction.Attr" />
                <xs:attributeGroup ref="pattern-mask.TextEntryInteraction.Attr" />
                <xs:attributeGroup ref="placeholder-text.TextEntryInteraction.Attr" />
                <xs:attributeGroup ref="format.TextEntryInteraction.Attr" />
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <xs:complexType name="TR.Type" abstract="false" mixed="false">
        <xs:annotation>
            <xs:documentation source="documentation">
                This makes the HTML tag 'tr' available for the definition of tables.
            </xs:documentation>
        </xs:annotation>
        <xs:complexContent>
            <xs:extension base="BaseSequence.Type">
                <xs:sequence>
                    <xs:choice minOccurs="1" maxOccurs="unbounded">
                        <xs:element ref="td" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="th" minOccurs="1" maxOccurs="1" />
                    </xs:choice>
                </xs:sequence>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <xs:complexType name="UploadInteraction.Type" abstract="false" mixed="false">
        <xs:annotation>
            <xs:documentation source="documentation">
                The Upload Interaction allows the candidate to upload a pre-prepared file representing th-
                eir response. It must be bound to a response variable with base-type file and single card-
                inality.
            </xs:documentation>
        </xs:annotation>
        <xs:complexContent>
            <xs:extension base="BasePromptInteraction.Type">
                <xs:attributeGroup ref="type.UploadInteraction.Attr" />
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <!-- ================================================================================================== -->

    <!-- Generate the derived ComplexTypes **************************************************************** -->

    <xs:complexType name="AreaMapEntry.Type" abstract="false" mixed="false">
        <xs:annotation>
            <xs:documentation source="documentation">
                The map is defined by a set of areaMapEntries, each of which maps an area of the coordina-
                te space onto a single float. When mapping points each area is tested in turn, with those
                listed first taking priority in the case where areas overlap and a point falls in the int-
                ersection.
            </xs:documentation>
        </xs:annotation>
        <xs:complexContent>
            <xs:extension base="EmptyPrimitiveType.Type">
                <xs:attributeGroup ref="shape.AreaMapEntry.Attr" />
                <xs:attributeGroup ref="coords.AreaMapEntry.Attr" />
                <xs:attributeGroup ref="mappedValue.AreaMapEntry.Attr" />
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <xs:complexType name="AssessmentStimulusRef.Type" abstract="false" mixed="false">
        <xs:annotation>
            <xs:documentation source="documentation">
                This is the structure that enables reference to an 'assessmentStimulus' instance. The sti-
                mulus must be contained within its own instance and so the Item uses the 'assessmentStimu-
                lusRef' structure to provide the link between the Item and the Stimulus.
            </xs:documentation>
        </xs:annotation>
        <xs:complexContent>
            <xs:extension base="EmptyPrimitiveType.Type">
                <xs:attributeGroup ref="identifier.AssessmentStimulusRef.Attr" />
                <xs:attributeGroup ref="href.AssessmentStimulusRef.Attr" />
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <xs:complexType name="BaseSequenceXBaseEmpty.Type" abstract="false" mixed="false">
        <xs:annotation>
            <xs:documentation source="documentation">
                This is the base class for the HTML features and some QTI interactions that have no child-
                ren elements i.e. must be empty. This consists of a set of child characteristics.
            </xs:documentation>
        </xs:annotation>
        <xs:complexContent>
            <xs:extension base="EmptyPrimitiveType.Type">
                <xs:attributeGroup ref="id.BaseSequenceXBaseEmpty.Attr" />
                <xs:attributeGroup ref="class.BaseSequenceXBaseEmpty.Attr" />
                <xs:attributeGroup ref="language.BaseSequenceXBaseEmpty.Attr" />
                <xs:attributeGroup ref="label.BaseSequenceXBaseEmpty.Attr" />
                <xs:attributeGroup ref="base.BaseSequenceXBaseEmpty.Attr" />
                <xs:attributeGroup ref="dir.BaseSequenceXBaseEmpty.Attr" />
                <xs:attributeGroup ref="role.BaseSequenceXBaseEmpty.Attr" />
                <xs:attributeGroup ref="aria-controls.BaseSequenceXBaseEmpty.Attr" />
                <xs:attributeGroup ref="aria-describedby.BaseSequenceXBaseEmpty.Attr" />
                <xs:attributeGroup ref="aria-flowsto.BaseSequenceXBaseEmpty.Attr" />
                <xs:attributeGroup ref="aria-label.BaseSequenceXBaseEmpty.Attr" />
                <xs:attributeGroup ref="aria-labelledby.BaseSequenceXBaseEmpty.Attr" />
                <xs:attributeGroup ref="aria-level.BaseSequenceXBaseEmpty.Attr" />
                <xs:attributeGroup ref="aria-live.BaseSequenceXBaseEmpty.Attr" />
                <xs:attributeGroup ref="aria-orientation.BaseSequenceXBaseEmpty.Attr" />
                <xs:attributeGroup ref="aria-owns.BaseSequenceXBaseEmpty.Attr" />
                <xs:attributeGroup ref="dataExtension.BaseSequenceXBaseEmpty.Attr" />
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <xs:complexType name="BaseValue.Type" abstract="false" mixed="false">
        <xs:annotation>
            <xs:documentation source="documentation">
                One of the QTI expression functions. The simplest expression returns a single value from
                the set defined by the given baseType.
            </xs:documentation>
        </xs:annotation>
        <xs:simpleContent>
            <xs:extension base="xs:string">
                <xs:attributeGroup ref="baseType.BaseValue.Attr" />
            </xs:extension>
        </xs:simpleContent>
    </xs:complexType>

    <xs:complexType name="Correct.Type" abstract="false" mixed="false">
        <xs:annotation>
            <xs:documentation source="documentation">
                This is a QTI expression. This expression looks up the declaration of a response variable
                and returns the associated correctResponse or NULL if no correct value was declared. When
                used in outcomes processing item identifier prefixing (see variable) may be used to obtain
                the correct response from an individual item.
            </xs:documentation>
        </xs:annotation>
        <xs:complexContent>
            <xs:extension base="EmptyPrimitiveType.Type">
                <xs:attributeGroup ref="identifier.Correct.Attr" />
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <xs:complexType name="Default.Type" abstract="false" mixed="false">
        <xs:annotation>
            <xs:documentation source="documentation">
                This is one of the QTI expression functions. This expression looks up the declaration of
                an itemVariable and returns the associated defaultValue or NULL if no default value was d-
                eclared. When used in outcomes processing item identifier prefixing (see variable) may be
                used to obtain the default value from an individual item.
            </xs:documentation>
        </xs:annotation>
        <xs:complexContent>
            <xs:extension base="EmptyPrimitiveType.Type">
                <xs:attributeGroup ref="identifier.Default.Attr" />
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <xs:complexType name="InterpolationTableEntry.Type" abstract="false" mixed="false">
        <xs:annotation>
            <xs:documentation source="documentation">
                Provides an interpolation table entry in the associated interpolation table.
            </xs:documentation>
        </xs:annotation>
        <xs:complexContent>
            <xs:extension base="EmptyPrimitiveType.Type">
                <xs:attributeGroup ref="sourceValue.InterpolationTableEntry.Attr" />
                <xs:attributeGroup ref="includeBoundary.InterpolationTableEntry.Attr" />
                <xs:attributeGroup ref="targetValue.InterpolationTableEntry.Attr" />
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <xs:complexType name="ItemSessionControl.Type" abstract="false" mixed="false">
        <xs:annotation>
            <xs:documentation source="documentation">
                When items are referenced as part of a test, the test may impose constraints on how many
                attempts, and which states are allowed. These constraints can be specified for individual
                items, for whole sections or for an entire testPart. By default, a setting at testPart le-
                vel affects all items in that part unless the setting is overridden at the assessmentSect-
                ion level or ultimately at the individual assessmentItemRef. The defaults for an ItemSess-
                ionControl are used only in the absence of any applicable constraint.
            </xs:documentation>
        </xs:annotation>
        <xs:complexContent>
            <xs:extension base="EmptyPrimitiveType.Type">
                <xs:attributeGroup ref="maxAttempts.ItemSessionControl.Attr" />
                <xs:attributeGroup ref="showFeedback.ItemSessionControl.Attr" />
                <xs:attributeGroup ref="allowReview.ItemSessionControl.Attr" />
                <xs:attributeGroup ref="showSolution.ItemSessionControl.Attr" />
                <xs:attributeGroup ref="allowComment.ItemSessionControl.Attr" />
                <xs:attributeGroup ref="allowSkipping.ItemSessionControl.Attr" />
                <xs:attributeGroup ref="validateResponses.ItemSessionControl.Attr" />
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <xs:complexType name="MapEntry.Type" abstract="false" mixed="false">
        <xs:annotation>
            <xs:documentation source="documentation">
                This is a part of the mapping functionality. The map is defined by a set of mapEntries, e-
                ach of which maps a single value from the source set onto a single float.
            </xs:documentation>
        </xs:annotation>
        <xs:complexContent>
            <xs:extension base="EmptyPrimitiveType.Type">
                <xs:attributeGroup ref="mapKey.MapEntry.Attr" />
                <xs:attributeGroup ref="mappedValue.MapEntry.Attr" />
                <xs:attributeGroup ref="caseSensitive.MapEntry.Attr" />
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <xs:complexType name="MapResponse.Type" abstract="false" mixed="false">
        <xs:annotation>
            <xs:documentation source="documentation">
                This is a QTI expression function. This expression looks up the value of a response varia-
                ble and then transforms it using the associated mapping, which must have been declared. T-
                he result is a single float. If the response variable has single cardinality then the val-
                ue returned is simply the mapped target value from the map. If the response variable has
                multiple or ordered cardinality then the value returned is the sum of the mapped target v-
                alues. This expression cannot be applied to variables of record cardinality. For example,
                if a mapping associates the identifiers {A,B,C,D} with the values {0,1,0.5,0} respectively
                then mapResponse will map the single value 'C' to the numeric value 0.5 and the set of va-
                lues {C,B} to the value 1.5. If a container contains multiple instances of the same value
                then that value is counted once only. To continue the example above {B,B,C} would still m-
                ap to 1.5 and not 2.5.
            </xs:documentation>
        </xs:annotation>
        <xs:complexContent>
            <xs:extension base="EmptyPrimitiveType.Type">
                <xs:attributeGroup ref="identifier.MapResponse.Attr" />
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <xs:complexType name="MatchTableEntry.Type" abstract="false" mixed="false">
        <xs:annotation>
            <xs:documentation source="documentation">
                A matchTable transforms a source integer by finding the first matchTableEntry with an exa-
                ct match to the source. The MatchTableEntry allows the definition of each entry in the ta-
                ble.
            </xs:documentation>
        </xs:annotation>
        <xs:complexContent>
            <xs:extension base="EmptyPrimitiveType.Type">
                <xs:attributeGroup ref="sourceValue.MatchTableEntry.Attr" />
                <xs:attributeGroup ref="targetValue.MatchTableEntry.Attr" />
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <xs:complexType name="MathConstant.Type" abstract="false" mixed="false">
        <xs:annotation>
            <xs:documentation source="documentation">
                This is a QTI expression function. The result is a mathematical constant returned as a si-
                ngle float, e.g. Pi and e.
            </xs:documentation>
        </xs:annotation>
        <xs:complexContent>
            <xs:extension base="EmptyPrimitiveType.Type">
                <xs:attributeGroup ref="name.MathConstant.Attr" />
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <xs:complexType name="Number.Type" abstract="false" mixed="false">
        <xs:annotation>
            <xs:documentation source="documentation">
                This is base class for some of the QTI expressions. This is the data-type used in some of
                the functions that are used in Outcome Processing only and which provide summative inform-
                ation.
            </xs:documentation>
        </xs:annotation>
        <xs:complexContent>
            <xs:extension base="EmptyPrimitiveType.Type">
                <xs:attributeGroup ref="sectionIdentifier.Number.Attr" />
                <xs:attributeGroup ref="includeCategory.Number.Attr" />
                <xs:attributeGroup ref="excludeCategory.Number.Attr" />
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <xs:complexType name="OutcomeMinMax.Type" abstract="false" mixed="false">
        <xs:annotation>
            <xs:documentation source="documentation">
                This is a data-type for the 'outcomeMinimum' and 'outcomeMaximum' QTI expressions for ou-
                tcome processing.
            </xs:documentation>
        </xs:annotation>
        <xs:complexContent>
            <xs:extension base="EmptyPrimitiveType.Type">
                <xs:attributeGroup ref="sectionIdentifier.OutcomeMinMax.Attr" />
                <xs:attributeGroup ref="includeCategory.OutcomeMinMax.Attr" />
                <xs:attributeGroup ref="excludeCategory.OutcomeMinMax.Attr" />
                <xs:attributeGroup ref="outcomeIdentifier.OutcomeMinMax.Attr" />
                <xs:attributeGroup ref="weightIdentifier.OutcomeMinMax.Attr" />
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <xs:complexType name="Param.Type" abstract="false" mixed="false">
        <xs:annotation>
            <xs:documentation source="documentation">
                This is the container for a parameter being passed to the HTML 'object' tag.
            </xs:documentation>
        </xs:annotation>
        <xs:complexContent>
            <xs:extension base="EmptyPrimitiveType.Type">
                <xs:attributeGroup ref="name.Param.Attr" />
                <xs:attributeGroup ref="value.Param.Attr" />
                <xs:attributeGroup ref="valuetype.Param.Attr" />
                <xs:attributeGroup ref="type.Param.Attr" />
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <xs:complexType name="PrintedVariable.Type" abstract="false" mixed="false">
        <xs:annotation>
            <xs:documentation source="documentation">
                The outcome variable or template variable must have been defined. The values of response
                variables cannot be printed directly as their values are implicitly known to the candidate
                through the interactions they are bound to; if necessary, their values can be assigned to
                outcomes during responseProcessing and displayed to the candidate as part of a bodyElement
                visible only in the appropriate feedback states.

                If the variable's value is NULL then the
                element is ignored.

                Variables of baseType string are treated as simple runs of text.

                Va-
                riables of baseType integer or float are converted to runs of text (strings) using the fo-
                rmatting rules described below. Float values should only be formatted in the e, E, f, g,
                G, r or R styles.

                Variables of baseType duration are treated as floats, representing the
                duration in seconds.

                Variables of baseType file are rendered using a control that enables
                the user to open the file. The control should display the name associated with the file,
                if any.

                Variables of baseType uri are rendered using a control that enables the user to
                open the identified resource, for example, by following a hypertext link in the case of a
                URL.

                For variables of single cardinality, the value of the variable is printed.

                For var-
                iables of ordered cardinality, if the attribute index is set, the single value correspond-
                ing to the indexed member is printed, otherwise an ordered list of the values within the
                container is printed, delimited by the string value of the delimiter attribute.

                For vari-
                ables of multiple cardinality, a list of the values within the container is printed, deli-
                mited by the string value of the delimiter attribute.

                For variables of record cardinalit-
                y, if the attribute field is set, the value corresponding to the specified field is print-
                ed, otherwise a list of the field names and corresponding field values within the variable
                is printed, delimited by the string value of the delimiter attribute and with the corresp-
                ondence between them indicated by the string value of the mappingIndicator attribute.
            </xs:documentation>
        </xs:annotation>
        <xs:complexContent>
            <xs:extension base="EmptyPrimitiveType.Type">
                <xs:attributeGroup ref="id.PrintedVariable.Attr" />
                <xs:attributeGroup ref="class.PrintedVariable.Attr" />
                <xs:attributeGroup ref="language.PrintedVariable.Attr" />
                <xs:attributeGroup ref="label.PrintedVariable.Attr" />
                <xs:attributeGroup ref="baseuri.PrintedVariable.Attr" />
                <xs:attributeGroup ref="identifier.PrintedVariable.Attr" />
                <xs:attributeGroup ref="format.PrintedVariable.Attr" />
                <xs:attributeGroup ref="base.PrintedVariable.Attr" />
                <xs:attributeGroup ref="index.PrintedVariable.Attr" />
                <xs:attributeGroup ref="powerForm.PrintedVariable.Attr" />
                <xs:attributeGroup ref="field.PrintedVariable.Attr" />
                <xs:attributeGroup ref="delimiter.PrintedVariable.Attr" />
                <xs:attributeGroup ref="mapping-indicator.PrintedVariable.Attr" />
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <xs:complexType name="RandomFloat.Type" abstract="false" mixed="false">
        <xs:annotation>
            <xs:documentation source="documentation">
                This is a QTI expresssion function. Selects a random float from the specified range [min,-
                max].
            </xs:documentation>
        </xs:annotation>
        <xs:complexContent>
            <xs:extension base="EmptyPrimitiveType.Type">
                <xs:attributeGroup ref="min.RandomFloat.Attr" />
                <xs:attributeGroup ref="max.RandomFloat.Attr" />
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <xs:complexType name="RandomInteger.Type" abstract="false" mixed="false">
        <xs:annotation>
            <xs:documentation source="documentation">
                This is a QTI expression function. Selects a random integer from the specified range [min-
                ,max] satisfying min + step * n for some integer n. For example, with min=2, max=11 and s-
                tep=3 the values {2,5,8,11} are possible.
            </xs:documentation>
        </xs:annotation>
        <xs:complexContent>
            <xs:extension base="EmptyPrimitiveType.Type">
                <xs:attributeGroup ref="min.RandomInteger.Attr" />
                <xs:attributeGroup ref="max.RandomInteger.Attr" />
                <xs:attributeGroup ref="step.RandomInteger.Attr" />
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <xs:complexType name="StyleSheet.Type" abstract="false" mixed="false">
        <xs:annotation>
            <xs:documentation source="documentation">
                Used to associate an external stylesheet with an object such as an assessmentItem, etc. Q-
                TI supports CSS 2.1 and CSS 3.0.
            </xs:documentation>
        </xs:annotation>
        <xs:complexContent>
            <xs:extension base="EmptyPrimitiveType.Type">
                <xs:attributeGroup ref="href.StyleSheet.Attr" />
                <xs:attributeGroup ref="type.StyleSheet.Attr" />
                <xs:attributeGroup ref="media.StyleSheet.Attr" />
                <xs:attributeGroup ref="title.StyleSheet.Attr" />
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <xs:complexType name="TestVariables.Type" abstract="false" mixed="false">
        <xs:annotation>
            <xs:documentation source="documentation">
                This is a QTI expression function. This expression, which can only be used in outcomes pr-
                ocessing, simultaneously looks up the value of an itemVariable in a sub-set of the items
                referred to in a test. Only variables with single cardinality are considered, all NULL va-
                lues are ignored. The result has cardinality multiple and base-type as specified below.
            </xs:documentation>
        </xs:annotation>
        <xs:complexContent>
            <xs:extension base="EmptyPrimitiveType.Type">
                <xs:attributeGroup ref="sectionIdentifier.TestVariables.Attr" />
                <xs:attributeGroup ref="includeCategory.TestVariables.Attr" />
                <xs:attributeGroup ref="excludeCategory.TestVariables.Attr" />
                <xs:attributeGroup ref="variableIdentifier.TestVariables.Attr" />
                <xs:attributeGroup ref="weightIdentifier.TestVariables.Attr" />
                <xs:attributeGroup ref="baseType.TestVariables.Attr" />
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <xs:complexType name="Value.Type" abstract="false" mixed="false">
        <xs:annotation>
            <xs:documentation source="documentation">
                A class that can represent a single value of any baseType in variable declarations and re-
                sult reports. The base-type is defined by the baseType attribute of the declaration except
                in the case of variables with record cardinality.
            </xs:documentation>
        </xs:annotation>
        <xs:simpleContent>
            <xs:extension base="xs:normalizedString">
                <xs:attributeGroup ref="fieldIdentifier.Value.Attr" />
                <xs:attributeGroup ref="baseType.Value.Attr" />
            </xs:extension>
        </xs:simpleContent>
    </xs:complexType>

    <xs:complexType name="Variable.Type" abstract="false" mixed="false">
        <xs:annotation>
            <xs:documentation source="documentation">
                This is a QTI expression function. This expression looks up the value of an itemVariable
                that has been declared in a corresponding variableDeclaration or is one of the built-in v-
                ariables. The result has the base-type and cardinality declared for the variable subject
                to the type promotion of weighted outcomes. During outcomes processing, values taken from
                an individual item session can be looked up by prefixing the name of the item variable wi-
                th the identifier assigned to the item in the assessmentItemRef, separated by a period ch-
                aracter. For example, to obtain the value of the SCORE variable in the item referred to as
                Q01 you would use a variable instance with identifier Q01.SCORE. In adaptive tests that c-
                ontain items that are allowed to be replaced (i.e. that have the withReplacement attribute
                set to "true"), the same item can be instantiated more than once. In order to access the
                outcome variable values of each instantiation, a number that denotes the instance's place
                in the sequence of the item's instantiation is inserted between the item variable identif-
                ier and the item variable, separated by a period character. For example, to obtain the va-
                lue of the SCORE variable in the item referred to as Q01 in its second instantiation you
                would use a variable instance, prefixed by the instantiation sequence number, prefixed by
                an identifier Q01.2.SCORE. When looking up the value of a response variable it always tak-
                es the value assigned to it by the candidate's last submission. Unsubmitted responses are
                not available during expression evaluation. The value of an item variable taken from an i-
                tem instantiated multiple times from the same assessmentItemRef (through the use of selec-
                tion withReplacement) is taken from the last instance submitted if submission is simultan-
                eous, otherwise it is undefined.
            </xs:documentation>
        </xs:annotation>
        <xs:complexContent>
            <xs:extension base="EmptyPrimitiveType.Type">
                <xs:attributeGroup ref="identifier.Variable.Attr" />
                <xs:attributeGroup ref="weightIdentifier.Variable.Attr" />
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <xs:complexType name="VariableMapping.Type" abstract="false" mixed="false">
        <xs:annotation>
            <xs:documentation source="documentation">
                Variable mappings allow outcome variables declared with the name sourceIdentifier in the
                corresponding item to be treated as if they were declared with the name targetIdentifier
                during outcomeProcessing. Use of variable mappings allows more control over the way outco-
                mes are aggregated when using testVariables.
            </xs:documentation>
        </xs:annotation>
        <xs:complexContent>
            <xs:extension base="EmptyPrimitiveType.Type">
                <xs:attributeGroup ref="sourceIdentifier.VariableMapping.Attr" />
                <xs:attributeGroup ref="targetIdentifier.VariableMapping.Attr" />
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <xs:complexType name="Weight.Type" abstract="false" mixed="false">
        <xs:annotation>
            <xs:documentation source="documentation">
                The contribution of an individual item score to an overall test score typically varies fr-
                om test to test. The score of the item is said to be weighted. Weights are defined as part
                of each reference to an item (assessmentItemRef) within a test.
            </xs:documentation>
        </xs:annotation>
        <xs:complexContent>
            <xs:extension base="EmptyPrimitiveType.Type">
                <xs:attributeGroup ref="identifier.Weight.Attr" />
                <xs:attributeGroup ref="value.Weight.Attr" />
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <!-- ================================================================================================== -->

    <!-- Declaration of the elements (Complex) ************************************************************ -->

    <xs:element name="a" type="A.Type" />

    <xs:element name="abbr" type="HTMLText.Type" />

    <xs:element name="acronym" type="HTMLText.Type" />

    <xs:element name="address" type="HTMLText.Type" />

    <xs:element name="and" type="Logic1toMany.Type" />

    <xs:element name="anyN" type="AnyN.Type" />

    <xs:element name="areaMapping" type="AreaMapping.Type" />

    <xs:element name="qti-associable-hotspot" type="AssociableHotspot.Type" />

    <xs:element name="qti-associate-interaction" type="AssociateInteraction.Type" />

    <xs:element name="b" type="HTMLText.Type" />

    <xs:element name="bdo" type="BDO.Type" />

    <xs:element name="big" type="HTMLText.Type" />

    <xs:element name="blockquote" type="BlockQuote.Type" />

    <xs:element name="br" type="BR.Type" />

    <xs:element name="branchRule" type="BranchRule.Type" />

    <xs:element name="caption" type="Caption.Type" />

    <xs:element name="qti-choice-interaction" type="ChoiceInteraction.Type" />

    <xs:element name="cite" type="HTMLText.Type" />

    <xs:element name="code" type="HTMLText.Type" />

    <xs:element name="col" type="Col.Type" />

    <xs:element name="colgroup" type="ColGroup.Type" />

    <xs:element name="containerSize" type="LogicSingle.Type" />

    <xs:element name="contains" type="LogicPair.Type" />

    <xs:element name="correctResponse" type="CorrectResponse.Type" />

    <xs:element name="qti-custom-interaction" type="CustomInteraction.Type" />

    <xs:element name="customOperator" type="CustomOperator.Type" />

    <xs:element name="dd" type="DD.Type" />

    <xs:element name="defaultValue" type="DefaultValue.Type" />

    <xs:element name="delete" type="LogicPair.Type" />

    <xs:element name="dfn" type="HTMLText.Type" />

    <xs:element name="div" type="Div.Type" />

    <xs:element name="divide" type="LogicPair.Type" />

    <xs:element name="dl" type="DL.Type" />

    <xs:element name="qti-drawing-interaction" type="DrawingInteraction.Type" />

    <xs:element name="dt" type="DT.Type" />

    <xs:element name="durationGTE" type="LogicPair.Type" />

    <xs:element name="durationLT" type="LogicPair.Type" />

    <xs:element name="em" type="HTMLText.Type" />

    <xs:element name="qti-end-attempt-interaction" type="EndAttemptInteraction.Type" />

    <xs:element name="equal" type="Equal.Type" />

    <xs:element name="equalRounded" type="EqualRounded.Type" />

    <xs:element name="qti-extended-text-interaction" type="ExtendedTextInteraction.Type" />

    <xs:element name="qti-feedback-block" type="FeedbackBlock.Type" />

    <xs:element name="qti-feedback-inline" type="FeedbackInline.Type" />

    <xs:element name="fieldValue" type="FieldValue.Type" />

    <xs:element name="qti-gap" type="Gap.Type" />

    <xs:element name="qti-gap-img" type="GapImg.Type" />

    <xs:element name="qti-gap-match-interaction" type="GapMatchInteraction.Type" />

    <xs:element name="qti-gap-text" type="GapText.Type" />

    <xs:element name="gcd" type="Logic1toMany.Type" />

    <xs:element name="qti-graphic-associate-interaction" type="GraphicAssociateInteraction.Type" />

    <xs:element name="qti-graphic-gap-match-interaction" type="GraphicGapMatchInteraction.Type" />

    <xs:element name="qti-graphic-order-interaction" type="GraphicOrderInteraction.Type" />

    <xs:element name="gt" type="LogicPair.Type" />

    <xs:element name="gte" type="LogicPair.Type" />

    <xs:element name="h1" type="HTMLText.Type" />

    <xs:element name="h2" type="HTMLText.Type" />

    <xs:element name="h3" type="HTMLText.Type" />

    <xs:element name="h4" type="HTMLText.Type" />

    <xs:element name="h5" type="HTMLText.Type" />

    <xs:element name="h6" type="HTMLText.Type" />

    <xs:element name="qti-hotspot-choice" type="HotspotChoice.Type" />

    <xs:element name="qti-hotspot-interaction" type="HotspotInteraction.Type" />

    <xs:element name="qti-hottext" type="HotText.Type" />

    <xs:element name="qti-hottext-interaction" type="HotTextInteraction.Type" />

    <xs:element name="hr" type="HR.Type" />

    <xs:element name="i" type="HTMLText.Type" />

    <xs:element name="img" type="Img.Type" />

    <xs:element name="index" type="Index.Type" />

    <xs:element name="qti-info-control" type="InfoControl.Type" />

    <xs:element name="qti-inline-choice" type="InlineChoice.Type" />

    <xs:element name="qti-inline-choice-interaction" type="InlineChoiceInteraction.Type" />

    <xs:element name="inside" type="Inside.Type" />

    <xs:element name="integerDivide" type="LogicPair.Type" />

    <xs:element name="integerModulus" type="LogicPair.Type" />

    <xs:element name="integerToFloat" type="LogicSingle.Type" />

    <xs:element name="interpolationTable" type="InterpolationTable.Type" />

    <xs:element name="isNull" type="LogicSingle.Type" />

    <xs:element name="itemBody" type="ItemBody.Type" />

    <xs:element name="kbd" type="HTMLText.Type" />

    <xs:element name="qti-label" type="QTI-Label.Type" />

    <xs:element name="lcm" type="Logic1toMany.Type" />

    <xs:element name="li" type="LI.Type" />

    <xs:element name="lookupOutcomeValue" type="LookupOutcomeValue.Type" />

    <xs:element name="lt" type="LogicPair.Type" />

    <xs:element name="lte" type="LogicPair.Type" />

    <xs:element name="mapping" type="Mapping.Type" />

    <xs:element name="match" type="LogicPair.Type" />

    <xs:element name="qti-match-interaction" type="MatchInteraction.Type" />

    <xs:element name="matchTable" type="MatchTable.Type" />

    <xs:element name="mathOperator" type="MathOperator.Type" />

    <xs:element name="max" type="Logic1toMany.Type" />

    <xs:element name="qti-media-interaction" type="MediaInteraction.Type" />

    <xs:element name="member" type="LogicPair.Type" />

    <xs:element name="min" type="Logic1toMany.Type" />

    <xs:element name="modalFeedback" type="ModalFeedback.Type" />

    <xs:element name="multiple" type="Logic0toMany.Type" />

    <xs:element name="not" type="LogicSingle.Type" />

    <xs:element name="object" type="Object.Type" />

    <xs:element name="ol" type="OUL.Type" />

    <xs:element name="or" type="Logic1toMany.Type" />

    <xs:element name="ordered" type="Logic0toMany.Type" />

    <xs:element name="qti-order-interaction" type="OrderInteraction.Type" />

    <xs:element name="outcomeCondition" type="OutcomeCondition.Type" />

    <xs:element name="outcomeElse" type="OutcomeElse.Type" />

    <xs:element name="outcomeElseIf" type="OutcomeIf.Type" />

    <xs:element name="outcomeIf" type="OutcomeIf.Type" />

    <xs:element name="outcomeProcessing" type="OutcomeProcessing.Type" />

    <xs:element name="outcomeProcessingFragment" type="OutcomeProcessingFragment.Type" />

    <xs:element name="p" type="HTMLText.Type" />

    <xs:element name="patternMatch" type="PatternMatch.Type" />

    <xs:element name="qti-position-object-interaction" type="PositionObjectInteraction.Type" />

    <xs:element name="qti-position-object-stage" type="PositionObjectStage.Type" />

    <xs:element name="power" type="LogicPair.Type" />

    <xs:element name="pre" type="HTMLText.Type" />

    <xs:element name="preCondition" type="LogicSingle.Type" />

    <xs:element name="product" type="Logic1toMany.Type" />

    <xs:element name="qti-prompt" type="Prompt.Type" />

    <xs:element name="q" type="Q.Type" />

    <xs:element name="random" type="LogicSingle.Type" />

    <xs:element name="repeat" type="Repeat.Type" />

    <xs:element name="responseCondition" type="ResponseCondition.Type" />

    <xs:element name="responseDeclaration" type="ResponseDeclaration.Type" />

    <xs:element name="responseElse" type="ResponseElse.Type" />

    <xs:element name="responseElseIf" type="ResponseIf.Type" />

    <xs:element name="responseIf" type="ResponseIf.Type" />

    <xs:element name="responseProcessingFragment" type="ResponseProcessingFragment.Type" />

    <xs:element name="round" type="LogicSingle.Type" />

    <xs:element name="roundTo" type="RoundTo.Type" />

    <xs:element name="qti-rubric-block" type="RubricBlock.Type" />

    <xs:element name="samp" type="HTMLText.Type" />

    <xs:element name="qti-select-point-interaction" type="SelectPointInteraction.Type" />

    <xs:element name="setCorrectResponse" type="SetValue.Type" />

    <xs:element name="setDefaultValue" type="SetValue.Type" />

    <xs:element name="setOutcomeValue" type="SetValue.Type" />

    <xs:element name="setTemplateValue" type="SetValue.Type" />

    <xs:element name="qti-simple-associable-choice" type="SimpleAssociableChoice.Type" />

    <xs:element name="qti-simple-choice" type="SimpleChoice.Type" />

    <xs:element name="qti-simple-match-set" type="SimpleMatchSet.Type" />

    <xs:element name="qti-slider-interaction" type="SliderInteraction.Type" />

    <xs:element name="small" type="HTMLText.Type" />

    <xs:element name="span" type="HTMLText.Type" />

    <xs:element name="statsOperator" type="StatsOperator.Type" />

    <xs:element name="stimulusBody" type="StimulusBody.Type" />

    <xs:element name="stringMatch" type="StringMatch.Type" />

    <xs:element name="strong" type="HTMLText.Type" />

    <xs:element name="sub" type="HTMLText.Type" />

    <xs:element name="substring" type="Substring.Type" />

    <xs:element name="subtract" type="LogicPair.Type" />

    <xs:element name="sum" type="NumericLogic1toMany.Type" />

    <xs:element name="sup" type="HTMLText.Type" />

    <xs:element name="table" type="Table.Type" />

    <xs:element name="tbody" type="TablePart.Type" />

    <xs:element name="td" type="TDH.Type" />

    <xs:element name="qti-template-block" type="TemplateBlock.Type" />

    <xs:element name="templateCondition" type="TemplateCondition.Type" />

    <xs:element name="templateConstraint" type="TemplateConstraint.Type" />

    <xs:element name="templateDeclaration" type="TemplateDeclaration.Type" />

    <xs:element name="templateDefault" type="TemplateDefault.Type" />

    <xs:element name="templateElse" type="TemplateElse.Type" />

    <xs:element name="templateElseIf" type="TemplateIf.Type" />

    <xs:element name="templateIf" type="TemplateIf.Type" />

    <xs:element name="qti-template-inline" type="TemplateInline.Type" />

    <xs:element name="templateProcessing" type="TemplateProcessing.Type" />

    <xs:element name="testFeedback" type="TestFeedback.Type" />

    <xs:element name="qti-text-entry-interaction" type="TextEntryInteraction.Type" />

    <xs:element name="tfoot" type="TablePart.Type" />

    <xs:element name="th" type="TDH.Type" />

    <xs:element name="thead" type="TablePart.Type" />

    <xs:element name="tr" type="TR.Type" />

    <xs:element name="truncate" type="LogicSingle.Type" />

    <xs:element name="tt" type="HTMLText.Type" />

    <xs:element name="ul" type="OUL.Type" />

    <xs:element name="qti-upload-interaction" type="UploadInteraction.Type" />

    <xs:element name="var" type="HTMLText.Type" />

    <!-- ================================================================================================== -->

    <!-- Declaration of the elements (Derived) ************************************************************ -->

    <xs:element name="areaMapEntry" type="AreaMapEntry.Type" />

    <xs:element name="assessmentStimulusRef" type="AssessmentStimulusRef.Type" />

    <xs:element name="baseValue" type="BaseValue.Type" />

    <xs:element name="correct" type="Correct.Type" />

    <xs:element name="default" type="Default.Type" />

    <xs:element name="interpolationTableEntry" type="InterpolationTableEntry.Type" />

    <xs:element name="itemSessionControl" type="ItemSessionControl.Type" />

    <xs:element name="mapEntry" type="MapEntry.Type" />

    <xs:element name="mapResponse" type="MapResponse.Type" />

    <xs:element name="mapResponsePoint" type="MapResponse.Type" />

    <xs:element name="matchTableEntry" type="MatchTableEntry.Type" />

    <xs:element name="mathConstant" type="MathConstant.Type" />

    <xs:element name="numberCorrect" type="Number.Type" />

    <xs:element name="numberIncorrect" type="Number.Type" />

    <xs:element name="numberPresented" type="Number.Type" />

    <xs:element name="numberResponded" type="Number.Type" />

    <xs:element name="numberSelected" type="Number.Type" />

    <xs:element name="outcomeMaximum" type="OutcomeMinMax.Type" />

    <xs:element name="outcomeMinimum" type="OutcomeMinMax.Type" />

    <xs:element name="param" type="Param.Type" />

    <xs:element name="qti-printed-variable" type="PrintedVariable.Type" />

    <xs:element name="randomFloat" type="RandomFloat.Type" />

    <xs:element name="randomInteger" type="RandomInteger.Type" />

    <xs:element name="stylesheet" type="StyleSheet.Type" />

    <xs:element name="testVariables" type="TestVariables.Type" />

    <xs:element name="value" type="Value.Type" />

    <xs:element name="variable" type="Variable.Type" />

    <xs:element name="variableMapping" type="VariableMapping.Type" />

    <xs:element name="weight" type="Weight.Type" />

    <!-- ================================================================================================== -->

    <!-- New Declarations ********************************************************************************* -->

    <xs:simpleType name="ExtensionString.Type">
        <xs:restriction base="xs:string">
            <xs:pattern value="(ext:)[a-z|A-Z|\-|_]+" />
        </xs:restriction>
    </xs:simpleType>

    <xs:simpleType name="DropEffectList.Type">
        <xs:restriction base="xs:string">
            <xs:enumeration value="copy" />
            <xs:enumeration value="move" />
            <xs:enumeration value="link" />
            <xs:enumeration value="execute" />
            <xs:enumeration value="popup" />
            <xs:enumeration value="none" />
        </xs:restriction>
    </xs:simpleType>

    <xs:simpleType name="RelevantList.Type">
        <xs:restriction base="xs:string">
            <xs:enumeration value="additions" />
            <xs:enumeration value="removals" />
            <xs:enumeration value="text" />
            <xs:enumeration value="all" />
            <xs:enumeration value="additions text" />
        </xs:restriction>
    </xs:simpleType>

    <xs:complexType name="ContextDeclaration.Type" abstract="false" mixed="false">
        <xs:annotation>
            <xs:documentation source="documentation">
                Added from the corresponding aQTI Change Proposal 'Context Decarations'.
            </xs:documentation>
        </xs:annotation>
        <xs:sequence>
            <xs:element ref="defaultValue" minOccurs="0" maxOccurs="1" />
        </xs:sequence>
        <xs:attribute name="identifier" use="required" type="Identifier.Type" />
        <xs:attribute name="baseType" use="optional">
            <xs:simpleType>
                <xs:restriction base="xs:string">
                    <xs:enumeration value="boolean" />
                    <xs:enumeration value="directedPair" />
                    <xs:enumeration value="duration" />
                    <xs:enumeration value="file" />
                    <xs:enumeration value="float" />
                    <xs:enumeration value="identifier" />
                    <xs:enumeration value="integer" />
                    <xs:enumeration value="pair" />
                    <xs:enumeration value="point" />
                    <xs:enumeration value="string" />
                    <xs:enumeration value="uri" />
                </xs:restriction>
            </xs:simpleType>
        </xs:attribute>
        <xs:attribute name="cardinality" use="required">
            <xs:simpleType>
                <xs:restriction base="xs:string">
                    <xs:enumeration value="multiple" />
                    <xs:enumeration value="ordered" />
                    <xs:enumeration value="record" />
                    <xs:enumeration value="single" />
                </xs:restriction>
            </xs:simpleType>
        </xs:attribute>
    </xs:complexType>

    <xs:element name="contextDeclaration" type="ContextDeclaration.Type" />

    <xs:complexType name="CatalogInfo.Type" abstract="false" mixed="false">
        <xs:annotation>
            <xs:documentation source="documentation">
                Added from the corresponding aQTI Change Proposal 'Alternative Approach for Referencing and Storing Support-Specific Content'.
            </xs:documentation>
        </xs:annotation>
        <xs:sequence>
            <xs:element ref="catalog" minOccurs="0" maxOccurs="unbounded" />
        </xs:sequence>
    </xs:complexType>

    <xs:element name="catalogInfo" type="CatalogInfo.Type" />

    <xs:complexType name="Catalog.Type" abstract="false" mixed="false">
        <xs:annotation>
            <xs:documentation source="documentation">
                Added from the corresponding aQTI Change Proposal 'Alternative Approach for Referencing and Storing Support-Specific Content'.
            </xs:documentation>
        </xs:annotation>
        <xs:sequence>
            <xs:element ref="card" minOccurs="1" maxOccurs="unbounded" />
        </xs:sequence>
        <xs:attribute name="id" use="required" type="UniqueIdentifier.Type" />
    </xs:complexType>

    <xs:element name="catalog" type="Catalog.Type" />

    <xs:complexType name="Card.Type" abstract="false" mixed="false">
        <xs:annotation>
            <xs:documentation source="documentation">
                Added from the corresponding aQTI Change Proposal 'Alternative Approach for Referencing and Storing Support-Specific Content'.
            </xs:documentation>
        </xs:annotation>
        <xs:choice>
            <xs:choice>
                <xs:element ref="htmlContent" minOccurs="0" maxOccurs="1" />
                <xs:element ref="fileHref" minOccurs="0" maxOccurs="unbounded" />
            </xs:choice>
            <xs:element ref="cardEntry" minOccurs="1" maxOccurs="unbounded" />
        </xs:choice>
        <xs:attribute name="support" use="required">
            <xs:simpleType>
                <xs:union>
                    <xs:simpleType>
                        <xs:restriction base="xs:string">
                            <xs:enumeration value="additional-directions" />
                            <xs:enumeration value="braille" />
                            <xs:enumeration value="encouragement" />
                            <xs:enumeration value="high-contrast" />
                            <xs:enumeration value="keyboard-directions" />
                            <xs:enumeration value="keyword-translation" />
                            <xs:enumeration value="linguistic-guidance" />
                            <xs:enumeration value="long-description" />
                            <xs:enumeration value="sign-language" />
                            <xs:enumeration value="simplified-language-portions" />
                            <xs:enumeration value="simplified-graphics" />
                            <xs:enumeration value="spoken" />
                            <xs:enumeration value="tactile" />
                            <xs:enumeration value="transcript" />
                        </xs:restriction>
                    </xs:simpleType>
                    <xs:simpleType>
                        <xs:restriction base="ExtensionString.Type" />
                    </xs:simpleType>
                </xs:union>
            </xs:simpleType>
        </xs:attribute>
    </xs:complexType>

    <xs:element name="card" type="Card.Type" />

    <xs:complexType name="CardEntry.Type" abstract="false" mixed="false">
        <xs:annotation>
            <xs:documentation source="documentation">
                Added from the corresponding aQTI Change Proposal 'Alternative Approach for Referencing and Storing Support-Specific Content'.
            </xs:documentation>
        </xs:annotation>
        <xs:sequence>
            <xs:element ref="htmlContent" minOccurs="0" maxOccurs="1" />
            <xs:element ref="fileHref" minOccurs="0" maxOccurs="unbounded" />
        </xs:sequence>
        <xs:attribute ref="xml:lang" use="optional" />
        <xs:attribute name="default" use="optional" type="xs:boolean" default="false"/>
        <xs:anyAttribute namespace = "##any" processContents = "lax" />
    </xs:complexType>

    <xs:element name="cardEntry" type="CardEntry.Type" />

    <xs:complexType name="HTMLContent.Type" abstract="false" mixed="true">
        <xs:annotation>
            <xs:documentation source="documentation">
                Added from the corresponding aQTI Change Proposal 'Alternative Approach for Referencing and Storing Support-Specific Content'.
            </xs:documentation>
        </xs:annotation>
        <xs:sequence>
            <xs:choice minOccurs="0" maxOccurs="unbounded">
                <xs:element ref="m3:math" minOccurs="1" maxOccurs="1" />
                <xs:choice minOccurs="1" maxOccurs="1">
                    <xs:element ref="pre" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="h1" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="h2" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="h3" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="h4" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="h5" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="h6" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="p" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="address" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="dl" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="ol" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="ul" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="br" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="hr" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="img" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="object" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="blockquote" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="em" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="a" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="code" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="span" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="sub" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="acronym" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="big" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="tt" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="kbd" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="q" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="i" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="dfn" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="abbr" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="strong" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="sup" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="var" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="small" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="samp" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="b" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="cite" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="table" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="div" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="bdo" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="bdi" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="figure" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="audio" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="video" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="article" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="aside" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="footer" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="header" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="label" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="nav" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="section" minOccurs="1" maxOccurs="1" />
                    <xs:element ref="ruby" minOccurs="1" maxOccurs="1" />
                    <xs:choice minOccurs="1" maxOccurs="1">
                        <xs:element ref="ssml:p" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="ssml:s" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="ssml:say-as" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="ssml:phoneme" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="ssml:sub" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="ssml:voice" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="ssml:emphasis" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="ssml:break" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="ssml:prosody" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="ssml:mark" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="ssml:audio" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="ssml:speak" minOccurs="1" maxOccurs="1" />
                    </xs:choice>
                </xs:choice>
            </xs:choice>
        </xs:sequence>
        <xs:attribute ref="xml:lang" use="optional" />
        <xs:anyAttribute namespace = "##any" processContents = "lax" />
    </xs:complexType>

    <xs:element name="htmlContent" type="HTMLContent.Type" />

    <xs:complexType name="FileHrefCard.Type" abstract="false" mixed="false">
        <xs:annotation>
            <xs:documentation source="documentation">
                Added from the corresponding aQTI Change Proposal 'Alternative Approach for Referencing and Storing Support-Specific Content'.
            </xs:documentation>
        </xs:annotation>
        <xs:simpleContent>
            <xs:extension base="FileHref.Type">
                <xs:attribute name="mimeType" use="required" type="MimeType.Type" />
            </xs:extension>
        </xs:simpleContent>
    </xs:complexType>

    <xs:element name="fileHref" type="FileHrefCard.Type" />

    <!-- ================================================================================================== -->

    <!-- Declaration of the root element(s) *************************************************************** -->

    <xs:element name="assessmentItem" type="AssessmentItem.Type" />
    <xs:element name="assessmentStimulus" type="AssessmentStimulus.Type" />
    <xs:element name="outcomeDeclaration" type="OutcomeDeclaration.Type" />
    <xs:element name="responseProcessing" type="ResponseProcessing.Type" />

    <!-- ================================================================================================== -->

    <!-- APIP QTI EXTENSION INCLUSION -->

    <!-- Generate Global Attributes (non-assigned) ******************************************************** -->

    <!-- ================================================================================================== -->

    <!-- Generate Global Attributes *********************************************************************** -->

    <!-- ================================================================================================== -->

    <!-- Generate Global List Types *********************************************************************** -->

    <!-- ================================================================================================== -->

    <!-- Generate Namespaced extension Group  ************************************************************* -->

    <xs:group name="grpStrict.any">
        <xs:annotation>
            <xs:documentation>
                Any namespaced element from any namespace may be included within an "any" element.
                The namespace for the imported element must be defined in the instance, and the schema must be imported.
                The extension has a definition of "strict" i.e. they must have their own namespace.
            </xs:documentation>
        </xs:annotation>
        <xs:sequence>
            <xs:any namespace = "##other" processContents = "strict" minOccurs = "0" maxOccurs = "unbounded" />
        </xs:sequence>
    </xs:group>

    <!-- ================================================================================================== -->

    <!-- Generate Special DataTypes  ********************************************************************** -->

    <!-- ================================================================================================== -->

    <!-- Generate the enumerated simpleType declarations ************************************************** -->

    <!-- ================================================================================================== -->

    <!-- Generate the simpleType elements based on IMS data-types (Parameter) ***************************** -->

    <!-- ================================================================================================== -->

    <!-- Generate the simpleType elements based on IMS data-types (Derived) ******************************* -->

    <!-- ================================================================================================== -->

    <!-- Generate the simpleType elements based on IMS data-types (Union) ********************************* -->

    <!-- ================================================================================================== -->

    <!-- Generate the simpleType elements based on IMS data-types (Complex) ******************************* -->

    <!-- ================================================================================================== -->

    <!-- Generate the derived data-type elements based upon simpleType ************************************ -->

    <xs:simpleType name="FileHref.Type">
        <xs:restriction base="xs:anyURI" />
    </xs:simpleType>

    <!-- ================================================================================================== -->

    <!-- Generate the derived data-type elements based upon derived simpleType **************************** -->

    <!-- ================================================================================================== -->

    <!-- Generate the ComplexTypes ************************************************************************ -->

    <xs:complexType name="Calculator.Type" abstract="false" mixed="false">
        <xs:annotation>
            <xs:documentation source="documentation">
                The Calculator complexType is the container for the information on the permitted type of
                calculator available for use with the aQTI Items. A human readable description of the cal-
                culator should also be available.
            </xs:documentation>
        </xs:annotation>
        <xs:sequence>
            <xs:element name="calculatorType" minOccurs="1" maxOccurs="1">
                <xs:simpleType>
                    <xs:restriction base="xs:string">
                        <xs:enumeration value="Basic" />
                        <xs:enumeration value="Standard" />
                        <xs:enumeration value="Scientific" />
                        <xs:enumeration value="Graphing" />
                    </xs:restriction>
                </xs:simpleType>
            </xs:element>
            <xs:element name="description" type="xs:normalizedString" minOccurs="1" maxOccurs="1" />
            <xs:element name="calculatorInfo" type="ItemFileInfo.Type" minOccurs="0" maxOccurs="1" />
        </xs:sequence>
    </xs:complexType>

    <xs:complexType name="CompanionMaterialsInfo.Type" abstract="false" mixed="false">
        <xs:annotation>
            <xs:documentation source="documentation">
                The CompanionMaterialsInfo complexType is the container for information about materials a-
                nd tools that the examinee is expected to work with while performing the relevant QTI Ite-
                m(s). These materials and tools may include a reading passage, rule, protractor, calculat-
                or, etc.
            </xs:documentation>
        </xs:annotation>
        <xs:choice minOccurs = "0" maxOccurs = "unbounded">
            <xs:element name="calculator" type="Calculator.Type" minOccurs="0" maxOccurs="1" />
            <xs:element name="rule" type="Rule.Type" minOccurs="0" maxOccurs="unbounded" />
            <xs:element name="protractor" type="Protractor.Type" minOccurs="0" maxOccurs="unbounded" />
            <xs:element name="digitalMaterial" type="ItemFileInfo.Type" minOccurs="0" maxOccurs="unbounded" />
            <xs:element name="physicalMaterial" type="xs:normalizedString" minOccurs="0" maxOccurs="unbounded" />
            <xs:group ref="grpStrict.any" />
        </xs:choice>
    </xs:complexType>

    <xs:complexType name="ExternalSupplementalAccessibility.Type" abstract="false" mixed="false">
        <xs:annotation>
            <xs:documentation source="documentation">
                This is the container for the supplemental information that can be used to provide further
                guidance on how to render the alternative accessibility information i.e. the use of the P-
                ronunciation Lexicon Standard (PLS), etc.
            </xs:documentation>
        </xs:annotation>
        <xs:choice minOccurs = "0" maxOccurs = "unbounded">
            <xs:element name="textToSpeechLexicon" type="TextToSpeechSupplement.Type" minOccurs="0" maxOccurs="unbounded" />
            <xs:element name="textToSpeechStylesheet" type="TextToSpeechSupplement.Type" minOccurs="0" maxOccurs="unbounded" />
            <xs:group ref="grpStrict.any" />
        </xs:choice>
    </xs:complexType>

    <xs:complexType name="IncrementSI.Type" abstract="false" mixed="false">
        <xs:annotation>
            <xs:documentation source="documentation">
                The IncrementSI complexType is the container for the simple specification of the Protract-
                or, using SI units, to be used with the set of aQTI Items. The Protractor is defined in t-
                erms of its increment resolutions.
            </xs:documentation>
        </xs:annotation>
        <xs:sequence>
            <xs:element name="minorIncrement" type="RadialSIValue.Type" minOccurs="0" maxOccurs="1" />
            <xs:element name="majorIncrement" type="RadialSIValue.Type" minOccurs="1" maxOccurs="1" />
        </xs:sequence>
    </xs:complexType>

    <xs:complexType name="IncrementUS.Type" abstract="false" mixed="false">
        <xs:annotation>
            <xs:documentation source="documentation">
                The IncrementUS complexType is the container for the simple specification of the Protract-
                or, using US units, to be used with the set of aQTI Items. The Protractor is defined in t-
                erms of its increment resolutions.
            </xs:documentation>
        </xs:annotation>
        <xs:sequence>
            <xs:element name="minorIncrement" type="RadialUSValue.Type" minOccurs="0" maxOccurs="1" />
            <xs:element name="majorIncrement" type="RadialUSValue.Type" minOccurs="1" maxOccurs="1" />
        </xs:sequence>
    </xs:complexType>

    <xs:complexType name="ItemFileInfo.Type" abstract="false" mixed="false">
        <xs:annotation>
            <xs:documentation source="documentation">
                The ItemFileInfo complexType is the for the 'href' pointer to an external file. The 'href'
                should contain sufficient information for the correct location of the file within the ass-
                ociated Content Package (all files must be contained within the content package that is u-
                sed to contained the aQTI Item).
            </xs:documentation>
        </xs:annotation>
        <xs:sequence>
            <xs:element name="fileHref" type="FileHref.Type" minOccurs="1" maxOccurs="1" />
        </xs:sequence>
        <xs:attribute name="mimeType" use="optional" type="xs:normalizedString" />
    </xs:complexType>

    <xs:complexType name="Protractor.Type" abstract="false" mixed="false">
        <xs:annotation>
            <xs:documentation source="documentation">
                The Protractor complexType is the container for the specification of the protractor tool
                that is to be used to support the aQTI Items. The Protractor is defined in terms of its r-
                adial resolution. A human readable description of the tool should also be available..
            </xs:documentation>
        </xs:annotation>
        <xs:sequence>
            <xs:element name="description" type="xs:normalizedString" minOccurs="1" maxOccurs="1" />
            <xs:choice minOccurs="1" maxOccurs="1">
                <xs:element name="incrementSI" type="IncrementSI.Type" minOccurs="1" maxOccurs="1"/>
                <xs:element name="incrementUS" type="IncrementUS.Type" minOccurs="1" maxOccurs="1"/>
            </xs:choice>
        </xs:sequence>
    </xs:complexType>

    <xs:complexType name="Rule.Type" abstract="false" mixed="false">
        <xs:annotation>
            <xs:documentation source="documentation">
                The Rule complexType is the container for the simple specification of the Rule to be used
                with the set of aQTI Items.
            </xs:documentation>
        </xs:annotation>
        <xs:sequence>
            <xs:element name="description" type="xs:normalizedString" minOccurs="1" maxOccurs="1" />
            <xs:choice minOccurs="1" maxOccurs="1">
                <xs:element name="ruleSystemSI" type="SIRuleSystem.Type" minOccurs="1" maxOccurs="1"/>
                <xs:element name="ruleSystemUS" type="USRuleSystem.Type" minOccurs="1" maxOccurs="1"/>
            </xs:choice>
        </xs:sequence>
    </xs:complexType>

    <xs:complexType name="SIRuleSystem.Type" abstract="false" mixed="false">
        <xs:annotation>
            <xs:documentation source="documentation">
                The SIRuleSystem complexType is the container for the simple specification of the Rule, u-
                sing SI units, to be used with the set of aQTI Items. The Rule is defined in terms of its
                length and increment resolution.
            </xs:documentation>
        </xs:annotation>
        <xs:sequence>
            <xs:element name="minimumLength" type="xs:integer" minOccurs="1" maxOccurs="1" />
            <xs:element name="minorIncrement" type="SILinearValue.Type" minOccurs="0" maxOccurs="1" />
            <xs:element name="majorIncrement" type="SILinearValue.Type" minOccurs="1" maxOccurs="1" />
        </xs:sequence>
    </xs:complexType>

    <xs:complexType name="USRuleSystem.Type" abstract="false" mixed="false">
        <xs:annotation>
            <xs:documentation source="documentation">
                The USRuleSystem complexType is the container for the simple specification of the Rule, u-
                sing US units, to be used with the set of QTI Items. The Rule is defined in terms of its
                length and increment resolution.
            </xs:documentation>
        </xs:annotation>
        <xs:sequence>
            <xs:element name="minimumLength" type="xs:integer" minOccurs="1" maxOccurs="1" />
            <xs:element name="minorIncrement" type="USLinearValue.Type" minOccurs="0" maxOccurs="1" />
            <xs:element name="majorIncrement" type="USLinearValue.Type" minOccurs="1" maxOccurs="1" />
        </xs:sequence>
    </xs:complexType>

    <!-- ================================================================================================== -->

    <!-- Generate the derived ComplexTypes **************************************************************** -->

    <xs:complexType name="RadialSIValue.Type" abstract="false" mixed="false">
        <xs:annotation>
            <xs:documentation source="documentation">
                The RadialSIValue derivedType is the container for the radial measurements in terms of SI
                units.
            </xs:documentation>
        </xs:annotation>
        <xs:simpleContent>
            <xs:extension base="xs:decimal">
                <xs:attribute name="unit" use="required">
                    <xs:simpleType>
                        <xs:restriction base="xs:string">
                            <xs:enumeration value="Radian" />
                        </xs:restriction>
                    </xs:simpleType>
                </xs:attribute>
            </xs:extension>
        </xs:simpleContent>
    </xs:complexType>

    <xs:complexType name="RadialUSValue.Type" abstract="false" mixed="false">
        <xs:annotation>
            <xs:documentation source="documentation">
                The RadialUSValue derivedType is the container for the radial measurements in terms of US
                units.
            </xs:documentation>
        </xs:annotation>
        <xs:simpleContent>
            <xs:extension base="xs:decimal">
                <xs:attribute name="unit" use="required">
                    <xs:simpleType>
                        <xs:restriction base="xs:string">
                            <xs:enumeration value="Degree" />
                            <xs:enumeration value="Minute" />
                            <xs:enumeration value="Second" />
                        </xs:restriction>
                    </xs:simpleType>
                </xs:attribute>
            </xs:extension>
        </xs:simpleContent>
    </xs:complexType>

    <xs:complexType name="SILinearValue.Type" abstract="false" mixed="false">
        <xs:annotation>
            <xs:documentation source="documentation">
                The SILinearValue derivedType is the container for the linear measurements in terms of an
                SI unit.
            </xs:documentation>
        </xs:annotation>
        <xs:simpleContent>
            <xs:extension base="xs:decimal">
                <xs:attribute name="unit" use="required">
                    <xs:simpleType>
                        <xs:restriction base="xs:string">
                            <xs:enumeration value="Millimeter" />
                            <xs:enumeration value="Centimeter" />
                            <xs:enumeration value="Meter" />
                            <xs:enumeration value="Kilometer" />
                        </xs:restriction>
                    </xs:simpleType>
                </xs:attribute>
            </xs:extension>
        </xs:simpleContent>
    </xs:complexType>

    <xs:complexType name="TextToSpeechSupplement.Type" abstract="false" mixed="false">
        <xs:annotation>
            <xs:documentation source="documentation">
                This provides the source of the supplementary accessibility information.
            </xs:documentation>
        </xs:annotation>
        <xs:complexContent>
            <xs:extension base="EmptyPrimitiveType.Type">
                <xs:attribute name="source" use="required" type="xs:anyURI" />
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <xs:complexType name="USLinearValue.Type" abstract="false" mixed="false">
        <xs:annotation>
            <xs:documentation source="documentation">
                The USLinearValue derivedType is the container for the linear measurements in terms of US
                units.
            </xs:documentation>
        </xs:annotation>
        <xs:simpleContent>
            <xs:extension base="xs:decimal">
                <xs:attribute name="unit" use="required">
                    <xs:simpleType>
                        <xs:restriction base="xs:string">
                            <xs:enumeration value="Inch" />
                            <xs:enumeration value="Foot" />
                            <xs:enumeration value="Yard" />
                            <xs:enumeration value="Mile" />
                        </xs:restriction>
                    </xs:simpleType>
                </xs:attribute>
            </xs:extension>
        </xs:simpleContent>
    </xs:complexType>

    <!-- ================================================================================================== -->

    <!-- Declaration of the elements (Complex) ************************************************************ -->

    <!-- ================================================================================================== -->

    <!-- Declaration of the elements (Derived) ************************************************************ -->

    <!-- ================================================================================================== -->

    <!-- Declaration of the root element(s) *************************************************************** -->

    <!-- ================================================================================================== -->

    <!-- APIP QTI EXTENSION INCLUSION -->

    <!-- QTI HTML5 INCLUSION -->

    <!-- Generate Global Attributes (non-assigned) ******************************************************** -->

    <!-- ================================================================================================== -->

    <!-- Generate Global Attributes *********************************************************************** -->

    <xs:attributeGroup name="autoplay.Audio.Attr">
        <xs:attribute name="autoplay" use="optional" type="xs:boolean" />
    </xs:attributeGroup>

    <xs:attributeGroup name="controls.Audio.Attr">
        <xs:attribute name="controls" use="optional" type="xs:boolean" />
    </xs:attributeGroup>

    <xs:attributeGroup name="crossorigin.Audio.Attr">
        <xs:attribute name="crossorigin" use="optional">
            <xs:simpleType>
                <xs:restriction base="xs:string">
                    <xs:enumeration value="anonymous" />
                    <xs:enumeration value="use-credentials" />
                </xs:restriction>
            </xs:simpleType>
        </xs:attribute>
    </xs:attributeGroup>

    <xs:attributeGroup name="loop.Audio.Attr">
        <xs:attribute name="loop" use="optional" type="xs:boolean" />
    </xs:attributeGroup>

    <xs:attributeGroup name="mediagroup.Audio.Attr">
        <xs:attribute name="mediagroup" use="optional" type="xs:normalizedString" />
    </xs:attributeGroup>

    <xs:attributeGroup name="muted.Audio.Attr">
        <xs:attribute name="muted" use="optional" type="xs:boolean" />
    </xs:attributeGroup>

    <xs:attributeGroup name="preload.Audio.Attr">
        <xs:attribute name="preload" use="required" fixed="metadata">
            <xs:simpleType>
                <xs:restriction base="xs:string">
                    <xs:enumeration value="none" />
                    <xs:enumeration value="auto" />
                    <xs:enumeration value="metadata" />
                </xs:restriction>
            </xs:simpleType>
        </xs:attribute>
    </xs:attributeGroup>

    <xs:attributeGroup name="src.Audio.Attr">
        <xs:attribute name="src" use="optional" type="URL.Type" />
    </xs:attributeGroup>

    <xs:attributeGroup name="aria-controls.BaseHTML5.Attr">
        <xs:attribute name="aria-controls" use="optional">
            <xs:simpleType>
                <xs:list itemType="ElementIDList.Type" />
            </xs:simpleType>
        </xs:attribute>
    </xs:attributeGroup>

    <xs:attributeGroup name="aria-describedby.BaseHTML5.Attr">
        <xs:attribute name="aria-describedby" use="optional">
            <xs:simpleType>
                <xs:list itemType="ElementIDList.Type" />
            </xs:simpleType>
        </xs:attribute>
    </xs:attributeGroup>

    <xs:attributeGroup name="aria-flowto.BaseHTML5.Attr">
        <xs:attribute name="aria-flowto" use="optional">
            <xs:simpleType>
                <xs:list itemType="ElementIDList.Type" />
            </xs:simpleType>
        </xs:attribute>
    </xs:attributeGroup>

    <xs:attributeGroup name="aria-label.BaseHTML5.Attr">
        <xs:attribute name="aria-label" use="optional" type="xs:normalizedString" />
    </xs:attributeGroup>

    <xs:attributeGroup name="aria-labelledby.BaseHTML5.Attr">
        <xs:attribute name="aria-labelledby" use="optional">
            <xs:simpleType>
                <xs:list itemType="ElementIDList.Type" />
            </xs:simpleType>
        </xs:attribute>
    </xs:attributeGroup>

    <xs:attributeGroup name="aria-level.BaseHTML5.Attr">
        <xs:attribute name="aria-level" use="optional" type="AriaLevelInteger.Type" />
    </xs:attributeGroup>

    <xs:attributeGroup name="aria-live.BaseHTML5.Attr">
        <xs:attribute name="aria-live" use="optional" default="off">
            <xs:simpleType>
                <xs:restriction base="xs:string">
                    <xs:enumeration value="off" />
                    <xs:enumeration value="polite" />
                    <xs:enumeration value="assertive" />
                </xs:restriction>
            </xs:simpleType>
        </xs:attribute>
    </xs:attributeGroup>

    <xs:attributeGroup name="aria-orientation.BaseHTML5.Attr">
        <xs:attribute name="aria-orientation" use="optional" default="horizontal">
            <xs:simpleType>
                <xs:restriction base="xs:string">
                    <xs:enumeration value="vertical" />
                    <xs:enumeration value="horizontal" />
                </xs:restriction>
            </xs:simpleType>
        </xs:attribute>
    </xs:attributeGroup>

    <xs:attributeGroup name="aria-owns.BaseHTML5.Attr">
        <xs:attribute name="aria-owns" use="optional">
            <xs:simpleType>
                <xs:list itemType="ElementIDList.Type" />
            </xs:simpleType>
        </xs:attribute>
    </xs:attributeGroup>

    <xs:attributeGroup name="class.BaseHTML5.Attr">
        <xs:attribute name="class" use="optional">
            <xs:simpleType>
                <xs:list itemType="StringList.Type" />
            </xs:simpleType>
        </xs:attribute>
    </xs:attributeGroup>

    <xs:attributeGroup name="dataExtension.BaseHTML5.Attr">
        <xs:anyAttribute namespace = "##any" processContents = "lax" />
    </xs:attributeGroup>

    <xs:attributeGroup name="dir.BaseHTML5.Attr">
        <xs:attribute name="dir" use="optional" default="auto">
            <xs:simpleType>
                <xs:restriction base="xs:string">
                    <xs:enumeration value="ltr" />
                    <xs:enumeration value="rtl" />
                    <xs:enumeration value="auto" />
                </xs:restriction>
            </xs:simpleType>
        </xs:attribute>
    </xs:attributeGroup>

    <xs:attributeGroup name="id.BaseHTML5.Attr">
        <xs:attribute name="id" use="optional" type="UniqueIdentifier.Type" />
    </xs:attributeGroup>

    <xs:attributeGroup name="label.BaseHTML5.Attr">
        <xs:attribute name="label" use="optional" type="xs:normalizedString" />
    </xs:attributeGroup>

    <xs:attributeGroup name="language.BaseHTML5.Attr">
        <xs:attribute ref="xml:lang" use="optional" />
    </xs:attributeGroup>

    <xs:attributeGroup name="role.BaseHTML5.Attr">
        <xs:attribute name="role" use="optional">
            <xs:simpleType>
                <xs:restriction base="xs:string">
                    <xs:enumeration value="alert" />                        <!-- Added 20170106 -->
                    <xs:enumeration value="alertdialog" />                  <!-- Added 20170106 -->
                    <xs:enumeration value="application" />                  <!-- Added 20170106 -->
                    <xs:enumeration value="article" />
                    <xs:enumeration value="banner" />                       <!-- Added 20170106 -->
                    <xs:enumeration value="button" />
                    <xs:enumeration value="checkbox" />
                    <xs:enumeration value="columnheader" />
                    <xs:enumeration value="combobox" />                     <!-- Added 20170106 -->
                    <xs:enumeration value="complementary" />
                    <xs:enumeration value="contentinfo" />
                    <xs:enumeration value="definition" />
                    <xs:enumeration value="dialog" />                       <!-- Added 20170106 -->
                    <xs:enumeration value="directory" />
                    <xs:enumeration value="document" />
                    <xs:enumeration value="form" />                         <!-- Added 20170106 -->
                    <xs:enumeration value="grid" />                         <!-- Added 20170106 -->
                    <xs:enumeration value="gridcell" />
                    <xs:enumeration value="group" />
                    <xs:enumeration value="heading" />
                    <xs:enumeration value="img" />
                    <xs:enumeration value="link" />
                    <xs:enumeration value="list" />
                    <xs:enumeration value="listbox" />
                    <xs:enumeration value="listitem" />
                    <xs:enumeration value="log" />
                    <xs:enumeration value="main" />                         <!-- Added 20170106 -->
                    <xs:enumeration value="marquee" />                      <!-- Added 20170106 -->
                    <xs:enumeration value="math" />
                    <xs:enumeration value="menu" />                         <!-- Added 20170106 -->
                    <xs:enumeration value="menubar" />                      <!-- Added 20170106 -->
                    <xs:enumeration value="menuitem" />                     <!-- Added 20170106 -->
                    <xs:enumeration value="menuitemcheckbox" />             <!-- Added 20170106 -->
                    <xs:enumeration value="menuitemradio" />                <!-- Added 20170106 -->
                    <xs:enumeration value="navigation" />                   <!-- Added 20170106 -->
                    <xs:enumeration value="note" />
                    <xs:enumeration value="option" />
                    <xs:enumeration value="presentation" />
                    <xs:enumeration value="progressbar" />                  <!-- Added 20170106 -->
                    <xs:enumeration value="radio" />
                    <xs:enumeration value="radiogroup" />
                    <xs:enumeration value="region" />
                    <xs:enumeration value="row" />
                    <xs:enumeration value="rowgroup" />
                    <xs:enumeration value="rowheader" />
                    <xs:enumeration value="scrollbar" />                    <!-- Added 20170106 -->
                    <xs:enumeration value="search" />                       <!-- Added 20170106 -->
                    <xs:enumeration value="separator" />
                    <xs:enumeration value="slider" />
                    <xs:enumeration value="spinbutton" />
                    <xs:enumeration value="status" />
                    <xs:enumeration value="tab" />
                    <xs:enumeration value="tablist" />
                    <xs:enumeration value="tabpanel" />
                    <xs:enumeration value="textbox" />
                    <xs:enumeration value="timer" />
                    <xs:enumeration value="toolbar" />
                    <xs:enumeration value="tooltip" />                      <!-- Added 20170106 -->
                    <xs:enumeration value="tree" />                         <!-- Added 20170106 -->
                    <xs:enumeration value="treegrid" />                     <!-- Added 20170106 -->
                    <xs:enumeration value="treeitem" />                     <!-- Added 20170106 -->
                </xs:restriction>
            </xs:simpleType>
        </xs:attribute>
    </xs:attributeGroup>

    <xs:attributeGroup name="title.BaseHTML5.Attr">
        <xs:attribute name="title" use="optional" type="xs:normalizedString" />
    </xs:attributeGroup>

    <xs:attributeGroup name="aria-controls.BaseHTML5Empty.Attr">
        <xs:attribute name="aria-controls" use="optional">
            <xs:simpleType>
                <xs:list itemType="ElementIDList.Type" />
            </xs:simpleType>
        </xs:attribute>
    </xs:attributeGroup>

    <xs:attributeGroup name="aria-describedby.BaseHTML5Empty.Attr">
        <xs:attribute name="aria-describedby" use="optional">
            <xs:simpleType>
                <xs:list itemType="ElementIDList.Type" />
            </xs:simpleType>
        </xs:attribute>
    </xs:attributeGroup>

    <xs:attributeGroup name="aria-flowto.BaseHTML5Empty.Attr">
        <xs:attribute name="aria-flowto" use="optional">
            <xs:simpleType>
                <xs:list itemType="ElementIDList.Type" />
            </xs:simpleType>
        </xs:attribute>
    </xs:attributeGroup>

    <xs:attributeGroup name="aria-label.BaseHTML5Empty.Attr">
        <xs:attribute name="aria-label" use="optional" type="xs:normalizedString" />
    </xs:attributeGroup>

    <xs:attributeGroup name="aria-labelledby.BaseHTML5Empty.Attr">
        <xs:attribute name="aria-labelledby" use="optional">
            <xs:simpleType>
                <xs:list itemType="ElementIDList.Type" />
            </xs:simpleType>
        </xs:attribute>
    </xs:attributeGroup>

    <xs:attributeGroup name="aria-level.BaseHTML5Empty.Attr">
        <xs:attribute name="aria-level" use="optional" type="AriaLevelInteger.Type" />
    </xs:attributeGroup>

    <xs:attributeGroup name="aria-live.BaseHTML5Empty.Attr">
        <xs:attribute name="aria-live" use="optional" default="off">
            <xs:simpleType>
                <xs:restriction base="xs:string">
                    <xs:enumeration value="off" />
                    <xs:enumeration value="polite" />
                    <xs:enumeration value="assertive" />
                </xs:restriction>
            </xs:simpleType>
        </xs:attribute>
    </xs:attributeGroup>

    <xs:attributeGroup name="aria-orientation.BaseHTML5Empty.Attr">
        <xs:attribute name="aria-orientation" use="optional" default="horizontal">
            <xs:simpleType>
                <xs:restriction base="xs:string">
                    <xs:enumeration value="vertical" />
                    <xs:enumeration value="horizontal" />
                </xs:restriction>
            </xs:simpleType>
        </xs:attribute>
    </xs:attributeGroup>

    <xs:attributeGroup name="aria-owns.BaseHTML5Empty.Attr">
        <xs:attribute name="aria-owns" use="optional">
            <xs:simpleType>
                <xs:list itemType="ElementIDList.Type" />
            </xs:simpleType>
        </xs:attribute>
    </xs:attributeGroup>

    <xs:attributeGroup name="class.BaseHTML5Empty.Attr">
        <xs:attribute name="class" use="optional">
            <xs:simpleType>
                <xs:list itemType="StringList.Type" />
            </xs:simpleType>
        </xs:attribute>
    </xs:attributeGroup>

    <xs:attributeGroup name="dataExtension.BaseHTML5Empty.Attr">
        <xs:anyAttribute namespace = "##any" processContents = "lax" />
    </xs:attributeGroup>

    <xs:attributeGroup name="dir.BaseHTML5Empty.Attr">
        <xs:attribute name="dir" use="optional" default="auto">
            <xs:simpleType>
                <xs:restriction base="xs:string">
                    <xs:enumeration value="ltr" />
                    <xs:enumeration value="rtl" />
                    <xs:enumeration value="auto" />
                </xs:restriction>
            </xs:simpleType>
        </xs:attribute>
    </xs:attributeGroup>

    <xs:attributeGroup name="id.BaseHTML5Empty.Attr">
        <xs:attribute name="id" use="optional" type="UniqueIdentifier.Type" />
    </xs:attributeGroup>

    <xs:attributeGroup name="label.BaseHTML5Empty.Attr">
        <xs:attribute name="label" use="optional" type="xs:normalizedString" />
    </xs:attributeGroup>

    <xs:attributeGroup name="language.BaseHTML5Empty.Attr">
        <xs:attribute ref="xml:lang" use="optional" />
    </xs:attributeGroup>

    <xs:attributeGroup name="role.BaseHTML5Empty.Attr">
        <xs:attribute name="role" use="optional">
            <xs:simpleType>
                <xs:restriction base="xs:string">
                    <xs:enumeration value="alert" />                        <!-- Added 20170106 -->
                    <xs:enumeration value="alertdialog" />                  <!-- Added 20170106 -->
                    <xs:enumeration value="application" />                  <!-- Added 20170106 -->
                    <xs:enumeration value="article" />
                    <xs:enumeration value="banner" />                       <!-- Added 20170106 -->
                    <xs:enumeration value="button" />
                    <xs:enumeration value="checkbox" />
                    <xs:enumeration value="columnheader" />
                    <xs:enumeration value="combobox" />                     <!-- Added 20170106 -->
                    <xs:enumeration value="complementary" />
                    <xs:enumeration value="contentinfo" />
                    <xs:enumeration value="definition" />
                    <xs:enumeration value="dialog" />                       <!-- Added 20170106 -->
                    <xs:enumeration value="directory" />
                    <xs:enumeration value="document" />
                    <xs:enumeration value="form" />                         <!-- Added 20170106 -->
                    <xs:enumeration value="grid" />                         <!-- Added 20170106 -->
                    <xs:enumeration value="gridcell" />
                    <xs:enumeration value="group" />
                    <xs:enumeration value="heading" />
                    <xs:enumeration value="img" />
                    <xs:enumeration value="link" />
                    <xs:enumeration value="list" />
                    <xs:enumeration value="listbox" />
                    <xs:enumeration value="listitem" />
                    <xs:enumeration value="log" />
                    <xs:enumeration value="main" />                         <!-- Added 20170106 -->
                    <xs:enumeration value="marquee" />                      <!-- Added 20170106 -->
                    <xs:enumeration value="math" />
                    <xs:enumeration value="menu" />                         <!-- Added 20170106 -->
                    <xs:enumeration value="menubar" />                      <!-- Added 20170106 -->
                    <xs:enumeration value="menuitem" />                     <!-- Added 20170106 -->
                    <xs:enumeration value="menuitemcheckbox" />             <!-- Added 20170106 -->
                    <xs:enumeration value="menuitemradio" />                <!-- Added 20170106 -->
                    <xs:enumeration value="navigation" />                   <!-- Added 20170106 -->
                    <xs:enumeration value="note" />
                    <xs:enumeration value="option" />
                    <xs:enumeration value="presentation" />
                    <xs:enumeration value="progressbar" />                  <!-- Added 20170106 -->
                    <xs:enumeration value="radio" />
                    <xs:enumeration value="radiogroup" />
                    <xs:enumeration value="region" />
                    <xs:enumeration value="row" />
                    <xs:enumeration value="rowgroup" />
                    <xs:enumeration value="rowheader" />
                    <xs:enumeration value="scrollbar" />                    <!-- Added 20170106 -->
                    <xs:enumeration value="search" />                       <!-- Added 20170106 -->
                    <xs:enumeration value="separator" />
                    <xs:enumeration value="slider" />
                    <xs:enumeration value="spinbutton" />
                    <xs:enumeration value="status" />
                    <xs:enumeration value="tab" />
                    <xs:enumeration value="tablist" />
                    <xs:enumeration value="tabpanel" />
                    <xs:enumeration value="textbox" />
                    <xs:enumeration value="timer" />
                    <xs:enumeration value="toolbar" />
                    <xs:enumeration value="tooltip" />                      <!-- Added 20170106 -->
                    <xs:enumeration value="tree" />                         <!-- Added 20170106 -->
                    <xs:enumeration value="treegrid" />                     <!-- Added 20170106 -->
                    <xs:enumeration value="treeitem" />                     <!-- Added 20170106 -->
                </xs:restriction>
            </xs:simpleType>
        </xs:attribute>
    </xs:attributeGroup>

    <xs:attributeGroup name="title.BaseHTML5Empty.Attr">
        <xs:attribute name="title" use="optional" type="xs:normalizedString" />
    </xs:attributeGroup>

    <xs:attributeGroup name="src.Source.Attr">
        <xs:attribute name="src" use="required" type="URL.Type" />
    </xs:attributeGroup>

    <xs:attributeGroup name="type.Source.Attr">
        <xs:attribute name="type" use="optional" type="MimeType.Type" />
    </xs:attributeGroup>

    <xs:attributeGroup name="default.Track.Attr">
        <xs:attribute name="default" use="optional" type="xs:boolean" />
    </xs:attributeGroup>

    <xs:attributeGroup name="kind.Track.Attr">
        <xs:attribute name="kind" use="optional" default="subtitles">
            <xs:simpleType>
                <xs:restriction base="xs:string">
                    <xs:enumeration value="subtitles" />
                    <xs:enumeration value="captions" />
                    <xs:enumeration value="descriptions" />
                    <xs:enumeration value="chapters" />
                    <xs:enumeration value="metadata" />
                </xs:restriction>
            </xs:simpleType>
        </xs:attribute>
    </xs:attributeGroup>

    <xs:attributeGroup name="src.Track.Attr">
        <xs:attribute name="src" use="required" type="URL.Type" />
    </xs:attributeGroup>

    <xs:attributeGroup name="srclang.Track.Attr">
        <xs:attribute name="srclang" use="optional" type="xs:normalizedString" />
    </xs:attributeGroup>

    <xs:attributeGroup name="autoplay.Video.Attr">
        <xs:attribute name="autoplay" use="optional" type="xs:boolean" />
    </xs:attributeGroup>

    <xs:attributeGroup name="controls.Video.Attr">
        <xs:attribute name="controls" use="optional" type="xs:boolean" />
    </xs:attributeGroup>

    <xs:attributeGroup name="crossorigin.Video.Attr">
        <xs:attribute name="crossorigin" use="optional">
            <xs:simpleType>
                <xs:restriction base="xs:string">
                    <xs:enumeration value="anonymous" />
                    <xs:enumeration value="use-credentials" />
                </xs:restriction>
            </xs:simpleType>
        </xs:attribute>
    </xs:attributeGroup>

    <xs:attributeGroup name="height.Video.Attr">
        <xs:attribute name="height" use="optional" type="xs:nonNegativeInteger" />
    </xs:attributeGroup>

    <xs:attributeGroup name="loop.Video.Attr">
        <xs:attribute name="loop" use="optional" type="xs:boolean" />
    </xs:attributeGroup>

    <xs:attributeGroup name="mediagroup.Video.Attr">
        <xs:attribute name="mediagroup" use="optional" type="xs:normalizedString" />
    </xs:attributeGroup>

    <xs:attributeGroup name="muted.Video.Attr">
        <xs:attribute name="muted" use="optional" type="xs:boolean" />
    </xs:attributeGroup>

    <xs:attributeGroup name="poster.Video.Attr">
        <xs:attribute name="poster" use="optional" type="URL.Type" />
    </xs:attributeGroup>

    <xs:attributeGroup name="preload.Video.Attr">
        <xs:attribute name="preload" use="optional" default="metadata">
            <xs:simpleType>
                <xs:restriction base="xs:string">
                    <xs:enumeration value="none" />
                    <xs:enumeration value="auto" />
                    <xs:enumeration value="metadata" />
                </xs:restriction>
            </xs:simpleType>
        </xs:attribute>
    </xs:attributeGroup>

    <xs:attributeGroup name="src.Video.Attr">
        <xs:attribute name="src" use="optional" type="URL.Type" />
    </xs:attributeGroup>

    <xs:attributeGroup name="width.Video.Attr">
        <xs:attribute name="width" use="optional" type="xs:nonNegativeInteger" />
    </xs:attributeGroup>

    <!-- ================================================================================================== -->

    <!-- Generate Global List Types *********************************************************************** -->

    <!-- ================================================================================================== -->

    <!-- Generate Namespaced extension Group  ************************************************************* -->

    <!-- ================================================================================================== -->

    <!-- Generate Special DataTypes  ********************************************************************** -->

    <!-- ================================================================================================== -->

    <!-- Generate the enumerated simpleType declarations ************************************************** -->

    <!-- ================================================================================================== -->

    <!-- Generate the simpleType elements based on IMS data-types (Parameter) ***************************** -->

    <!-- ================================================================================================== -->

    <!-- Generate the simpleType elements based on IMS data-types (Derived) ******************************* -->

    <!-- ================================================================================================== -->

    <!-- Generate the simpleType elements based on IMS data-types (Union) ********************************* -->

    <!-- ================================================================================================== -->

    <!-- Generate the simpleType elements based on IMS data-types (Complex) ******************************* -->

    <!-- ================================================================================================== -->

    <!-- Generate the derived data-type elements based upon simpleType ************************************ -->

    <xs:simpleType name="AriaLevelInteger.Type">
        <xs:restriction base="xs:integer">
            <xs:minInclusive value="1" />
        </xs:restriction>
    </xs:simpleType>

    <xs:simpleType name="URL.Type">
        <xs:restriction base="xs:normalizedString" />
    </xs:simpleType>

    <!-- ================================================================================================== -->

    <!-- Generate the derived data-type elements based upon derived simpleType **************************** -->

    <!-- ================================================================================================== -->

    <!-- Generate the ComplexTypes ************************************************************************ -->

    <xs:complexType name="Article.Type" abstract="false" mixed="true">
        <xs:annotation>
            <xs:documentation source="documentation">
                This defines the permitted content for the HTML5 'article' tag. The article tag represents
                a complete, or self-contained, composition in a document, page, application, or site and
                that is, in principle, independently distributable or reusable, e.g. in syndication. This
                could be a forum post, a magazine or newspaper article, a blog entry, a user-submitted co-
                mment, an interactive widget or gadget, or any other independent item of content. When ar-
                ticle tags are nested, the inner article tags represent articles that are in principle re-
                lated to the contents of the outer article. For instance, a blog entry on a site that acc-
                epts user-submitted comments could represent the comments as article elements nested with-
                in the article tag for the blog entry. Author information associated with an article tag
                (q.v. the address tag) does not apply to nested article tags.
            </xs:documentation>
        </xs:annotation>
        <xs:complexContent>
            <xs:extension base="BaseHTML5.Type">
                <xs:sequence>
                    <xs:choice minOccurs="0" maxOccurs="unbounded">
                        <xs:element ref="m3:math" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="xi:include" minOccurs="1" maxOccurs="1" />
                        <xs:choice minOccurs="0" maxOccurs="unbounded">
                            <xs:element ref="img" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="br" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="object" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="em" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="a" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="code" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="span" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="sub" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="acronym" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="big" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="tt" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="kbd" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="q" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="i" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="dfn" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="abbr" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="strong" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="sup" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="var" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="small" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="samp" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="b" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="cite" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="bdo" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="bdi" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="figure" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="audio" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="video" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="label" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="article" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="aside" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="footer" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="header" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="nav" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="section" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="pre" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="h1" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="h2" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="h3" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="h4" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="h5" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="h6" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="p" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="address" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="dl" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="ol" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="ul" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="hr" minOccurs="1" maxOccurs="1" />
                            <xs:choice minOccurs="0" maxOccurs="unbounded">
                                <xs:element ref="ssml:p" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="ssml:s" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="ssml:say-as" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="ssml:phoneme" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="ssml:sub" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="ssml:voice" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="ssml:emphasis" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="ssml:break" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="ssml:prosody" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="ssml:mark" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="ssml:audio" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="ssml:speak" minOccurs="1" maxOccurs="1" />
                            </xs:choice>
                            <xs:element ref="ruby" minOccurs="1" maxOccurs="1" />
                        </xs:choice>
                    </xs:choice>
                </xs:sequence>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <xs:complexType name="Aside.Type" abstract="false" mixed="true">
        <xs:annotation>
            <xs:documentation source="documentation">
                This defines the permitted content for the HTML5 'aside' tag. The aside tag represents a
                section of a page that consists of content that is tangentially related to the content ar-
                ound the aside tag, and which could be considered separate from that content. Such sectio-
                ns are often represented as sidebars in printed typography. The tag can be used for typog-
                raphical effects like pull quotes or sidebars, for advertising, for groups of nav tags, a-
                nd for other content that is considered separate from the main content of the page.
            </xs:documentation>
        </xs:annotation>
        <xs:complexContent>
            <xs:extension base="BaseHTML5.Type">
                <xs:sequence>
                    <xs:choice minOccurs="0" maxOccurs="unbounded">
                        <xs:element ref="m3:math" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="xi:include" minOccurs="1" maxOccurs="1" />
                        <xs:choice minOccurs="0" maxOccurs="unbounded">
                            <xs:element ref="img" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="br" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="object" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="em" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="a" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="code" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="span" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="sub" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="acronym" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="big" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="tt" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="kbd" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="q" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="i" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="dfn" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="abbr" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="strong" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="sup" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="var" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="small" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="samp" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="b" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="cite" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="bdo" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="bdi" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="figure" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="audio" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="video" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="label" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="article" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="aside" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="footer" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="header" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="nav" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="section" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="pre" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="h1" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="h2" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="h3" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="h4" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="h5" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="h6" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="p" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="address" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="dl" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="ol" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="ul" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="hr" minOccurs="1" maxOccurs="1" />
                            <xs:choice minOccurs="0" maxOccurs="unbounded">
                                <xs:element ref="ssml:p" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="ssml:s" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="ssml:say-as" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="ssml:phoneme" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="ssml:sub" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="ssml:voice" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="ssml:emphasis" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="ssml:break" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="ssml:prosody" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="ssml:mark" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="ssml:audio" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="ssml:speak" minOccurs="1" maxOccurs="1" />
                            </xs:choice>
                            <xs:element ref="ruby" minOccurs="1" maxOccurs="1" />
                        </xs:choice>
                    </xs:choice>
                </xs:sequence>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <xs:complexType name="Audio.Type" abstract="false" mixed="false">
        <xs:annotation>
            <xs:documentation source="documentation">
                The 'audio' tag is an HTML5 feature. An audio tag represents a sound or audio stream. Con-
                tent may be provided inside the audio tag. User agents should not show this content to the
                user; it is intended for older Web browsers which do not support audio, so that legacy au-
                dio plugins can be tried, or to show text to the users of these older browsers informing
                them of how to access the audio contents.
            </xs:documentation>
        </xs:annotation>
        <xs:complexContent>
            <xs:extension base="BaseHTML5.Type">
                <xs:sequence>
                    <xs:element ref="source" minOccurs="0" maxOccurs="unbounded" />
                    <xs:element ref="track" minOccurs="0" maxOccurs="unbounded" />
                </xs:sequence>
                <xs:attributeGroup ref="src.Audio.Attr" />
                <xs:attributeGroup ref="crossorigin.Audio.Attr" />
                <xs:attributeGroup ref="preload.Audio.Attr" />
                <xs:attributeGroup ref="autoplay.Audio.Attr" />
                <xs:attributeGroup ref="mediagroup.Audio.Attr" />
                <xs:attributeGroup ref="loop.Audio.Attr" />
                <xs:attributeGroup ref="muted.Audio.Attr" />
                <xs:attributeGroup ref="controls.Audio.Attr" />
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <xs:complexType name="BaseHTML5.Type" abstract="false" mixed="false">
        <xs:annotation>
            <xs:documentation source="documentation">
                This is the base class for the HTML5 features that have children. This consists of a set
                of children characteristics.
            </xs:documentation>
        </xs:annotation>
        <xs:sequence>
        </xs:sequence>
        <xs:attributeGroup ref="id.BaseHTML5.Attr" />
        <xs:attributeGroup ref="language.BaseHTML5.Attr" />
        <xs:attributeGroup ref="title.BaseHTML5.Attr" />
        <xs:attributeGroup ref="label.BaseHTML5.Attr" />
        <xs:attributeGroup ref="class.BaseHTML5.Attr" />
        <xs:attributeGroup ref="dir.BaseHTML5.Attr" />
        <xs:attributeGroup ref="role.BaseHTML5.Attr" />
        <xs:attributeGroup ref="aria-controls.BaseHTML5.Attr" />
        <xs:attributeGroup ref="aria-describedby.BaseHTML5.Attr" />
        <xs:attributeGroup ref="aria-flowto.BaseHTML5.Attr" />
        <xs:attributeGroup ref="aria-label.BaseHTML5.Attr" />
        <xs:attributeGroup ref="aria-labelledby.BaseHTML5.Attr" />
        <xs:attributeGroup ref="aria-level.BaseHTML5.Attr" />
        <xs:attributeGroup ref="aria-live.BaseHTML5.Attr" />
        <xs:attributeGroup ref="aria-orientation.BaseHTML5.Attr" />
        <xs:attributeGroup ref="aria-owns.BaseHTML5.Attr" />
        <xs:attributeGroup ref="dataExtension.BaseHTML5.Attr" />
        <!--  NEW ADDITION (2016-11-28) -->
        <xs:attribute name = "data-catalog-idref" use="optional" type="xs:IDREF" />
        <!--  ************************* -->
        <!--  NEW ADDITION (2017-01-04) -->
        <xs:attribute name = "aria-hidden" use="optional" type="xs:boolean" default="false"/>
        <xs:attribute name = "data-qti-suppress-tts" use="optional">
            <xs:simpleType>
                <xs:restriction base="xs:string">
                    <xs:enumeration value="computer-read-aloud" />
                    <xs:enumeration value="screen-reader" />
                    <xs:enumeration value="all" />
                </xs:restriction>
            </xs:simpleType>
        </xs:attribute>
        <!--  ************************* -->
        <!--  NEW ADDITION (2017-01-06) -->
        <xs:attribute name = "aria-activedescendant" use="optional" type="xs:IDREF" />
        <xs:attribute name = "aria-atomic" use="optional" type="xs:boolean" default="false" />
        <xs:attribute name = "aria-autocomplete" use="optional" default="none">
            <xs:simpleType>
                <xs:restriction base="xs:string">
                    <xs:enumeration value="inline" />
                    <xs:enumeration value="list" />
                    <xs:enumeration value="both" />
                    <xs:enumeration value="none" />
                </xs:restriction>
            </xs:simpleType>
        </xs:attribute>
        <xs:attribute name = "aria-busy" use="optional" type="xs:boolean" default="false" />
        <xs:attribute name = "aria-checked" use="optional" default="undefined">
            <xs:simpleType>
                <xs:restriction base="xs:string">
                    <xs:enumeration value="true" />
                    <xs:enumeration value="false" />
                    <xs:enumeration value="mixed" />
                    <xs:enumeration value="undefined" />
                </xs:restriction>
            </xs:simpleType>
        </xs:attribute>
        <xs:attribute name = "aria-disabled" use="optional" type="xs:boolean" default="false" />
        <xs:attribute name="aria-dropeffect" use="optional" default="none">
            <xs:simpleType>
                <xs:list itemType="DropEffectList.Type" />
            </xs:simpleType>
        </xs:attribute>
        <xs:attribute name = "aria-expanded" use="optional" default="undefined">
            <xs:simpleType>
                <xs:restriction base="xs:string">
                    <xs:enumeration value="true" />
                    <xs:enumeration value="false" />
                    <xs:enumeration value="undefined" />
                </xs:restriction>
            </xs:simpleType>
        </xs:attribute>
        <xs:attribute name = "aria-grabbed" use="optional" default="undefined">
            <xs:simpleType>
                <xs:restriction base="xs:string">
                    <xs:enumeration value="true" />
                    <xs:enumeration value="false" />
                    <xs:enumeration value="undefined" />
                </xs:restriction>
            </xs:simpleType>
        </xs:attribute>
        <xs:attribute name = "aria-haspopup" use="optional" type="xs:boolean" default="false" />
        <xs:attribute name = "aria-invalid" use="optional" default="false">
            <xs:simpleType>
                <xs:restriction base="xs:string">
                    <xs:enumeration value="true" />
                    <xs:enumeration value="false" />
                    <xs:enumeration value="grammar" />
                    <xs:enumeration value="spelling" />
                </xs:restriction>
            </xs:simpleType>
        </xs:attribute>
        <xs:attribute name = "aria-multiline" use="optional" type="xs:boolean" default="false" />
        <xs:attribute name = "aria-multiselectable" use="optional" type="xs:boolean" default="false" />
        <xs:attribute name = "aria-posinset" use="optional" type="ARIALevelInteger.Type" />
        <xs:attribute name = "aria-pressed" use="optional" default="undefined">
            <xs:simpleType>
                <xs:restriction base="xs:string">
                    <xs:enumeration value="true" />
                    <xs:enumeration value="false" />
                    <xs:enumeration value="mixed" />
                    <xs:enumeration value="undefined" />
                </xs:restriction>
            </xs:simpleType>
        </xs:attribute>
        <xs:attribute name = "aria-readonly" use="optional" type="xs:boolean" default="false" />
        <xs:attribute name="aria-relevant" use="optional" default="additions text">
            <xs:simpleType>
                <xs:list itemType="RelevantList.Type" />
            </xs:simpleType>
        </xs:attribute>
        <xs:attribute name = "aria-required" use="optional" type="xs:boolean" default="false" />
        <xs:attribute name = "aria-selected" use="optional" default="undefined">
            <xs:simpleType>
                <xs:restriction base="xs:string">
                    <xs:enumeration value="true" />
                    <xs:enumeration value="false" />
                    <xs:enumeration value="undefined" />
                </xs:restriction>
            </xs:simpleType>
        </xs:attribute>
        <xs:attribute name = "aria-setsize" use="optional" type="xs:positiveInteger" />
        <xs:attribute name = "aria-sort" use="optional" default="none">
            <xs:simpleType>
                <xs:restriction base="xs:string">
                    <xs:enumeration value="ascending" />
                    <xs:enumeration value="descending" />
                    <xs:enumeration value="none" />
                    <xs:enumeration value="other" />
                </xs:restriction>
            </xs:simpleType>
        </xs:attribute>
        <xs:attribute name = "aria-valuemax" use="optional" type="xs:decimal" />
        <xs:attribute name = "aria-valuemin" use="optional" type="xs:decimal" />
        <xs:attribute name = "aria-valuenow" use="optional" type="xs:decimal" />
        <xs:attribute name = "aria-valuetext" use="optional" type="xs:string" />
        <!--  ************************* -->
    </xs:complexType>

    <xs:complexType name="BDI.Type" abstract="false" mixed="true">
        <xs:annotation>
            <xs:documentation source="documentation">
                This defines the content for defining bidirectional content. The bdi tag represents a span
                of text that is to be isolated from its surroundings for the purposes of bidirectional te-
                xt formatting.
            </xs:documentation>
        </xs:annotation>
        <xs:complexContent>
            <xs:extension base="BaseHTML5.Type">
                <xs:sequence>
                    <xs:choice minOccurs="0" maxOccurs="unbounded">
                        <xs:element ref="img" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="br" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="object" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="em" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="a" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="code" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="span" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="sub" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="acronym" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="big" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="tt" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="kbd" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="q" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="i" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="dfn" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="abbr" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="strong" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="sup" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="var" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="small" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="samp" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="b" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="cite" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="bdo" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="bdi" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="figure" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="audio" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="video" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="label" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="article" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="aside" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="footer" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="header" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="nav" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="section" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="pre" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="h1" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="h2" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="h3" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="h4" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="h5" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="h6" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="p" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="address" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="dl" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="ol" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="ul" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="hr" minOccurs="1" maxOccurs="1" />
                        <xs:choice minOccurs="0" maxOccurs="unbounded">
                            <xs:element ref="ssml:p" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="ssml:s" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="ssml:say-as" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="ssml:phoneme" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="ssml:sub" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="ssml:voice" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="ssml:emphasis" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="ssml:break" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="ssml:prosody" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="ssml:mark" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="ssml:audio" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="ssml:speak" minOccurs="1" maxOccurs="1" />
                        </xs:choice>
                        <xs:element ref="ruby" minOccurs="1" maxOccurs="1" />
                    </xs:choice>
                </xs:sequence>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <xs:complexType name="FigCaption.Type" abstract="false" mixed="true">
        <xs:annotation>
            <xs:documentation source="documentation">
                This defines the permitted content for the HTML5 'figcaption' tag. The 'figcaption' eleme-
                nt represents a caption or legend for the rest of the contents of the figcaption element's
                parent figure element, if any.
            </xs:documentation>
        </xs:annotation>
        <xs:complexContent>
            <xs:extension base="BaseHTML5.Type">
                <xs:sequence>
                    <xs:choice minOccurs="0" maxOccurs="unbounded">
                        <xs:element ref="m3:math" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="xi:include" minOccurs="1" maxOccurs="1" />
                        <xs:choice minOccurs="0" maxOccurs="unbounded">
                            <xs:element ref="img" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="br" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="object" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="em" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="a" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="code" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="span" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="sub" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="acronym" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="big" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="tt" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="kbd" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="q" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="i" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="dfn" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="abbr" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="strong" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="sup" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="var" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="small" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="samp" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="b" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="cite" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="bdo" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="bdi" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="figure" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="audio" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="video" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="label" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="article" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="aside" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="footer" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="header" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="nav" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="section" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="pre" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="h1" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="h2" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="h3" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="h4" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="h5" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="h6" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="p" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="address" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="dl" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="ol" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="ul" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="hr" minOccurs="1" maxOccurs="1" />
                            <xs:choice minOccurs="0" maxOccurs="unbounded">
                                <xs:element ref="ssml:p" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="ssml:s" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="ssml:say-as" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="ssml:phoneme" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="ssml:sub" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="ssml:voice" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="ssml:emphasis" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="ssml:break" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="ssml:prosody" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="ssml:mark" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="ssml:audio" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="ssml:speak" minOccurs="1" maxOccurs="1" />
                            </xs:choice>
                            <xs:element ref="ruby" minOccurs="1" maxOccurs="1" />
                        </xs:choice>
                    </xs:choice>
                </xs:sequence>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <xs:complexType name="Figure.Type" abstract="false" mixed="true">
        <xs:annotation>
            <xs:documentation source="documentation">
                This defines the permitted content for the HTML5 'figure' tag. The 'figure' tag represents
                some flow content, optionally with a caption, that is self-contained (like a complete sen-
                tence) and is typically referenced as a single unit from the main flow of the document.
            </xs:documentation>
        </xs:annotation>
        <xs:complexContent>
            <xs:extension base="BaseHTML5.Type">
                <xs:choice minOccurs = "0" maxOccurs = "unbounded">
                    <xs:element ref="figcaption" minOccurs="0" maxOccurs="1" />
                    <xs:choice minOccurs="0" maxOccurs="unbounded">
                        <xs:element ref="img" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="br" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="object" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="em" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="a" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="code" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="span" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="sub" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="acronym" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="big" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="tt" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="kbd" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="q" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="i" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="dfn" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="abbr" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="strong" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="sup" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="var" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="small" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="samp" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="b" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="cite" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="bdo" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="bdi" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="figure" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="audio" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="video" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="label" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="article" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="aside" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="footer" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="header" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="nav" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="section" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="pre" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="h1" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="h2" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="h3" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="h4" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="h5" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="h6" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="p" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="address" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="dl" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="ol" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="ul" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="hr" minOccurs="1" maxOccurs="1" />
                        <xs:choice minOccurs="0" maxOccurs="unbounded">
                            <xs:element ref="ssml:p" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="ssml:s" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="ssml:say-as" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="ssml:phoneme" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="ssml:sub" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="ssml:voice" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="ssml:emphasis" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="ssml:break" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="ssml:prosody" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="ssml:mark" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="ssml:audio" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="ssml:speak" minOccurs="1" maxOccurs="1" />
                        </xs:choice>
                        <xs:element ref="ruby" minOccurs="1" maxOccurs="1" />
                    </xs:choice>
                </xs:choice>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <xs:complexType name="Footer.Type" abstract="false" mixed="true">
        <xs:annotation>
            <xs:documentation source="documentation">
                This defines the permitted content for the HTML5 'footer' tag. The footer tag represents a
                footer for its nearest ancestor sectioning content or sectioning root element. A footer t-
                ypically contains information about its section such as who wrote it, links to related do-
                cuments, copyright data, and the like.
            </xs:documentation>
        </xs:annotation>
        <xs:complexContent>
            <xs:extension base="BaseHTML5.Type">
                <xs:sequence>
                    <xs:choice minOccurs="0" maxOccurs="unbounded">
                        <xs:element ref="m3:math" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="xi:include" minOccurs="1" maxOccurs="1" />
                        <xs:choice minOccurs="0" maxOccurs="unbounded">
                            <xs:element ref="img" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="br" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="object" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="em" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="a" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="code" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="span" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="sub" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="acronym" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="big" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="tt" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="kbd" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="q" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="i" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="dfn" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="abbr" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="strong" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="sup" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="var" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="small" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="samp" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="b" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="cite" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="bdo" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="bdi" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="figure" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="audio" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="video" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="label" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="article" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="aside" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="footer" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="header" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="nav" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="section" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="pre" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="h1" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="h2" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="h3" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="h4" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="h5" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="h6" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="p" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="address" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="dl" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="ol" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="ul" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="hr" minOccurs="1" maxOccurs="1" />
                            <xs:choice minOccurs="0" maxOccurs="unbounded">
                                <xs:element ref="ssml:p" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="ssml:s" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="ssml:say-as" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="ssml:phoneme" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="ssml:sub" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="ssml:voice" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="ssml:emphasis" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="ssml:break" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="ssml:prosody" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="ssml:mark" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="ssml:audio" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="ssml:speak" minOccurs="1" maxOccurs="1" />
                            </xs:choice>
                            <xs:element ref="ruby" minOccurs="1" maxOccurs="1" />
                        </xs:choice>
                    </xs:choice>
                </xs:sequence>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <xs:complexType name="Header.Type" abstract="false" mixed="true">
        <xs:annotation>
            <xs:documentation source="documentation">
                This defines the permitted content for the HTML5 'header' tag. The header tag represents
                introductory content for its nearest ancestor sectioning content or sectioning root tag. A
                header typically contains a group of introductory or navigational aids.
            </xs:documentation>
        </xs:annotation>
        <xs:complexContent>
            <xs:extension base="BaseHTML5.Type">
                <xs:sequence>
                    <xs:choice minOccurs="0" maxOccurs="unbounded">
                        <xs:element ref="m3:math" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="xi:include" minOccurs="1" maxOccurs="1" />
                        <xs:choice minOccurs="0" maxOccurs="unbounded">
                            <xs:element ref="img" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="br" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="object" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="em" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="a" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="code" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="span" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="sub" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="acronym" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="big" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="tt" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="kbd" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="q" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="i" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="dfn" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="abbr" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="strong" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="sup" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="var" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="small" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="samp" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="b" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="cite" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="bdo" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="bdi" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="figure" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="audio" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="video" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="label" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="article" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="aside" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="footer" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="header" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="nav" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="section" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="pre" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="h1" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="h2" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="h3" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="h4" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="h5" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="h6" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="p" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="address" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="dl" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="ol" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="ul" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="hr" minOccurs="1" maxOccurs="1" />
                            <xs:choice minOccurs="0" maxOccurs="unbounded">
                                <xs:element ref="ssml:p" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="ssml:s" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="ssml:say-as" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="ssml:phoneme" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="ssml:sub" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="ssml:voice" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="ssml:emphasis" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="ssml:break" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="ssml:prosody" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="ssml:mark" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="ssml:audio" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="ssml:speak" minOccurs="1" maxOccurs="1" />
                            </xs:choice>
                            <xs:element ref="ruby" minOccurs="1" maxOccurs="1" />
                        </xs:choice>
                    </xs:choice>
                </xs:sequence>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <xs:complexType name="Label.Type" abstract="false" mixed="true">
        <xs:annotation>
            <xs:documentation source="documentation">
                This defines the permitted content for the HTML5 'label' tag. The label tag represents a
                caption in a user interface. The caption can be associated with a specific form control,
                known as the label element's labeled control, either using the for attribute, or by putti-
                ng the form control inside the label element itself. Except where otherwise specified by
                the following rules, a label element has no labeled control.
            </xs:documentation>
        </xs:annotation>
        <xs:complexContent>
            <xs:extension base="BaseHTML5.Type">
                <xs:sequence>
                    <xs:choice minOccurs="0" maxOccurs="unbounded">
                        <xs:element ref="m3:math" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="xi:include" minOccurs="1" maxOccurs="1" />
                        <xs:choice minOccurs="0" maxOccurs="unbounded">
                            <xs:element ref="img" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="br" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="object" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="em" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="a" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="code" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="span" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="sub" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="acronym" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="big" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="tt" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="kbd" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="q" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="i" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="dfn" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="abbr" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="strong" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="sup" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="var" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="small" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="samp" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="b" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="cite" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="bdo" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="bdi" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="figure" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="audio" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="video" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="label" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="article" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="aside" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="footer" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="header" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="nav" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="section" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="pre" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="h1" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="h2" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="h3" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="h4" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="h5" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="h6" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="p" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="address" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="dl" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="ol" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="ul" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="hr" minOccurs="1" maxOccurs="1" />
                            <xs:choice minOccurs="0" maxOccurs="unbounded">
                                <xs:element ref="ssml:p" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="ssml:s" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="ssml:say-as" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="ssml:phoneme" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="ssml:sub" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="ssml:voice" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="ssml:emphasis" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="ssml:break" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="ssml:prosody" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="ssml:mark" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="ssml:audio" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="ssml:speak" minOccurs="1" maxOccurs="1" />
                            </xs:choice>
                            <xs:element ref="ruby" minOccurs="1" maxOccurs="1" />
                        </xs:choice>
                    </xs:choice>
                </xs:sequence>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <xs:complexType name="Nav.Type" abstract="false" mixed="true">
        <xs:annotation>
            <xs:documentation source="documentation">
                This defines the permitted content for the HTML5 'nav' tag. The nav tag represents a sect-
                ion of a page that links to other pages or to parts within the page: a section with navig-
                ation links.
            </xs:documentation>
        </xs:annotation>
        <xs:complexContent>
            <xs:extension base="BaseHTML5.Type">
                <xs:sequence>
                    <xs:choice minOccurs="0" maxOccurs="unbounded">
                        <xs:element ref="m3:math" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="xi:include" minOccurs="1" maxOccurs="1" />
                        <xs:choice minOccurs="0" maxOccurs="unbounded">
                            <xs:element ref="img" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="br" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="object" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="em" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="a" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="code" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="span" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="sub" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="acronym" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="big" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="tt" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="kbd" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="q" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="i" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="dfn" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="abbr" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="strong" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="sup" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="var" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="small" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="samp" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="b" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="cite" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="bdo" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="bdi" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="figure" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="audio" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="video" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="label" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="article" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="aside" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="footer" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="header" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="nav" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="section" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="pre" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="h1" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="h2" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="h3" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="h4" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="h5" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="h6" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="p" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="address" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="dl" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="ol" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="ul" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="hr" minOccurs="1" maxOccurs="1" />
                            <xs:choice minOccurs="0" maxOccurs="unbounded">
                                <xs:element ref="ssml:p" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="ssml:s" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="ssml:say-as" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="ssml:phoneme" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="ssml:sub" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="ssml:voice" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="ssml:emphasis" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="ssml:break" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="ssml:prosody" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="ssml:mark" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="ssml:audio" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="ssml:speak" minOccurs="1" maxOccurs="1" />
                            </xs:choice>
                            <xs:element ref="ruby" minOccurs="1" maxOccurs="1" />
                        </xs:choice>
                    </xs:choice>
                </xs:sequence>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <xs:complexType name="RB.Type" abstract="false" mixed="true">
        <xs:annotation>
            <xs:documentation source="documentation">
                This feature is a part of the HTML5 Ruby annotation. The rb tag marks the base text compo-
                nent of a ruby annotation. When it is the child of a ruby tag, it doesn't represent anyth-
                ing itself, but its parent ruby tag uses it as part of determining what it represents.
            </xs:documentation>
        </xs:annotation>
        <xs:complexContent>
            <xs:extension base="BaseHTML5.Type">
                <xs:sequence>
                    <xs:choice minOccurs="0" maxOccurs="unbounded">
                        <xs:element ref="a" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="abbr" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="b" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="bdo" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="br" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="cite" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="code" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="dfn" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="em" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="i" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="img" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="kbd" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="object" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="q" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="samp" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="small" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="span" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="strong" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="sub" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="sup" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="var" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="audio" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="bdi" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="label" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="ruby" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="video" minOccurs="1" maxOccurs="1" />
                    </xs:choice>
                </xs:sequence>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <xs:complexType name="RP.Type" abstract="false" mixed="true">
        <xs:annotation>
            <xs:documentation source="documentation">
                This feature is a part of the HTML5 Ruby annotation. The 'rp' tag is used to provide fall-
                back text to be shown by user agents that don't support ruby annotations. One widespread
                convention is to provide parentheses around the ruby text component of a ruby annotation.
                The contents of the rp tags are typically not displayed by user agents which do support r-
                uby annotations. An rp tag that is a child of a ruby tag represents nothing. An rp element
                whose parent tag is not a ruby tag represents its children.
            </xs:documentation>
        </xs:annotation>
        <xs:complexContent>
            <xs:extension base="BaseHTML5.Type">
                <xs:sequence>
                    <xs:choice minOccurs="0" maxOccurs="unbounded">
                        <xs:element ref="a" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="abbr" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="b" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="bdo" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="br" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="cite" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="code" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="dfn" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="em" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="i" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="img" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="kbd" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="object" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="q" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="samp" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="small" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="span" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="strong" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="sub" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="sup" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="var" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="audio" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="bdi" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="label" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="ruby" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="video" minOccurs="1" maxOccurs="1" />
                    </xs:choice>
                </xs:sequence>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <xs:complexType name="RT.Type" abstract="false" mixed="true">
        <xs:annotation>
            <xs:documentation source="documentation">
                This feature is a part of the HTML5 Ruby annotation. The 'rt' tag marks the ruby text com-
                ponent of a ruby annotation. When it is the child of a ruby tag or of an rtc tag that is
                itself the child of a ruby tag, it doesn't represent anything itself, but its ancestor ru-
                by tag uses it as part of determining what it represents.
            </xs:documentation>
        </xs:annotation>
        <xs:complexContent>
            <xs:extension base="BaseHTML5.Type">
                <xs:sequence>
                    <xs:choice minOccurs="0" maxOccurs="unbounded">
                        <xs:element ref="a" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="abbr" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="b" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="bdo" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="br" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="cite" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="code" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="dfn" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="em" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="i" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="img" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="kbd" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="object" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="q" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="samp" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="small" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="span" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="strong" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="sub" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="sup" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="var" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="audio" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="bdi" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="label" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="ruby" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="video" minOccurs="1" maxOccurs="1" />
                    </xs:choice>
                </xs:sequence>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <xs:complexType name="RTC.Type" abstract="false" mixed="true">
        <xs:annotation>
            <xs:documentation source="documentation">
                This feature is a part of the HTML5 Ruby annotation. The 'rtc' tag marks a ruby text cont-
                ainer for ruby text components in a ruby annotation. When it is the child of a ruby tag it
                doesn't represent anything itself, but its parent ruby tag uses it as part of determining
                what it represents. An rtc tag that is not a child of a ruby tag represents the same thing
                as its children.
            </xs:documentation>
        </xs:annotation>
        <xs:complexContent>
            <xs:extension base="BaseHTML5.Type">
                <xs:choice>
                    <xs:choice minOccurs="0" maxOccurs="unbounded">
                        <xs:element ref="a" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="abbr" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="b" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="bdo" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="br" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="cite" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="code" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="dfn" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="em" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="i" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="img" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="kbd" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="object" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="q" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="samp" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="small" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="span" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="strong" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="sub" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="sup" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="var" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="audio" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="bdi" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="label" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="ruby" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="video" minOccurs="1" maxOccurs="1" />
                    </xs:choice>
                    <xs:element ref="rt" minOccurs="0" maxOccurs="unbounded" />
                </xs:choice>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <xs:complexType name="Ruby.Type" abstract="false" mixed="true">
        <xs:annotation>
            <xs:documentation source="documentation">
                This feature is a part of the HTML5 Ruby annotation. The ruby tag allows one or more spans
                of phrasing content to be marked with ruby annotations. Ruby annotations are short runs of
                text presented alongside base text, primarily used in East Asian typography as a guide for
                pronunciation or to include other annotations. In Japanese, this form of typography is al-
                so known as furigana. Ruby text can appear on either side, and sometimes both sides, of t-
                he base text, and it is possible to control its position using CSS.
            </xs:documentation>
        </xs:annotation>
        <xs:complexContent>
            <xs:extension base="BaseHTML5.Type">
                <xs:sequence>
                    <xs:choice minOccurs="0" maxOccurs="unbounded">
                        <xs:choice minOccurs="1" maxOccurs="1">
                            <xs:choice minOccurs="0" maxOccurs="unbounded">
                                <xs:element ref="a" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="abbr" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="b" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="bdo" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="br" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="cite" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="code" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="dfn" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="em" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="i" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="img" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="kbd" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="object" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="q" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="samp" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="small" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="span" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="strong" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="sub" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="sup" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="var" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="audio" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="bdi" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="label" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="ruby" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="video" minOccurs="1" maxOccurs="1" />
                            </xs:choice>
                            <xs:element ref="rb" minOccurs="0" maxOccurs="unbounded" />
                        </xs:choice>
                        <xs:choice minOccurs="0" maxOccurs="unbounded">
                            <xs:element ref="rp" minOccurs="0" maxOccurs="1" />
                            <xs:choice minOccurs="1" maxOccurs="1">
                                <xs:element ref="rt" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="rtc" minOccurs="1" maxOccurs="1" />
                            </xs:choice>
                        </xs:choice>
                    </xs:choice>
                </xs:sequence>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <xs:complexType name="Section.Type" abstract="false" mixed="true">
        <xs:annotation>
            <xs:documentation source="documentation">
                This defines the permitted content for the HTML5 'section' tag. The section tag represents
                a generic section of a document or application. A section, in this context, is a thematic
                grouping of content. The theme of each section should be identified, typically by includi-
                ng a heading (h1-h6 tag) as a child of the section tag.
            </xs:documentation>
        </xs:annotation>
        <xs:complexContent>
            <xs:extension base="BaseHTML5.Type">
                <xs:sequence>
                    <xs:choice minOccurs="0" maxOccurs="unbounded">
                        <xs:element ref="m3:math" minOccurs="1" maxOccurs="1" />
                        <xs:element ref="xi:include" minOccurs="1" maxOccurs="1" />
                        <xs:choice minOccurs="0" maxOccurs="unbounded">
                            <xs:element ref="img" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="br" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="object" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="em" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="a" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="code" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="span" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="sub" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="acronym" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="big" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="tt" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="kbd" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="q" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="i" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="dfn" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="abbr" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="strong" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="sup" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="var" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="small" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="samp" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="b" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="cite" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="bdo" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="bdi" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="figure" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="audio" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="video" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="label" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="article" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="aside" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="footer" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="header" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="nav" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="section" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="pre" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="h1" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="h2" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="h3" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="h4" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="h5" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="h6" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="p" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="address" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="dl" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="ol" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="ul" minOccurs="1" maxOccurs="1" />
                            <xs:element ref="hr" minOccurs="1" maxOccurs="1" />
                            <xs:choice minOccurs="0" maxOccurs="unbounded">
                                <xs:element ref="ssml:p" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="ssml:s" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="ssml:say-as" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="ssml:phoneme" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="ssml:sub" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="ssml:voice" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="ssml:emphasis" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="ssml:break" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="ssml:prosody" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="ssml:mark" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="ssml:audio" minOccurs="1" maxOccurs="1" />
                                <xs:element ref="ssml:speak" minOccurs="1" maxOccurs="1" />
                            </xs:choice>
                            <xs:element ref="ruby" minOccurs="1" maxOccurs="1" />
                        </xs:choice>
                    </xs:choice>
                </xs:sequence>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <xs:complexType name="Source.Type" abstract="false" mixed="false">
        <xs:annotation>
            <xs:documentation source="documentation">
                The 'source' tag is an HTML5 feature. The source tag allows authors to specify multiple a-
                lternative media resources for media tags. It does not represent anything on its own.
            </xs:documentation>
        </xs:annotation>
        <xs:complexContent>
            <xs:extension base="BaseHTML5Empty.Type">
                <xs:attributeGroup ref="src.Source.Attr" />
                <xs:attributeGroup ref="type.Source.Attr" />
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <xs:complexType name="Track.Type" abstract="false" mixed="false">
        <xs:annotation>
            <xs:documentation source="documentation">
                The 'track' tag is an HTML5 feature. The track tag allows authors to specify explicit ext-
                ernal timed text tracks for media elements. It does not represent anything on its own.
            </xs:documentation>
        </xs:annotation>
        <xs:complexContent>
            <xs:extension base="BaseHTML5Empty.Type">
                <xs:attributeGroup ref="kind.Track.Attr" />
                <xs:attributeGroup ref="src.Track.Attr" />
                <xs:attributeGroup ref="srclang.Track.Attr" />
                <xs:attributeGroup ref="default.Track.Attr" />
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <xs:complexType name="Video.Type" abstract="false" mixed="false">
        <xs:annotation>
            <xs:documentation source="documentation">
                The 'video' tag is an HTML5 feature. A video tag is used for playing videos or movies, and
                audio files with captions.
            </xs:documentation>
        </xs:annotation>
        <xs:complexContent>
            <xs:extension base="BaseHTML5.Type">
                <xs:sequence>
                    <xs:element ref="source" minOccurs="0" maxOccurs="unbounded" />
                    <xs:element ref="track" minOccurs="0" maxOccurs="unbounded" />
                </xs:sequence>
                <xs:attributeGroup ref="src.Video.Attr" />
                <xs:attributeGroup ref="crossorigin.Video.Attr" />
                <xs:attributeGroup ref="preload.Video.Attr" />
                <xs:attributeGroup ref="autoplay.Video.Attr" />
                <xs:attributeGroup ref="mediagroup.Video.Attr" />
                <xs:attributeGroup ref="loop.Video.Attr" />
                <xs:attributeGroup ref="muted.Video.Attr" />
                <xs:attributeGroup ref="controls.Video.Attr" />
                <xs:attributeGroup ref="poster.Video.Attr" />
                <xs:attributeGroup ref="width.Video.Attr" />
                <xs:attributeGroup ref="height.Video.Attr" />
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <!-- ================================================================================================== -->

    <!-- Generate the derived ComplexTypes **************************************************************** -->

    <xs:complexType name="BaseHTML5Empty.Type" abstract="false" mixed="false">
        <xs:annotation>
            <xs:documentation source="documentation">
                This is the base class for the HTML5 features that have no children tags i.e. must be emp-
                ty. This consists of a set of children characteristics.
            </xs:documentation>
        </xs:annotation>
        <xs:complexContent>
            <xs:extension base="EmptyPrimitiveType.Type">
                <xs:attributeGroup ref="id.BaseHTML5Empty.Attr" />
                <xs:attributeGroup ref="language.BaseHTML5Empty.Attr" />
                <xs:attributeGroup ref="title.BaseHTML5Empty.Attr" />
                <xs:attributeGroup ref="label.BaseHTML5Empty.Attr" />
                <xs:attributeGroup ref="class.BaseHTML5Empty.Attr" />
                <xs:attributeGroup ref="dir.BaseHTML5Empty.Attr" />
                <xs:attributeGroup ref="role.BaseHTML5Empty.Attr" />
                <xs:attributeGroup ref="aria-controls.BaseHTML5Empty.Attr" />
                <xs:attributeGroup ref="aria-describedby.BaseHTML5Empty.Attr" />
                <xs:attributeGroup ref="aria-flowto.BaseHTML5Empty.Attr" />
                <xs:attributeGroup ref="aria-label.BaseHTML5Empty.Attr" />
                <xs:attributeGroup ref="aria-labelledby.BaseHTML5Empty.Attr" />
                <xs:attributeGroup ref="aria-level.BaseHTML5Empty.Attr" />
                <xs:attributeGroup ref="aria-live.BaseHTML5Empty.Attr" />
                <xs:attributeGroup ref="aria-orientation.BaseHTML5Empty.Attr" />
                <xs:attributeGroup ref="aria-owns.BaseHTML5Empty.Attr" />
                <xs:attributeGroup ref="dataExtension.BaseHTML5Empty.Attr" />
                <!--  NEW ADDITION (2016-11-28) -->
                <xs:attribute name = "data-catalog-idref" use="optional" type="xs:IDREF" />
                <!--  ************************* -->
                <!--  NEW ADDITION (2017-01-04) -->
                <xs:attribute name = "aria-hidden" use="optional" type="xs:boolean" default="false"/>
                <xs:attribute name = "data-qti-suppress-tts" use="optional">
                    <xs:simpleType>
                        <xs:restriction base="xs:string">
                            <xs:enumeration value="computer-read-aloud" />
                            <xs:enumeration value="screen-reader" />
                            <xs:enumeration value="all" />
                        </xs:restriction>
                    </xs:simpleType>
                </xs:attribute>
                <!--  ************************* -->
                <!--  NEW ADDITION (2017-01-06) -->
                <xs:attribute name = "aria-activedescendant" use="optional" type="xs:IDREF" />
                <xs:attribute name = "aria-atomic" use="optional" type="xs:boolean" default="false" />
                <xs:attribute name = "aria-autocomplete" use="optional" default="none">
                    <xs:simpleType>
                        <xs:restriction base="xs:string">
                            <xs:enumeration value="inline" />
                            <xs:enumeration value="list" />
                            <xs:enumeration value="both" />
                            <xs:enumeration value="none" />
                        </xs:restriction>
                    </xs:simpleType>
                </xs:attribute>
                <xs:attribute name = "aria-busy" use="optional" type="xs:boolean" default="false" />
                <xs:attribute name = "aria-checked" use="optional" default="undefined">
                    <xs:simpleType>
                        <xs:restriction base="xs:string">
                            <xs:enumeration value="true" />
                            <xs:enumeration value="false" />
                            <xs:enumeration value="mixed" />
                            <xs:enumeration value="undefined" />
                        </xs:restriction>
                    </xs:simpleType>
                </xs:attribute>
                <xs:attribute name = "aria-disabled" use="optional" type="xs:boolean" default="false" />
                <xs:attribute name="aria-dropeffect" use="optional" default="none">
                    <xs:simpleType>
                        <xs:list itemType="DropEffectList.Type" />
                    </xs:simpleType>
                </xs:attribute>
                <xs:attribute name = "aria-expanded" use="optional" default="undefined">
                    <xs:simpleType>
                        <xs:restriction base="xs:string">
                            <xs:enumeration value="true" />
                            <xs:enumeration value="false" />
                            <xs:enumeration value="undefined" />
                        </xs:restriction>
                    </xs:simpleType>
                </xs:attribute>
                <xs:attribute name = "aria-grabbed" use="optional" default="undefined">
                    <xs:simpleType>
                        <xs:restriction base="xs:string">
                            <xs:enumeration value="true" />
                            <xs:enumeration value="false" />
                            <xs:enumeration value="undefined" />
                        </xs:restriction>
                    </xs:simpleType>
                </xs:attribute>
                <xs:attribute name = "aria-haspopup" use="optional" type="xs:boolean" default="false" />
                <xs:attribute name = "aria-invalid" use="optional" default="false">
                    <xs:simpleType>
                        <xs:restriction base="xs:string">
                            <xs:enumeration value="true" />
                            <xs:enumeration value="false" />
                            <xs:enumeration value="grammar" />
                            <xs:enumeration value="spelling" />
                        </xs:restriction>
                    </xs:simpleType>
                </xs:attribute>
                <xs:attribute name = "aria-multiline" use="optional" type="xs:boolean" default="false" />
                <xs:attribute name = "aria-multiselectable" use="optional" type="xs:boolean" default="false" />
                <xs:attribute name = "aria-posinset" use="optional" type="ARIALevelInteger.Type" />
                <xs:attribute name = "aria-pressed" use="optional" default="undefined">
                    <xs:simpleType>
                        <xs:restriction base="xs:string">
                            <xs:enumeration value="true" />
                            <xs:enumeration value="false" />
                            <xs:enumeration value="mixed" />
                            <xs:enumeration value="undefined" />
                        </xs:restriction>
                    </xs:simpleType>
                </xs:attribute>
                <xs:attribute name = "aria-readonly" use="optional" type="xs:boolean" default="false" />
                <xs:attribute name="aria-relevant" use="optional" default="additions text">
                    <xs:simpleType>
                        <xs:list itemType="RelevantList.Type" />
                    </xs:simpleType>
                </xs:attribute>
                <xs:attribute name = "aria-required" use="optional" type="xs:boolean" default="false" />
                <xs:attribute name = "aria-selected" use="optional" default="undefined">
                    <xs:simpleType>
                        <xs:restriction base="xs:string">
                            <xs:enumeration value="true" />
                            <xs:enumeration value="false" />
                            <xs:enumeration value="undefined" />
                        </xs:restriction>
                    </xs:simpleType>
                </xs:attribute>
                <xs:attribute name = "aria-setsize" use="optional" type="xs:positiveInteger" />
                <xs:attribute name = "aria-sort" use="optional" default="none">
                    <xs:simpleType>
                        <xs:restriction base="xs:string">
                            <xs:enumeration value="ascending" />
                            <xs:enumeration value="descending" />
                            <xs:enumeration value="none" />
                            <xs:enumeration value="other" />
                        </xs:restriction>
                    </xs:simpleType>
                </xs:attribute>
                <xs:attribute name = "aria-valuemax" use="optional" type="xs:decimal" />
                <xs:attribute name = "aria-valuemin" use="optional" type="xs:decimal" />
                <xs:attribute name = "aria-valuenow" use="optional" type="xs:decimal" />
                <xs:attribute name = "aria-valuetext" use="optional" type="xs:string" />
                <!--  ************************* -->
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <!-- ================================================================================================== -->

    <!-- Declaration of the elements (Complex) ************************************************************ -->

    <!-- ================================================================================================== -->

    <!-- Declaration of the elements (Derived) ************************************************************ -->

    <!-- ================================================================================================== -->

    <!-- Declaration of the root element(s) *************************************************************** -->

    <xs:element name="article" type="Article.Type" />
    <xs:element name="aside" type="Aside.Type" />
    <xs:element name="audio" type="Audio.Type" />
    <xs:element name="bdi" type="BDI.Type" />
    <xs:element name="figcaption" type="FigCaption.Type" />
    <xs:element name="figure" type="Figure.Type" />
    <xs:element name="footer" type="Footer.Type" />
    <xs:element name="header" type="Header.Type" />
    <xs:element name="label" type="Label.Type" />
    <xs:element name="nav" type="Nav.Type" />
    <xs:element name="rb" type="RB.Type" />
    <xs:element name="rp" type="RP.Type" />
    <xs:element name="rt" type="RT.Type" />
    <xs:element name="rtc" type="RTC.Type" />
    <xs:element name="ruby" type="Ruby.Type" />
    <xs:element name="section" type="Section.Type" />
    <xs:element name="source" type="Source.Type" />
    <xs:element name="track" type="Track.Type" />
    <xs:element name="video" type="Video.Type" />

    <!-- ================================================================================================== -->

    <!-- QTI HTML5 INCLUSION -->

</xs:schema>
